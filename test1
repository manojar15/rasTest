application_1752432472682_70837 HIVE-806518dd-cd68-4de2-99b7-0d7d8c84a641 1240GB 155vCores
hive_20250728211822_c0332bc9-9690-41b9-9f43-b8a8b0ea0a4b
2025-07-28 21 18  Executing command(queryId=hive_20250728211822_c0332bc9-9690-41b9-9f43-b8a8b0ea0a4b)  CREATE TEMPORARY TABLE ULR014_TEMP1 as 							SELECT A.FULL_DATE,A.argblr_bill_status,A.argblr_bill_due_date, A.argblr_paid_date, 								A.AR_ID_ITEM   AS LN_NBR, 								replace(concat_ws(',',NVL(E.NME_LNE,''), NVL(E.DEST_LINE1_HOME,''),NVL(E.DEST_LINE2_HOME,''),NVL(E.LOC_LINE1_HOME,'' 								),NVL(E.LOC_CITY_HOME,''),NVL(E.LOC_STATE_HOME,''),NVL(E.LOC_POSTAL_CODE_HOME,'')),',,','') AS NME_ADDR, 								B.RACLR_INTRST_TYPE  AS INT_TYP, 								B.ARBLR_CNTRCT_AMT AS ORG_LN_AMT, 								NVL(replace(datediff(to_date(NVL(A.argblr_bill_due_date,' ')), to_date(NVL(A.argblr_paid_date,' '))),'-',''),' ') AS DYS_PD_AHD, 								C.OTSNDG_PRNCPL_BAL  AS PRIN_BAL, 								B.IP_ID_PRMRY  AS CUST_NBR, 								B.ENART_VALUE  AS PROC_TYP, 								CASE WHEN D.CNTRT_CODE IN ('NoOfExtsnsForDlqcyPayment','NoOfExtsnsForDelinquency','NoOfExtsnsForPromotional','NoOfExtsnsForPymntDueDateChange') 								AND D.CNPT_VALUE = 'LifeToDate' THEN D.AACPTL_CNTR ELSE '' END    AS DQ_EXT_NBR_MOS, 								C.LTCHG_RCVBL  AS LTE_CHRGS_DUE, 								B.APADL_VALUE  AS PROC_STAT, 								C.TOTAL_FEE_RCVBL  AS FEES_DUE, 								CASE WHEN E.home_phnbr IS NOT NULL THEN E.home_phnbr ELSE E.mobile_phnbr END AS PRI_PHN_EXT, 								A.ARGBLR_BILL_AMT  AS PMT_AMT, 								concat(10,'-',case when cntrt_code = 'TimesPastDue1' AND cnpt_value = 'LifeToDate' then aacptl_cntr else 0 end ) as cnt_1, 								concat(20,'-',case when cntrt_code = 'TimesPastDue2' AND cnpt_value = 'LifeToDate' then aacptl_cntr else 0 end ) as cnt_2, 								concat(30,'-',case when cntrt_code = 'TimesPastDue3' AND cnpt_value = 'LifeToDate' then aacptl_cntr else 0 end ) as cnt_3, 								concat(60,'-',case when cntrt_code = 'TimesPastDue4' AND cnpt_value = 'LifeToDate' then aacptl_cntr else 0 end ) as cnt_4, 								concat(90,'-',case when cntrt_code = 'TimesPastDue5' AND cnpt_value = 'LifeToDate' then aacptl_cntr else 0 end ) as cnt_5, 								E.business_phnbr  AS BUS_PHN_EXT, 								NVL(cast((from_unixtime(unix_timestamp(cast(A.argblr_paid_date as date)), 'MM-dd-yyyy')) as string),'') AS PD_DTE, 								B.AR_ID_ITEM_ORG_UNIT  AS BRNCH, 								NVL(cast((from_unixtime(unix_timestamp(cast(c.PAST_DUE_DATE as date)), 'MM-dd-yyyy')) as string),'') AS OLD_DUE_DTE, 								B.APD_CODE  AS PROD_CDE, 								B.APD_NAME  AS PROD_NME,A.LDBID as LDBID, B.AR_ID_ITEM_OU_SERV as AR_ID_ITEM_OU_SERV 								FROM uat7400_racs11.RT_AR_GEN_BILL_HIST_LN_RL A 								LEFT JOIN uat7400_racs11.RT_APD_AR_MSTR_LN_RL B ON A.AR_ID_ITEM=B.AR_ID_ITEM and A.LDBID=B.LDBID 								LEFT JOIN (SELECT C1.* from uat7400_racs11.RT_AR_DLY_BAL_LN_RL AS C1 														JOIN (SELECT MAX(FULL_DATE) as FULL_DATE FROM uat7400_racs11.RT_AR_DLY_BAL_LN_RL 														) AS C2 														ON C1.FULL_DATE = C2.FULL_DATE) AS C 														ON A.AR_ID_ITEM=C.AR_ID_ITEM and A.LDBID=C.LDBID 								LEFT JOIN (SELECT D1.* from uat7400_racs11.TB_APD_AR_CNTR_PERIOD_LN_RL AS D1 														JOIN (SELECT MAX(FULL_DATE) as FULL_DATE FROM uat7400_racs11.TB_APD_AR_CNTR_PERIOD_LN_RL 														) AS D2 														ON D1.FULL_DATE = D2.FULL_DATE) AS D 														ON A.AR_ID_ITEM=D.ARID_ITEM and A.LDBID=D.LDBID 								LEFT JOIN uat7400_racs11.TB_CUST_MSTR_IP E ON B.IP_ID_PRMRY=E.EC_IP_ID AND B.LDBID=E.LDBID 								WHERE A.argblr_bill_status = 'Paid' 								AND  A.argblr_bill_due_date > A.argblr_paid_date and  A.argblr_paid_date between '2025-07-28' and '2025-07-28'
hive_20250728211946_93117e67-b8b7-4f0a-8040-4fae91f791b8
2025-07-28 21 19  Executing command(queryId=hive_20250728211946_93117e67-b8b7-4f0a-8040-4fae91f791b8)  CREATE TEMPORARY TABLE ULR014_TEMP2 AS  							SELECT  								LN_NBR, 								NME_ADDR, 								INT_TYP, 								ORG_LN_AMT, 								DYS_PD_AHD, 								PRIN_BAL, 								CUST_NBR, 								PROC_TYP, 								cast(sum(DQ_EXT_NBR_MOS) as int) as DQ_EXT_NBR_MOS, 								LTE_CHRGS_DUE, 								PROC_STAT, 								FEES_DUE, 								PRI_PHN_EXT, 								PMT_AMT, 								concat_ws(',',collect_set(concat_ws(',',cnt_1,cnt_2,cnt_3,cnt_4,cnt_5))) as CREDIT_HIST, 								BUS_PHN_EXT, 								PD_DTE, 								BRNCH, 								OLD_DUE_DTE, 								PROD_CDE, 								PROD_NME,LDBID 								FROM ULR014_TEMP1 							WHERE ('7400'='99999998' OR NVL(LDBID,'') IN (SELECT EXPLODE(SPLIT('7400',',')))) 							AND ('99999998'='99999998' OR NVL(AR_ID_ITEM_OU_SERV,'') IN (SELECT EXPLODE(SPLIT('99999998',',')))) 							GROUP BY LN_NBR,NME_ADDR,INT_TYP,ORG_LN_AMT,DYS_PD_AHD,PRIN_BAL,CUST_NBR,PROC_TYP, 							LTE_CHRGS_DUE,PROC_STAT,FEES_DUE,PRI_PHN_EXT,PMT_AMT,BUS_PHN_EXT,PD_DTE,BRNCH,OLD_DUE_DTE, 							PROD_CDE,PROD_NME,LDBID
hive_20250728211951_708da9cb-6939-499f-b210-65c4526026ee
2025-07-28 21 19  Executing command(queryId=hive_20250728211951_708da9cb-6939-499f-b210-65c4526026ee)  SELECT  							LN_NBR, 							CUST_NBR, 							NME_ADDR, 							PROC_TYP, 							BUS_PHN_EXT, 							OLD_DUE_DTE, 							BRNCH, 							INT_TYP, 							PROC_STAT, 							PRI_PHN_EXT, 							cast(NVL(FORMAT_NUMBER(CAST((ORG_LN_AMT) as decimal(17,2)),2),'0.00') as string) AS ORG_LN_AMT, 							DQ_EXT_NBR_MOS, 							cast(NVL(FORMAT_NUMBER(CAST((PMT_AMT) as decimal(17,2)),2),'0.00') as string) AS PMT_AMT, 							DYS_PD_AHD, 							CREDIT_HIST, 							PD_DTE, 							PROD_CDE, 							cast(NVL(FORMAT_NUMBER(CAST((PRIN_BAL) as decimal(17,2)),2),'0.00') as string) AS PRIN_BAL, 							cast(NVL(FORMAT_NUMBER(CAST((LTE_CHRGS_DUE) as decimal(17,2)),2),'0.00') as string) AS LTE_CHRGS_DUE, 							cast(NVL(FORMAT_NUMBER(CAST((FEES_DUE) as decimal(17,2)),2),'0.00') as string) AS FEES_DUE, 							PROD_NME, 							CEIL((ROW_NUMBER() OVER (ORDER BY LN_NBR,LDBID)) / '10') pagenbr 						FROM ULR014_Temp2 						ORDER BY LN_NBR,LDBID
application_1752432472682_70301 HIVE-3113a3c6-5bcb-48eb-8500-a2a4b7865a78 1264GB 158vCores
hive_20250728200419_aea8b012-a053-43e5-af65-8bccea4d9ca9
2025-07-28 20 04  Executing command(queryId=hive_20250728200419_aea8b012-a053-43e5-af65-8bccea4d9ca9)  SELECT ('ZZZZZZ-ZZZZZZZ') AS FILTER_VAL UNION SELECT (DRIVING_TABLE.ar_id_item ||'-' ||'DetailedLOCStatement') AS FILTER_VAL FROM uat7400_racs11.RT_AR_STMNT_LN_RL DRIVING_TABLE WHERE stlr_stmnt_type = 'DetailedStatement' AND enart_value like '%LineOfCredit%' AND DRIVING_TABLE.full_date = '20250728'
hive_20250728200518_4e67e9ed-87ab-4d10-8283-bf441f5e07d4
2025-07-28 20 05  Executing command(queryId=hive_20250728200518_4e67e9ed-87ab-4d10-8283-bf441f5e07d4)  WITH DRIVING_TABLE AS (SELECT IP_ID, AR_ID_ITEM, LDBID, STLR_STMNT_ISSUED_DATE, PRCS_DATE, STLR_STMNT_TYPE, ARIR_COMM_MODE, ADT_MSG_UUID, NTFN_MODE FROM uat7400_racs11. RT_AR_STMNT_LN_RL WHERE FULL_DATE = '20250728' AND STLR_STMNT_TYPE = 'DetailedStatement' AND enart_value like '%LineOfCredit%' ), 11230_IP_POC AS (SELECT ec_ip_id, PSTL_ADDR_TYP, ENT_POC_SEQ_NBR, pstl_addr_cat, full_date, adrr_prio, row_number() OVER (PARTITION BY ec_ip_id, PSTL_ADDR_TYP, ENT_POC_SEQ_NBR ORDER BY full_date DESC, adrr_prio) lst_rec, PAL6_DSTN_LNE1, PAL7_DSTN_LNE2, PAL8_DSTN_LNE3, LCT1_CITY, LCT2_ST, LCT3_PSTL_CDE, LCT6_CNTRY, PSTL_ADDR_FRMT_NME, mlng_cde FROM (SELECT ec_ip_id, PSTL_ADDR_TYP, ENT_POC_SEQ_NBR, strt_dte, end_dte, prptl_strt_dte, prptl_end_dte, pstl_addr_cat, addr.full_date, IF(pstl_addr_cat = 'Temporary', 1, IF(pstl_addr_cat = 'Seasonal', 2, 3)) adrr_prio, PAL6_DSTN_LNE1, PAL7_DSTN_LNE2, PAL8_DSTN_LNE3, LCT1_CITY, LCT2_ST, LCT3_PSTL_CDE, LCT6_CNTRY, PSTL_ADDR_FRMT_NME, mlng_cde FROM uat7400_racs11.TB_11230_IP_POC_PSTL_ADDR_EC addr INNER JOIN (SELECT DISTINCT IP_ID, FULL_DATE, FULL_DATE_TXT FROM uat7400_racs11. RT_AR_STMNT_LN_RL WHERE FULL_DATE = '20250728' AND STLR_STMNT_TYPE = 'DetailedStatement' AND enart_value like '%LineOfCredit%' ) drv ON drv.IP_ID                            = addr.ec_ip_id WHERE (addr.actn_ind                   <> 'Delete' AND ((COALESCE(addr.pstl_addr_cat, '') <> 'Seasonal' AND (CAST(addr.strt_dte AS DATE)       <= CAST(drv.full_date_txt AS DATE) AND (CAST(addr.end_dte AS DATE)        >= CAST(drv.full_date_txt AS DATE) OR addr.end_dte                        IS NULL))) OR (COALESCE(addr.pstl_addr_cat, '')    = 'Seasonal' AND (CAST(substring(REPLACE(drv.FULL_DATE_TXT, '-', ''), 5) AS INT) BETWEEN CAST(addr.prptl_strt_dte AS INT) AND CAST(addr.prptl_end_dte AS INT))))) ) t ), 11220_IP_POC_EMAIL AS (SELECT ec_ip_id, EMAIL_TYP, ENT_POC_SEQ_NBR, EMAIL_ADDR, eml.full_date, row_number() OVER(PARTITION BY ec_ip_id, EMAIL_TYP, ENT_POC_SEQ_NBR ORDER BY eml.full_date DESC, CAST(eml.strt_dte AS DATE) DESC) lst FROM uat7400_racs11.TB_11220_IP_POC_EMAIL_ADDR_EC eml INNER JOIN (SELECT DISTINCT IP_ID, FULL_DATE, FULL_DATE_TXT FROM uat7400_racs11. RT_AR_STMNT_LN_RL WHERE FULL_DATE = '20250728' AND STLR_STMNT_TYPE = 'DetailedStatement' AND enart_value like '%LineOfCredit%' ) drv ON drv.IP_ID                    = eml.ec_ip_id WHERE (eml.actn_ind            <> 'Delete' AND (CAST(eml.strt_dte AS DATE)<= CAST(drv.full_date_txt AS DATE) AND (CAST(eml.end_dte AS DATE) >= CAST(drv.full_date_txt AS DATE) OR eml.end_dte                 IS NULL))) ), 11915_IP_AR AS (SELECT ec_ip_id, ar_id, ALT_PRFRD_PSTL_ADDR_TYP, ALT_PRFRD_PSTL_ADDR_SEQ_NBR, PRFRD_COMM_METH, row_number() OVER (PARTITION BY ec_ip_id, PRFRD_COMM_METH, ar_id ORDER BY full_date DESC) lst FROM uat7400_racs11.TB_11915_IP_AR_RLTNP_CMMN_PREF_OCCR_EC WHERE IP_AR_RLT_COMM_PREF_VAL = 'DetailedStatement' AND actn_ind                 <> 'Delete' ), 11916_IP_AR_EMAIL AS (SELECT DISTINCT TB_11916.ec_ip_id, ar_id, alt_prfrd_email_typ, alt_prfrd_email_seq_nbr, TB_11220.EMAIL_ADDR, TB_11220.FULL_DATE FROM uat7400_racs11.TB_11916_IP_AR_RLTNP_CMMN_PREF_NTFN_EC TB_11916 LEFT JOIN (SELECT TB_11220.ec_ip_id, EMAIL_TYP, ENT_POC_SEQ_NBR, EMAIL_ADDR, MAX(FULL_DATE) OVER (PARTITION BY TB_11220.ec_ip_id, EMAIL_TYP, ENT_POC_SEQ_NBR) AS FULL_DATE FROM uat7400_racs11.TB_11220_IP_POC_EMAIL_ADDR_EC TB_11220 ) TB_11220 ON TB_11220.ec_ip_id          = TB_11916.ec_ip_id AND TB_11220.EMAIL_TYP        = TB_11916.alt_prfrd_email_typ AND TB_11220.ENT_POC_SEQ_NBR  = TB_11916.alt_prfrd_email_seq_nbr WHERE IP_AR_RLT_COMM_PREF_VAL = 'DetailedStatement' AND alt_prfrd_email_typ       = 'Primary' AND elctr_msg_ntfn_meth       = 'Email' AND alt_prfrd_email_seq_nbr   = 1 AND actn_ind                 <> 'Delete' ), 11916_IP_AR_TEXTMSG AS (SELECT DISTINCT TB_11916.ec_ip_id, ar_id, alt_prfrd_txt_msg_ph_typ, alt_prfrd_txt_msg_seq_nbr, TB_11210.ful_tele_nbr, TB_11210.FULL_DATE FROM uat7400_racs11.TB_11916_IP_AR_RLTNP_CMMN_PREF_NTFN_EC TB_11916 LEFT JOIN (SELECT TB_11210.ec_ip_id, ph_typ, ENT_POC_SEQ_NBR, ful_tele_nbr, MAX(FULL_DATE) OVER (PARTITION BY TB_11210.ec_ip_id, ph_typ, ENT_POC_SEQ_NBR) AS FULL_DATE FROM uat7400_racs11.TB_11210_IP_TELE_REC_EC TB_11210 ) TB_11210 ON TB_11210.ec_ip_id          = TB_11916.ec_ip_id AND TB_11210.ph_typ           = TB_11916.alt_prfrd_txt_msg_ph_typ AND TB_11210.ENT_POC_SEQ_NBR  = TB_11916.alt_prfrd_txt_msg_seq_nbr WHERE IP_AR_RLT_COMM_PREF_VAL = 'DetailedStatement' AND elctr_msg_ntfn_meth       = 'Text Message' AND alt_prfrd_txt_msg_seq_nbr = 1 AND actn_ind                 <> 'Delete' ) SELECT DISTINCT 'TRN' AS REC_TYP, (driving_table.ar_id_item||'-'||'DetailedLOCStatement')         AS FILTER_VAL, (DRIVING_TABLE.ar_id_item ||'-' ||DRIVING_TABLE.IP_ID) AS `accnt_nmbr`, DRIVING_TABLE.ADT_MSG_UUID AS `uuid`, 1                      AS `sort_order`, '0'                    AS `sort_order_1`, ORG_SNAP.OU_ID         AS `Code TO Identify Client`, ORG_SNAP_LE.LGL_ENT    AS `Code Identifying Company WITH client`, TB_IP_ID_MSTR.BRNCH_ID AS `Branch Office WHERE Customer Opened account`, DRIVING_TABLE.STLR_STMNT_TYPE                                                                                                                                                                                                                                                                                                                                                      AS `Form/Letter Type`, '100'                                                                                                                                                                                                                                                                                                                                                                              AS `Variation OF the Form/Letter`, DRIVING_TABLE.STLR_STMNT_ISSUED_DATE                                                                                                                                                                                                                                                                                                                                               AS `System Processing Date`, TB_IP_ID_MSTR.EC_IP_ID                                                                                                                                                                                                                                                                                                                                                             AS `Customer Number`, TB_IP_ID_MSTR.NME_LNE                                                                                                                                                                                                                                                                                                                                                              AS `Full Legal Name OF Customer`, IF(locate('|', regexp_replace(LN_SNAP.APAT_VALUE_TITLE1, '\n', '\\|'))> 0, IF(LENGTH(split(regexp_replace(LN_SNAP.APAT_VALUE_TITLE1, '\n', '\\|'), '\\|') [0])> 60, SUBSTR(split(regexp_replace(LN_SNAP.APAT_VALUE_TITLE1, '\n', '\\|'), '\\|') [0], 1, 60), split(regexp_replace(LN_SNAP.APAT_VALUE_TITLE1, '\n', '\\|'), '\\|') [0]), SUBSTR(LN_SNAP.APAT_VALUE_TITLE1, 1, 60))  AS `Primary Title ON Account`, IF(locate('|', regexp_replace(LN_SNAP.APAT_VALUE_TITLE1, '\n', '\\|'))> 0, IF(LENGTH(split(regexp_replace(LN_SNAP.APAT_VALUE_TITLE1, '\n', '\\|'), '\\|') [1])> 60, SUBSTR(split(regexp_replace(LN_SNAP.APAT_VALUE_TITLE1, '\n', '\\|'), '\\|') [1], 1, 60), split(regexp_replace(LN_SNAP.APAT_VALUE_TITLE1, '\n', '\\|'), '\\|') [1]), SUBSTR(LN_SNAP.APAT_VALUE_TITLE1, 61, 60)) AS `Secondary Title ON Account`, COALESCE(11230_IP_POC.PAL6_DSTN_LNE1, 11230_IP_POC_1.PAL6_DSTN_LNE1, TB_IP_ID_MSTR.DEST_LNE_TXT1, '')                                                                                                                                                                                                                                                                              AS `Address Line 1`, COALESCE(11230_IP_POC.PAL7_DSTN_LNE2, 11230_IP_POC_1.PAL7_DSTN_LNE2, TB_IP_ID_MSTR.DEST_LNE_TXT2, '')                                                                                                                                                                                                                                                                              AS `Address Line 2`, COALESCE(11230_IP_POC.PAL8_DSTN_LNE3, 11230_IP_POC_1.PAL8_DSTN_LNE3, TB_IP_ID_MSTR.DEST_LNE_TXT3, '')                                                                                                                                                                                                                                                                              AS `Address Line 3`, ''                                                                                                                                                                                                                                                                                                                                                                                 AS `Address Line 4`, COALESCE(11230_IP_POC.LCT1_CITY, 11230_IP_POC_1.LCT1_CITY, TB_IP_ID_MSTR.LOC_CITY, '')                                                                                                                                                                                                                                                                                             AS `City`, SUBSTRING(COALESCE(11230_IP_POC.LCT2_ST, 11230_IP_POC_1.LCT2_ST, TB_IP_ID_MSTR.LOC_STATE, ''), 1, 2)                                                                                                                                                                                                                                                                               AS `State`, COALESCE(11230_IP_POC.LCT3_PSTL_CDE, 11230_IP_POC_1.LCT3_PSTL_CDE, TB_IP_ID_MSTR.LOC_PSTL_CODE, '')                                                                                                                                                                                                                                                                                AS `Zip Code`, DRIVING_TABLE.AR_ID_ITEM                                                                                                                                                                                                                                                                                                                                                           AS `Account Number`, ''                                                                                                                                                                                                                                                                                                                                                                                 AS `OMR Glyph Code FROM DocuCorp`, COALESCE(IF(11230_IP_POC.ec_ip_id IS NULL, NULL, IF(11230_IP_POC.PSTL_ADDR_FRMT_NME = 'US Domestic', 11230_IP_POC.PSTL_ADDR_FRMT_NME, 11230_IP_POC.LCT6_CNTRY)), IF(11230_IP_POC_1.ec_ip_id IS NULL, NULL, IF(11230_IP_POC_1.PSTL_ADDR_FRMT_NME = 'US Domestic', 11230_IP_POC_1.PSTL_ADDR_FRMT_NME, 11230_IP_POC_1.LCT6_CNTRY)), IF(TB_IP_ID_MSTR.PSTL_ADDR_FRMT_NME = 'US Domestic', TB_IP_ID_MSTR.PSTL_ADDR_FRMT_NME, TB_IP_ID_MSTR.LOC_CNTRY), '') AS `Country Code`, CASE WHEN (COALESCE(11230_IP_POC.PSTL_ADDR_FRMT_NME, 11230_IP_POC_1.PSTL_ADDR_FRMT_NME, TB_IP_ID_MSTR.PSTL_ADDR_FRMT_NME) = 'US Domestic' OR COALESCE(11230_IP_POC.LCT6_CNTRY, 11230_IP_POC_1.LCT6_CNTRY, TB_IP_ID_MSTR.LOC_CNTRY)                             = 'US') THEN '0' WHEN (COALESCE(11230_IP_POC.PSTL_ADDR_FRMT_NME, 11230_IP_POC_1.PSTL_ADDR_FRMT_NME, TB_IP_ID_MSTR.PSTL_ADDR_FRMT_NME) IS NULL AND COALESCE(11230_IP_POC.LCT6_CNTRY, 11230_IP_POC_1.LCT6_CNTRY, TB_IP_ID_MSTR.LOC_CNTRY)                            IS NULL) THEN ' ' ELSE '1' END                                                                              AS `Non-US Country`, COALESCE(11230_IP_POC.MLNG_CDE, 11230_IP_POC_1.MLNG_CDE, TB_IP_ID_MSTR.MLNG_CDE) AS `Customer Mail Flag`, LN_SNAP.AR_ID_ITEM_ORG_UNIT                                                      AS `Branch OF Ownership OF Account`, CASE WHEN STLR_STMNT_TYPE = 'DetailedStatement' and arir_comm_mode = 'SecureEMessage' and ntfn_mode like '%Email%' THEN COALESCE(11916_IP_AR_EMAIL.EMAIL_ADDR, 11220_IP_POC_EMAIL.EMAIL_ADDR, 11220_IP_POC_EMAIL_1.EMAIL_ADDR, TB_IP_ID_MSTR.PRMRY_EMAIL_ADDR, '') ELSE COALESCE(11220_IP_POC_EMAIL.EMAIL_ADDR, 11220_IP_POC_EMAIL_1.EMAIL_ADDR, TB_IP_ID_MSTR.PRMRY_EMAIL_ADDR, '') END AS `Electronic Mail`, IF(((11915_IP_AR_D.ec_ip_id    IS NOT NULL AND 11915_IP_AR_D.PRFRD_COMM_METH = 'Direct Mail') OR (11915_IP_AR_D.ec_ip_id       IS NULL AND (TB_IP_ID_MSTR.EC_IP_ID      IS NOT NULL AND TB_IP_ID_MSTR.DOC_DLVRY_PREF IN ('Paper and Electronic', 'Paper'))) OR (11915_IP_AR_D.ec_ip_id       IS NULL AND TB_IP_ID_MSTR.EC_IP_ID       IS NULL AND DRIVING_TABLE.ARIR_COMM_MODE  = 'Mail')), '1', '0') AS `Paper Indicator`, IF(((11915_IP_AR_S.ec_ip_id    IS NOT NULL AND 11915_IP_AR_S.PRFRD_COMM_METH = 'Secure E-Message') OR (11915_IP_AR_S.ec_ip_id       IS NULL AND (TB_IP_ID_MSTR.EC_IP_ID      IS NOT NULL AND TB_IP_ID_MSTR.DOC_DLVRY_PREF IN ('Paper and Electronic', 'Electronic'))) OR (11915_IP_AR_S.ec_ip_id       IS NULL AND TB_IP_ID_MSTR.EC_IP_ID       IS NULL AND DRIVING_TABLE.ARIR_COMM_MODE  = 'Email')), '1', '0') AS `Secure E-MESSAGE Indicator`, CASE WHEN STLR_STMNT_TYPE = 'DetailedStatement' and arir_comm_mode = 'SecureEMessage' and ntfn_mode like '%SMS%' THEN COALESCE(11916_IP_AR_TEXTMSG.ful_tele_nbr, '') ELSE '' END AS `Text Enabled Phone Number`, CASE WHEN DRIVING_TABLE.NTFN_MODE = 'SMS' THEN 'Text' WHEN DRIVING_TABLE.NTFN_MODE = 'Email' THEN 'Email' WHEN DRIVING_TABLE.NTFN_MODE = 'Email, SMS' THEN 'Email, Text' END AS `Secure E MESSAGE Indicator Notification Method Indicator` FROM DRIVING_TABLE LEFT JOIN uat7400_racs11.TB_ORG_UNIT_MSTR_EO ORG_SNAP ON CAST(DRIVING_TABLE.LDBID AS VARCHAR(10)) = ORG_SNAP.LDBID AND ORG_SNAP.OU_TYP                        IN ('Financial Entity') LEFT JOIN uat7400_racs11.TB_CUST_MSTR_IP TB_IP_ID_MSTR ON DRIVING_TABLE.IP_ID = TB_IP_ID_MSTR.EC_IP_ID LEFT JOIN uat7400_racs11.RT_APD_AR_MSTR_LN_RL LN_SNAP ON LN_SNAP.AR_ID_ITEM = DRIVING_TABLE.AR_ID_ITEM LEFT JOIN uat7400_racs11.TB_ORG_UNIT_MSTR_EO ORG_SNAP_LE ON CAST(DRIVING_TABLE.LDBID AS VARCHAR(10)) = ORG_SNAP_LE.LDBID AND LN_SNAP.AR_ID_ITEM_ORG_UNIT             = ORG_SNAP_LE.OU_ID LEFT JOIN 11915_IP_AR 11915_IP_AR_D ON DRIVING_TABLE.IP_ID            = 11915_IP_AR_D.ec_ip_id AND DRIVING_TABLE.AR_ID_ITEM      = 11915_IP_AR_D.ar_id AND 11915_IP_AR_D.lst             = 1 AND 11915_IP_AR_D.PRFRD_COMM_METH = 'Direct Mail' LEFT JOIN 11915_IP_AR 11915_IP_AR_S ON DRIVING_TABLE.IP_ID            = 11915_IP_AR_S.ec_ip_id AND DRIVING_TABLE.AR_ID_ITEM      = 11915_IP_AR_S.ar_id AND 11915_IP_AR_S.lst             = 1 AND 11915_IP_AR_S.PRFRD_COMM_METH = 'Secure E-Message' LEFT JOIN (SELECT ec_ip_id, ar_id, PRFRD_PSTL_ADDR_TYP, PRFRD_PSTL_ADDR_SEQ_NBR, row_number() OVER (PARTITION BY ec_ip_id, ar_id ORDER BY full_date DESC, CAST(REPLACE(prf_strt_dte, '-', '') AS INT) DESC) lst FROM uat7400_racs11.TB_11926_IP_AR_RLTNP_PSTL_ADDR_PREF_EC WHERE CAST(REPLACE(prf_strt_dte, '-', '') AS INT)<= CAST('20250728' AS INT) AND actn_ind                                     <> 'Delete' ) 11926_IP_AR ON DRIVING_TABLE.IP_ID       = 11926_IP_AR.ec_ip_id AND DRIVING_TABLE.AR_ID_ITEM = 11926_IP_AR.ar_id AND 11926_IP_AR.lst          = 1 LEFT JOIN (SELECT ec_ip_id, PRFRD_PSTL_ADDR_TYP, PRFRD_PSTL_ADDR_SEQ_NBR, prf_strt_dte, full_date, actn_ind, row_number() OVER (PARTITION BY ec_ip_id ORDER BY full_date DESC, CAST(REPLACE(prf_strt_dte, '-', '') AS INT) DESC) lst FROM uat7400_racs11.TB_11430_IP_PREF_POC_EC WHERE CAST(REPLACE(prf_strt_dte, '-', '') AS INT)<= CAST('20250728' AS INT) AND actn_ind                                     <> 'Delete' ) 11430_IP ON DRIVING_TABLE.IP_ID = 11430_IP.ec_ip_id AND 11430_IP.lst       = 1 LEFT JOIN 11230_IP_POC ON 11230_IP_POC.ec_ip_id             = DRIVING_TABLE.IP_ID AND LOWER(11230_IP_POC.PSTL_ADDR_TYP)= LOWER(COALESCE(11915_IP_AR_D.ALT_PRFRD_PSTL_ADDR_TYP, 11926_IP_AR.PRFRD_PSTL_ADDR_TYP, 11430_IP.PRFRD_PSTL_ADDR_TYP, '')) AND 11230_IP_POC.ENT_POC_SEQ_NBR     = COALESCE(11915_IP_AR_D.ALT_PRFRD_PSTL_ADDR_SEQ_NBR, 11926_IP_AR.PRFRD_PSTL_ADDR_SEQ_NBR, 11430_IP.PRFRD_PSTL_ADDR_SEQ_NBR, '') AND 11230_IP_POC.lst_rec             = 1 LEFT JOIN (SELECT ec_ip_id, PAL6_DSTN_LNE1, PAL7_DSTN_LNE2, PAL8_DSTN_LNE3, LCT1_CITY, LCT2_ST, LCT3_PSTL_CDE, LCT6_CNTRY, PSTL_ADDR_FRMT_NME, mlng_cde, COUNT(ec_ip_id) OVER (PARTITION BY ec_ip_id) ec_ip_id_cnt FROM 11230_IP_POC WHERE lst_rec = 1 ) 11230_IP_POC_1 ON 11230_IP_POC_1.ec_ip_id      = DRIVING_TABLE.IP_ID AND 11230_IP_POC_1.ec_ip_id_cnt = 1 LEFT JOIN (SELECT ec_ip_id, ar_id, PRFRD_EMAIL_TYP, PRFRD_EMAIL_SEQ_NBR, row_number() OVER (PARTITION BY ec_ip_id, ar_id ORDER BY full_date DESC, CAST(REPLACE(prf_strt_dte, '-', '') AS INT) DESC) lst FROM uat7400_racs11.TB_11924_IP_AR_RLTNP_EMAIL_PREF_EC WHERE CAST(REPLACE(prf_strt_dte, '-', '') AS INT)<= CAST('20250728' AS INT) AND actn_ind                                     <> 'Delete' ) 11924_IP_AR_EML ON DRIVING_TABLE.IP_ID       = 11924_IP_AR_EML.ec_ip_id AND DRIVING_TABLE.AR_ID_ITEM = 11924_IP_AR_EML.ar_id AND 11924_IP_AR_EML.lst      = 1 LEFT JOIN (SELECT ec_ip_id, PRFRD_EMAIL_TYP, PRFRD_EMAIL_SEQ_NBR, row_number() OVER (PARTITION BY ec_ip_id ORDER BY full_date DESC, CAST(REPLACE(prf_strt_dte, '-', '') AS INT) DESC) lst FROM uat7400_racs11.TB_11430_IP_PREF_POC_EC WHERE CAST(REPLACE(prf_strt_dte, '-', '') AS INT)<= CAST('20250728' AS INT) AND actn_ind                                     <> 'Delete' AND (PRFRD_EMAIL_TYP                             IS NOT NULL AND PRFRD_EMAIL_TYP                              <> '') ) 11430_IP_PREF_EML ON DRIVING_TABLE.IP_ID    = 11430_IP_PREF_EML.ec_ip_id AND 11430_IP_PREF_EML.lst = 1 LEFT JOIN 11220_IP_POC_EMAIL ON 11220_IP_POC_EMAIL.ec_ip_id                                                               = DRIVING_TABLE.IP_ID AND COALESCE(11924_IP_AR_EML.PRFRD_EMAIL_TYP, 11430_IP_PREF_EML.PRFRD_EMAIL_TYP, '')         = 11220_IP_POC_EMAIL.EMAIL_TYP AND COALESCE(11924_IP_AR_EML.PRFRD_EMAIL_SEQ_NBR, 11430_IP_PREF_EML.PRFRD_EMAIL_SEQ_NBR, '') = 11220_IP_POC_EMAIL.ENT_POC_SEQ_NBR AND 11220_IP_POC_EMAIL.lst                                                                   = 1 LEFT JOIN (SELECT ec_ip_id, EMAIL_ADDR, COUNT(ec_ip_id) OVER(PARTITION BY ec_ip_id) ec_ip_id_cnt FROM 11220_IP_POC_EMAIL ) 11220_IP_POC_EMAIL_1 ON 11220_IP_POC_EMAIL_1.ec_ip_id      = DRIVING_TABLE.AR_ID_ITEM AND 11220_IP_POC_EMAIL_1.ec_ip_id_cnt = 1 LEFT JOIN 11916_IP_AR_EMAIL ON 11916_IP_AR_EMAIL.ec_ip_id = DRIVING_TABLE.IP_ID AND 11916_IP_AR_EMAIL.ar_id   = DRIVING_TABLE.AR_ID_ITEM LEFT JOIN 11916_IP_AR_TEXTMSG ON 11916_IP_AR_TEXTMSG.ec_ip_id = DRIVING_TABLE.IP_ID AND 11916_IP_AR_TEXTMSG.ar_id   = DRIVING_TABLE.AR_ID_ITEM
hive_20250728200646_ace5d679-a61d-46a8-aef2-e23a729c14cb
2025-07-28 20 06  Executing command(queryId=hive_20250728200646_ace5d679-a61d-46a8-aef2-e23a729c14cb)  WITH CREDIT_LINE_SUMMARY AS (SELECT ar_id_item, get_json_object (stcls_cr_line_sumry,concat('$.arStmtCrLineSumm[',e.i,'].apr')) AS apr, get_json_object (stcls_cr_line_sumry,concat('$.arStmtCrLineSumm[',e.i,'].fnceChrg')) AS fnceChrg, get_json_object (stcls_cr_line_sumry,concat('$.arStmtCrLineSumm[',e.i,'].frmDte')) AS frmDte, get_json_object (stcls_cr_line_sumry,concat('$.arStmtCrLineSumm[',e.i,'].perdcRte')) AS perdcRte, get_json_object (stcls_cr_line_sumry,concat('$.arStmtCrLineSumm[',e.i,'].prinOutstdBal')) AS prinOutstdBal, get_json_object (stcls_cr_line_sumry,concat('$.arStmtCrLineSumm[',e.i,'].toDte')) AS toDte FROM uat7400_racs11.RT_AR_STMNT_CR_LINE_SMRY_LN_RL t lateral VIEW posexplode (split(get_json_object (stcls_cr_line_sumry,'$.arStmtCrLineSumm[*]/'),'","')) e AS i, x WHERE t.full_date= '20250728' ) SELECT DISTINCT '792' AS `REC_TYP`, (driving_table.ar_id_item||'-'||'DetailedLOCStatement') AS FILTER_VAL, 1 AS `sort_order`, '792' AS `sort_order_1`, (DRIVING_TABLE.ar_id_item ||'-' ||DRIVING_TABLE.IP_ID) AS `accnt_nmbr`, DRIVING_TABLE.ADT_MSG_UUID AS `uuid`, DRIVING_TABLE.AR_ID_ITEM AS `Account Number`, REPLACE(CAST(COALESCE(CREDIT_LINE_SUMMARY.apr, CAST(0 AS BIGINT)) AS NUMERIC(14, 10)), '.', '') AS `APR`, REPLACE(CAST(COALESCE(CREDIT_LINE_SUMMARY.fnceChrg, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Finance Charge`, CREDIT_LINE_SUMMARY.frmDte AS `From Date`, CREDIT_LINE_SUMMARY.toDte AS `To Date`, REPLACE(CAST(COALESCE(CREDIT_LINE_SUMMARY.perdcRte, CAST(0 AS BIGINT)) AS NUMERIC(14, 10)), '.', '') AS `Periodic Rate`, REPLACE(CAST(COALESCE(CREDIT_LINE_SUMMARY.prinOutstdBal, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Principal Outstanding Balance` FROM uat7400_racs11.RT_AR_STMNT_LN_RL DRIVING_TABLE INNER JOIN CREDIT_LINE_SUMMARY ON DRIVING_TABLE.AR_ID_ITEM = CREDIT_LINE_SUMMARY.AR_ID_ITEM AND APR <> '' WHERE DRIVING_TABLE.FULL_DATE = '20250728' AND DRIVING_TABLE.STLR_STMNT_TYPE = 'DetailedStatement' AND DRIVING_TABLE.enart_value like '%LineOfCredit%'
hive_20250728200651_c4d52415-4711-40d8-a059-8054251e0d34
2025-07-28 20 06  Executing command(queryId=hive_20250728200651_c4d52415-4711-40d8-a059-8054251e0d34)  WITH TOT_FEES_YTD AS ( SELECT ARID_ITEM, AABPTL_AMT FROM uat7400_racs11.TB_APD_AR_BAL_PERIOD_LN_RL WHERE BALTT_CODE = 'TotalFeeCollected' AND AABPTL_VALUE = 'Yearly' AND SUBSTRING('20250728', 1, 4) = SUBSTRING(AABPTL_END_DATE, 1, 4) ), TOT_INT_YTD AS ( SELECT ARID_ITEM, AABPTL_AMT FROM uat7400_racs11.TB_APD_AR_BAL_PERIOD_LN_RL WHERE BALTT_CODE = 'TotalInterestCollected' AND AABPTL_VALUE = 'Yearly' AND SUBSTRING('20250728', 1, 4) = SUBSTRING(AABPTL_END_DATE, 1, 4) ), TOT_FEES_PREV_YTD AS ( SELECT ARID_ITEM, AABPTL_AMT FROM uat7400_racs11.TB_APD_AR_BAL_PERIOD_LN_RL WHERE BALTT_CODE = 'TotalFeeCollected' AND AABPTL_VALUE = 'Yearly' AND (SUBSTRING('20250728', 1, 4) - 1) = SUBSTRING(AABPTL_END_DATE, 1, 4) ), TOT_INT_PREV_YTD AS ( SELECT ARID_ITEM, AABPTL_AMT FROM uat7400_racs11.TB_APD_AR_BAL_PERIOD_LN_RL WHERE BALTT_CODE = 'TotalInterestCollected' AND AABPTL_VALUE = 'Yearly' AND (SUBSTRING('20250728', 1, 4) - 1) = SUBSTRING(AABPTL_END_DATE, 1, 4) ) SELECT DISTINCT '791' AS `REC_TYP`, (driving_table.ar_id_item||'-'||'DetailedLOCStatement') AS FILTER_VAL, 1 AS `sort_order`, '791' AS `sort_order_1`, (DRIVING_TABLE.ar_id_item||'-'||DRIVING_TABLE.IP_ID) AS `accnt_nmbr`, DRIVING_TABLE.ADT_MSG_UUID AS `uuid`, '' AS `Over Limit Amount`, '' AS `Resolved Amount`, '' AS `VAT Total for Period`, '' AS `Capitalized Interest at Billing`, REPLACE(CAST(COALESCE(TOT_FEES_YTD.AABPTL_AMT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Total Fees Assessed YTD`, REPLACE(CAST(COALESCE(TOT_INT_YTD.AABPTL_AMT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Total Interest Earned YTD`, REPLACE(CAST(COALESCE(TOT_FEES_PREV_YTD.AABPTL_AMT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Total Fees Assessed Previous YTD`, REPLACE(CAST(COALESCE(TOT_INT_PREV_YTD.AABPTL_AMT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Total Interest Earned Previous YTD` FROM uat7400_racs11.RT_AR_STMNT_LN_RL DRIVING_TABLE LEFT JOIN TOT_FEES_YTD ON DRIVING_TABLE.AR_ID_ITEM = TOT_FEES_YTD.ARID_ITEM LEFT JOIN TOT_INT_YTD ON DRIVING_TABLE.AR_ID_ITEM = TOT_INT_YTD.ARID_ITEM LEFT JOIN TOT_FEES_PREV_YTD ON DRIVING_TABLE.AR_ID_ITEM = TOT_FEES_PREV_YTD.ARID_ITEM LEFT JOIN TOT_INT_PREV_YTD ON DRIVING_TABLE.AR_ID_ITEM = TOT_INT_PREV_YTD.ARID_ITEM WHERE DRIVING_TABLE.FULL_DATE = '20250728' AND DRIVING_TABLE.STLR_STMNT_TYPE = 'DetailedStatement' AND DRIVING_TABLE.enart_value like '%LineOfCredit%'
hive_20250728200840_342288c7-fbba-4912-aea4-5805fc252c20
2025-07-28 20 08  Executing command(queryId=hive_20250728200840_342288c7-fbba-4912-aea4-5805fc252c20)  WITH PREVIOUS_STATEMENT AS (SELECT ROW_NUMBER() OVER (PARTITION BY ar_id_item ORDER BY FULL_DATE DESC) AS prev_stmnt_num, ar_id_item, stlr_stmnt_type, STLR_CLSG_BAL, full_date FROM uat7400_racs11.RT_AR_STMNT_LN_RL DRIVING_TABLE WHERE FULL_DATE < '20250728' AND DRIVING_TABLE.STLR_STMNT_TYPE = 'DetailedStatement' AND DRIVING_TABLE.enart_value like '%LineOfCredit%' ) SELECT DISTINCT '790' AS `REC_TYP`, (driving_table.ar_id_item||'-'||'DetailedLOCStatement') AS FILTER_VAL, 1 AS `sort_order`, '790' AS `sort_order_1`, (DRIVING_TABLE.ar_id_item||'-'||DRIVING_TABLE.IP_ID) AS `accnt_nmbr`, DRIVING_TABLE.ADT_MSG_UUID AS `uuid`, DRIVING_TABLE.AR_ID_ITEM AS `Account Number`, REPLACE(CAST(COALESCE(PREVIOUS_DLY_BAL.OTSNDG_PRNCPL_BAL, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Beginning Principal Balance`, REPLACE(CAST(COALESCE(PREVIOUS_STATEMENT.STLR_CLSG_BAL, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Beginning Total Balance`, '' AS `Principal Credit Amount`, '' AS `Total Credit Amount`, '' AS `Principal Debit Amount`, '' AS `Total Debit Amount`, '' AS `Total Debit Amount + Accrued Interest`, REPLACE(CAST(COALESCE(DRIVING_TABLE.INTRST_DUE_AMT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Current Payment (Interest)`, REPLACE(CAST(COALESCE(DRIVING_TABLE.PRNCPL_BAL, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Ending Principal Balance`, REPLACE(CAST(COALESCE(DRIVING_TABLE.STLR_CLSG_BAL, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Ending Total Balances`, '' AS `Average Daily Principal Balance`, REPLACE(CAST(COALESCE(AR_MSTR.RACLR_ACCR_FACTOR, CAST(0 AS BIGINT)) AS NUMERIC(14, 10)), '.', '') AS `Daily Interest Rate Factor`, DRIVING_TABLE.STLR_STMNT_ISSUED_DATE AS `Billing/STATEMENT Generation Date`, REPLACE(CAST(COALESCE(DRIVING_TABLE.STLR_DAYIN_BILL_CYCLE, CAST(0 AS BIGINT)) AS NUMERIC(3)), '.', '') AS `Days IN Cycle/Period`, REPLACE(CAST(COALESCE(DRIVING_TABLE.PAST_DUE_AMT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Amount Past Due`, REPLACE(CAST(COALESCE(AR_MSTR.RACLR_APR, CAST(0 AS BIGINT)) AS NUMERIC(14, 10)), '.', '') AS `Annual Percentage Rate (APR)`, DRIVING_TABLE.STLR_STMNT_EFCTV_DATE AS `Beginning DATE OF Billing Period`, REPLACE(CAST(COALESCE(DRIVING_TABLE.PAST_DUE_AMT + DRIVING_TABLE.TOT_CRRNT_DUE_AMT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Total Payment Due`, REPLACE(CAST(COALESCE(AR_MSTR.ARUSLR_MLTRY_APR, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Military Annual Percentage Rate`, AR_MSTR.RPSLR_NEXT_DUE_DATE AS `Payment Due DATE Billed`, REPLACE(CAST(COALESCE(DRIVING_TABLE.PRNPL_DUE_AMT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Current Payment (Principal)`, '' AS `Current Payment (Principal/Interest)`, REPLACE(CAST(COALESCE(DRIVING_TABLE.LATE_CHRG_DUE_AMT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Total Late Charges Due`, REPLACE(CAST(COALESCE(DLY_BAL.MISC_FEE_RCVBL, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Total Miscellaneous Charges/Loan Fees Due`, '' AS `Date AFTER Which Late Charges are Assessed`, REPLACE(CAST(COALESCE(DLY_BAL.INTRST_ACCRD_BAL, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Interest Accrued During Cycle/Period`, REPLACE(CAST(COALESCE(PREVIOUS_DLY_BAL.PDUE_INTRST_AMT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Total Interest Due`, REPLACE(CAST(COALESCE(PREVIOUS_DLY_BAL.PDUE_PRNCPL_AMT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Total Principal Due`, '' AS `Average Daily Balance FOR Interest Accruals`, DRIVING_TABLE.STLR_STMNT_TYPE AS `Statement Type`, DRIVING_TABLE.STLR_STMNT_EFCTV_DATE AS `Statement START Date`, DRIVING_TABLE.STLR_STMNT_END_DATE AS `Statement END Date`, REPLACE(CAST(COALESCE(PREVIOUS_DLY_BAL.DISB_PRNCPL_BAL, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Total Disbursements/Advances`, REPLACE(CAST(COALESCE(DRIVING_TABLE.TOT_PYMNT_MDE, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Total Payments`, REPLACE(CAST(COALESCE(DRIVING_TABLE.CRRNT_PYOFF_PNLTY, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Current Payoff Penalty/Fee`, REPLACE(CAST(COALESCE(DRIVING_TABLE.TOT_INS_CLCTD, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Insurance Collected This Period`, REPLACE(CAST(COALESCE(DRIVING_TABLE.INS_DUE_AMT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Insurance Due`, CASE WHEN UPPER(DRIVING_TABLE.STLR_PSTMTRTY_STMNT_IND) = 'YES' THEN '1' ELSE '0' END AS `Post Maturity Statement Indicator`, REPLACE(CAST(COALESCE(DLY_BAL.TOTAL_FEE_CLCTD, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Fees Collected This Period`, REPLACE(CAST(COALESCE(DRIVING_TABLE.TOT_LTCHG_CLCTD, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Late Charge Collected This Period`, REPLACE(CAST(COALESCE(DRIVING_TABLE.PRNCPL_BAL, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `New Principal Balance`, DRIVING_TABLE.PRNCPL_BAL_ASOFDT_DATE AS `New Principal Balance Date`, REPLACE(CAST(COALESCE(DRIVING_TABLE.TOT_CRRNT_DUE_AMT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Total Current Due` FROM uat7400_racs11.RT_AR_STMNT_LN_RL DRIVING_TABLE LEFT JOIN uat7400_racs11.RT_AR_DLY_BAL_LN_RL DLY_BAL ON DRIVING_TABLE.AR_ID_ITEM = DLY_BAL.AR_ID_ITEM AND DLY_BAL.FULL_DATE = '20250728' LEFT JOIN uat7400_racs11.RT_AR_DLY_BAL_LN_RL PREVIOUS_DLY_BAL ON DRIVING_TABLE.AR_ID_ITEM = PREVIOUS_DLY_BAL.AR_ID_ITEM AND PREVIOUS_DLY_BAL.FULL_DATE_TXT = date_sub(DRIVING_TABLE.STLR_STMNT_EFCTV_DATE, 1) LEFT JOIN uat7400_racs11.RT_APD_AR_MSTR_LN_RL AR_MSTR ON DRIVING_TABLE.AR_ID_ITEM = AR_MSTR.AR_ID_ITEM LEFT JOIN PREVIOUS_STATEMENT ON DRIVING_TABLE.AR_ID_ITEM = PREVIOUS_STATEMENT.AR_ID_ITEM AND PREVIOUS_STATEMENT.prev_stmnt_num = 1 WHERE DRIVING_TABLE.FULL_DATE = '20250728' AND DRIVING_TABLE.STLR_STMNT_TYPE = 'DetailedStatement' AND DRIVING_TABLE.enart_value like '%LineOfCredit%'
hive_20250728200958_21cdf2ec-d0f0-429b-9f72-d60f8925d0f0
2025-07-28 20 10  Executing command(queryId=hive_20250728200958_21cdf2ec-d0f0-429b-9f72-d60f8925d0f0)  WITH DRIVING_TABLE AS (SELECT * FROM uat7400_racs11.RT_AR_STMNT_LN_RL WHERE full_date = '20250728' AND STLR_STMNT_TYPE = 'DetailedStatement' AND enart_value like '%LineOfCredit%' ) SELECT DISTINCT '711' AS rec_typ, (driving_table.ar_id_item||'-'||'DetailedLOCStatement') AS FILTER_VAL, (DRIVING_TABLE.ar_id_item||'-'||DRIVING_TABLE.IP_ID) AS `accnt_nmbr`, driving_table.AR_ID_ITEM `Account Number`, DRIVING_TABLE.ADT_MSG_UUID AS `uuid`, 1 AS `sort_order`, '711' AS `sort_order_1`, trans_hist_ln.TRANS_IDFR `Transaction Sequence Number`, REPLACE(CAST(COALESCE(trans_hist_ln.PSTG_AMT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') `Transaction Amount`, CASE WHEN trans_hist_ln.psstd_code IN ('ACHPrincipalPayment', 'CashPrincipalPayment', 'CheckPrincipalPayment', 'PrincipalPayment') THEN REPLACE(CAST(COALESCE(trans_hist_ln.PSTG_AMT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') END AS `Principal Amount`, CASE WHEN trans_hist_ln.psstd_code IN ('ACHInterestPayment', 'CashInterestPayment', 'CheckInterestPayment', 'InterestPayment') THEN REPLACE(CAST(COALESCE(trans_hist_ln.PSTG_AMT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') END AS `Interest Amount`, CASE WHEN trans_hist_ln.psstd_code IN ('ACHLateChargePayment', 'CashLateChargePayment', 'CheckLateChargePayment', 'LateChargeFeePayment', 'LatePaymentPenaltyFeeWaive', 'ManualLatePaymentFeeWaive') THEN REPLACE(CAST(COALESCE(trans_hist_ln.PSTG_AMT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') END AS `Penalty / Late Charge Amount`, '' `Undisbursed Principal`, CASE WHEN trans_hist_ln.psstd_code IN ('ACHMiscellaneousFeePayment', 'CashMiscellaneousFeePayment', 'CheckMiscellaneousFeePayment', 'ManualMiscFeeWaive', 'MiscellaneousFeeAssessed', 'MiscellaneousFeePayment', 'MiscellaneousFeeWaive') THEN REPLACE(CAST(COALESCE(trans_hist_ln.PSTG_AMT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') END AS `Miscellaneous Charge`, '' `Escrow Suspense`, REPLACE(CAST(COALESCE(trans_hist_ln.CRRNT_INTRST_DUE, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') `Uncollected Interest`, '' `Unapplied Funds`, REPLACE(CAST(COALESCE(trans_hist_ln.CHOFF_PRNCPL, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') `Principal Charge-OFF Amount`, CASE WHEN trans_hist_ln.psstd_code IN ('ChargeOff', 'PartialChargeOff') THEN REPLACE(CAST(COALESCE(trans_hist_ln.PSTG_AMT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') END AS `Charged-OFF Recovered`, REPLACE(CAST(COALESCE(trans_hist_ln.OTSNDG_PRNCPL_BAL, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') `Running Principal Balance`, trans_hist_ln.PSTG_BKNG_DATE `System Processing Date`, trans_hist_ln.PSTG_EFCTV_DATE `Effective Date`, trans_hist_ln.PT_VALUE `Debit/Credit Indicator`, trans_hist_ln.PSTG_TXT `Transaction Description`, trans_hist_ln.REVRSL_CODE `Reversal Reason Code`, trans_hist_ln.REVRSL_DESC `Reversal Reason Description` FROM uat7400_racs11.RT_TRANS_HIST_LN_RL trans_hist_ln INNER JOIN driving_table ON driving_table.ar_id_item = trans_hist_ln.ar_id_item AND from_unixtime(unix_timestamp(trans_hist_ln.full_date_txt, 'yyyy-MM-dd'),'yyyy-MM-dd') >= from_unixtime(unix_timestamp(driving_table.stlr_stmnt_efctv_date, 'yyyy-MM-dd'),'yyyy-MM-dd') AND from_unixtime(unix_timestamp(trans_hist_ln.full_date_txt, 'yyyy-MM-dd'),'yyyy-MM-dd') <= from_unixtime(unix_timestamp(driving_table.stlr_stmnt_end_date, 'yyyy-MM-dd'),'yyyy-MM-dd')
hive_20250728201033_603998cd-8a43-40c1-8934-415205903864
2025-07-28 20 10  Executing command(queryId=hive_20250728201033_603998cd-8a43-40c1-8934-415205903864)  WITH AR_BAL AS (SELECT AR_ID_ITEM, STBLR_AMT FROM uat7400_racs11.TB_AR_BAL_LN_RL WHERE BALTT_CODE = 'TotalProjectedInterestToDueDate' AND FULL_DATE = '20250728' ), Min_PMT_AMT AS (SELECT AR_ID_ITEM, STBLR_AMT FROM uat7400_racs11.TB_AR_BAL_LN_RL WHERE BALTT_CODE = 'minPmtDue' AND FULL_DATE = '20250728' ), Avail_BAL AS (SELECT AR_ID_ITEM, STBLR_AMT FROM uat7400_racs11.TB_AR_BAL_LN_RL WHERE BALTT_CODE in ('AvailableBalance', 'AvailableCredit') AND FULL_DATE = '20250728' ) SELECT DISTINCT '402' AS `REC_TYP`, (driving_table.ar_id_item||'-'||'DetailedLOCStatement') AS FILTER_VAL, 1 AS `sort_order`, '402' AS `sort_order_1`, (DRIVING_TABLE.ar_id_item||'-'||DRIVING_TABLE.IP_ID) AS `accnt_nmbr`, DRIVING_TABLE.ADT_MSG_UUID AS `uuid`, REPLACE(CAST(COALESCE(RATE_CHNG.RACLR_ACCR_FACTOR, CAST(0 AS BIGINT)) AS NUMERIC(14, 10)), '.', '') AS `Interest - Daily Factor`, REPLACE(CAST(COALESCE(Min_PMT_AMT.STBLR_AMT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Minimum Payment Amount`, '' AS `Percentage of Minimum Payment`, REPLACE(CAST(COALESCE(AR_MSTR.ARBLR_CNTRCT_AMT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Disclosure - Total Note`, '' AS `Fixed Late Charge Amount`, REPLACE(CAST(COALESCE(Avail_BAL.STBLR_AMT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Available Balance`, '' AS `Cash Advance Limit`, '' AS `Cash Advance Available`, '' AS `Total Disputed Amount`, REPLACE(CAST(COALESCE(DLY_BAL.TOTAL_PDUE_AMT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Delinquent Amount`, AR_BKRPCY.BKRPCY_STATUS AS `Bankruptcy Status`, REPLACE(CAST(COALESCE(AR_MSTR.CREDIT_LIMIT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Current Credit Limit`, ADDTL_DTL.GracePeriodEndDate AS `Grace Time`, REPLACE(CAST(COALESCE(DLY_BAL.INTRST_ACCRD_BAL, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Interest Charged on Credit Line`, REPLACE(CAST(COALESCE(AR_BAL.STBLR_AMT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Total Projected Interest to Due Date`, IF(DLY_BAL.otsndg_prncpl_bal < 0, 'Y', IF(DLY_BAL.misc_adjmnt > 0, 'Y', 'N')) AS `Credit Balance Ind`, '' AS `LOC Term-Out Indicator`, '' AS `LOC Term-Out Reason`, '' AS `Total Interest Charge Paid`, '' AS `Tax Year`, '' AS `Account Interest Rate as of` FROM uat7400_racs11.RT_AR_STMNT_LN_RL DRIVING_TABLE LEFT JOIN uat7400_racs11.RT_AR_DLY_BAL_LN_RL DLY_BAL ON DRIVING_TABLE.AR_ID_ITEM = DLY_BAL.AR_ID_ITEM AND DLY_BAL.FULL_DATE = '20250728' LEFT JOIN uat7400_racs11.RT_APD_AR_MSTR_LN_RL AR_MSTR ON DRIVING_TABLE.AR_ID_ITEM = AR_MSTR.AR_ID_ITEM LEFT JOIN uat7400_racs11.RT_AR_US_BKRPCY_LN_RL AR_BKRPCY ON DRIVING_TABLE.AR_ID_ITEM = AR_BKRPCY.AR_ID_ITEM LEFT JOIN uat7400_racs11.RT_RATE_CHNG_LN_RL RATE_CHNG ON DRIVING_TABLE.AR_ID_ITEM = RATE_CHNG.AR_ID_ITEM AND RATE_CHNG.FULL_DATE = '20250728' LEFT JOIN AR_BAL ON DRIVING_TABLE.AR_ID_ITEM = AR_BAL.AR_ID_ITEM LEFT JOIN Min_PMT_AMT ON DRIVING_TABLE.AR_ID_ITEM = Min_PMT_AMT.AR_ID_ITEM LEFT JOIN Avail_BAL ON DRIVING_TABLE.AR_ID_ITEM = Avail_BAL.AR_ID_ITEM LEFT JOIN uat7400_racs11.VW_LN_RL_STMNT_ADDTL_DTL ADDTL_DTL ON DRIVING_TABLE.ADT_MSG_UUID = ADDTL_DTL.ADT_MSG_UUID WHERE DRIVING_TABLE.FULL_DATE = '20250728' AND DRIVING_TABLE.STLR_STMNT_TYPE = 'DetailedStatement' AND DRIVING_TABLE.enart_value like '%LineOfCredit%'
hive_20250728201050_d1b32822-3209-46b9-8ea9-ea2faf17d388
2025-07-28 20 10  Executing command(queryId=hive_20250728201050_d1b32822-3209-46b9-8ea9-ea2faf17d388)  WITH BAL_PERIOD AS (SELECT arid_item, baltt_code, AABPTL_AMT, full_date FROM uat7400_racs11.TB_APD_AR_BAL_PERIOD_LN_RL WHERE baltt_code = 'TotalInterestCollected' AND aabptl_value = 'Yearly' AND full_date = '20250728' ), PREVIOUS_STATEMENT AS (SELECT ROW_NUMBER() OVER (PARTITION BY ar_id_item ORDER BY FULL_DATE DESC) AS prev_stmnt_num, ar_id_item, stlr_stmnt_type, STLR_NEXT_AUTO_DR_DATE, full_date FROM uat7400_racs11.RT_AR_STMNT_LN_RL DRIVING_TABLE WHERE FULL_DATE < '20250728' AND DRIVING_TABLE.STLR_STMNT_TYPE = 'DetailedStatement' AND DRIVING_TABLE.enart_value like '%LineOfCredit%' ), PREVIOUS_YEAR AS (SELECT arid_item, baltt_code, AABPTL_AMT, full_date FROM uat7400_racs11.TB_APD_AR_BAL_PERIOD_LN_RL WHERE baltt_code = 'TotalInterestCollected' AND aabptl_value = 'Yearly' AND full_date = CONCAT(Cast(SUBSTRING('20250728', 1, 4) - 1 AS INT), '1231')) SELECT DISTINCT '401' AS rec_typ, (driving_table.ar_id_item||'-'||'DetailedLOCStatement') AS FILTER_VAL, (DRIVING_TABLE.ar_id_item||'-'||DRIVING_TABLE.IP_ID) AS `accnt_nmbr`, DRIVING_TABLE.ADT_MSG_UUID AS `uuid`, 1 AS `sort_order`, '401' AS `sort_order_1`, REPLACE(CAST(COALESCE(DLY_BALANCE.PDUE_INTRST_AMT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Prior Period Interest Uncollected/Due`, REPLACE(CAST(COALESCE(DRIVING_TABLE.intrst_due_amt, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Current Period Interest Due`, REPLACE(CAST(COALESCE((DLY_BALANCE.PDUE_INTRST_AMT +BILL_HIST.ARGBLR_INTRST_AMT_OWED), CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Total Interest Due`, REPLACE(CAST(COALESCE(DLY_BALANCE.PDUE_PRNCPL_AMT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Prior Periods Principal Uncollected/Due`, REPLACE(CAST(COALESCE(DRIVING_TABLE.PRNPL_DUE_AMT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Current Period Principal Due`, REPLACE(CAST(COALESCE(DLY_BALANCE.OTSNDG_PRNCPL_BAL, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Total Principal Due`, REPLACE(CAST(COALESCE(DRIVING_TABLE.LATE_CHRG_DUE_AMT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Late Charges Due`, REPLACE(CAST(COALESCE(DRIVING_TABLE.TOT_FEE_ASSD, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Miscellaneous Charges/Loan Fees Due`, REPLACE(CAST(COALESCE(BILL_HIST.ARGBLR_BNP_AMT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Total Billed - NOT Due`, REPLACE(CAST(COALESCE(DLY_BALANCE.INTRST_ACCRD_BAL, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Accrued Interest`, '' AS `Last Scheduled Payment Date`, DRIVING_TABLE.STLR_NEXT_AUTO_DR_DATE AS `Next Scheduled Payment Date`, MASTER_TABLE.RPSLR_GRC_TIME_FOR_PYMNT AS `Payment Grace Period`, REPLACE(CAST(COALESCE(MASTER_TABLE.ARBLR_CNTRCT_AMT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Disclosure - Amount Financed`, REPLACE(CAST(COALESCE(MASTER_TABLE.RACLR_APR, CAST(0 AS BIGINT)) AS NUMERIC(14, 10)), '.', '') AS `Disclosure - Annual Percentage Rate`, REPLACE(CAST(COALESCE(DRIVING_TABLE.TOT_FEE_ASSD, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Disclosure - Total Finance Charge`, '' AS `Original NUMBER OF Payments`, REPLACE(CAST(COALESCE(MASTER_TABLE.RPSLR_SCHDL_AMT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Principal AND Interest Payment`, REPLACE(CAST(COALESCE(BILL_HIST.ARGBLR_PRNCPL_OWED_AMT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Fixed Principal Amount`, REPLACE(CAST(COALESCE(BILL_HIST.ARGBLR_BILL_AMT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Current Payment Amount`, '' AS `Estimated Balloon Balance`, REPLACE(CAST(COALESCE(MASTER_TABLE.RACLR_ACCR_FACTOR, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Payoff - Daily Interest Amount`, REPLACE(CAST(COALESCE(DRIVING_TABLE.PYOFF_BAL, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Payoff - Net Payoff Amount`, RATE_CHARGE.RACHLR_MARGIN_RFRNC_CODE AS `Interest Index`, REPLACE(CAST(COALESCE(RATE_CHARGE.RACHLR_MARGIN_RAW_RATE, CAST(0 AS BIGINT)) AS NUMERIC(14, 10)), '.', '') AS `Interest Spread`, MASTER_TABLE.RACLR_PRMY_FRQNCY_INTVL_TYPE AS `Interest Change Frequency`, '' AS `Next Interest Change Date`, REPLACE(CAST(COALESCE(BAL_PERIOD.AABPTL_AMT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Interest Paid YEAR-TO-Date`, REPLACE(CAST(COALESCE(PREVIOUS_YEAR.AABPTL_AMT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Interest Paid Prior Year`, '' AS `Date OF FIRST Payment`, DRIVING_TABLE.AR_ID_ITEM AS `Account Number`, '' AS `Signature Card Indicator`, '' AS `Online Signature Card Completed Indicator`, '' AS `Paper Signature Card Returned`, DRIVING_TABLE.STLR_NEXT_AUTO_DR_DATE AS `Next Auto Debit Date`, PREVIOUS_STATEMENT.STLR_NEXT_AUTO_DR_DATE AS `Last Auto Debit Date`, DRIVING_TABLE.STLR_STMNT_ISSUED_DATE AS `Payoff Good Through Date`, '' AS `Early Payoff Penalty/Fee`, '' AS `Last Payment DATE`, '' AS `Last Payment Amount`, '' AS `Balloon Amount`, '' AS `Next Repayment Mod Date`, '' AS `Repayment Mod Reason`, MASTER_TABLE.ip_idfr_rltnp_mgr_prmry AS `Relationship Manager Name` FROM uat7400_racs11.RT_AR_STMNT_LN_RL DRIVING_TABLE LEFT JOIN uat7400_racs11.RT_APD_AR_MSTR_LN_RL MASTER_TABLE ON MASTER_TABLE.AR_ID_ITEM = DRIVING_TABLE.AR_ID_ITEM LEFT JOIN uat7400_racs11.RT_AR_DLY_BAL_LN_RL DLY_BALANCE ON DLY_BALANCE.AR_ID_ITEM =DRIVING_TABLE.AR_ID_ITEM AND DLY_BALANCE.FULL_DATE = '20250728' LEFT JOIN uat7400_racs11.RT_AR_GEN_BILL_HIST_LN_RL BILL_HIST ON BILL_HIST.AR_ID_ITEM=DRIVING_TABLE.AR_ID_ITEM LEFT JOIN BAL_PERIOD ON BAL_PERIOD.ARID_ITEM=DRIVING_TABLE.AR_ID_ITEM LEFT JOIN uat7400_racs11.TB_RATE_CHARGE_LN_RL RATE_CHARGE ON RATE_CHARGE.AR_ID_ITEM =DRIVING_TABLE.AR_ID_ITEM LEFT JOIN PREVIOUS_STATEMENT ON DRIVING_TABLE.AR_ID_ITEM = PREVIOUS_STATEMENT.AR_ID_ITEM AND PREVIOUS_STATEMENT.prev_stmnt_num = 1 LEFT JOIN PREVIOUS_YEAR ON DRIVING_TABLE.AR_ID_ITEM = PREVIOUS_YEAR.ARID_ITEM WHERE DRIVING_TABLE.FULL_DATE = '20250728' AND DRIVING_TABLE.STLR_STMNT_TYPE = 'DetailedStatement' AND DRIVING_TABLE.enart_value like '%LineOfCredit%'
hive_20250728201137_fbfcb17b-a163-446d-8ffb-094a469499a5
2025-07-28 20 11  Executing command(queryId=hive_20250728201137_fbfcb17b-a163-446d-8ffb-094a469499a5)  WITH PREV_RPYMNT_SCHDL AS (SELECT ROW_NUMBER() OVER (PARTITION BY ar_id_item ORDER BY FULL_DATE DESC) AS prev_rpymnt_num, ar_id_item, RPSLR_CRRNT_LN_TERM_VAL, full_date FROM uat7400_racs11.RT_RPYMNT_SCHDL_LN_RL RPYMNT_SCHDL WHERE FULL_DATE <= '20250728' ) SELECT DISTINCT '400' AS rec_typ, (driving_table.ar_id_item||'-'||'DetailedLOCStatement') AS FILTER_VAL, (DRIVING_TABLE.ar_id_item||'-'||DRIVING_TABLE.IP_ID) AS `accnt_nmbr`, DRIVING_TABLE.ADT_MSG_UUID AS `uuid`, 1 AS `sort_order`, '400' AS `sort_order_1`, tb_ip_id_mstr.NME_LNE `Coborrower Name`, master_table.AR_ID_ITEM `Account Number`, IF(locate('|', regexp_replace(master_table.APAT_VALUE_TITLE1, '\n', '\\|'))> 0, IF(LENGTH(split(regexp_replace(master_table.APAT_VALUE_TITLE1, '\n', '\\|'), '\\|') [0])> 60, SUBSTR(split(regexp_replace(master_table.APAT_VALUE_TITLE1, '\n', '\\|'), '\\|') [0], 1, 60), split(regexp_replace(master_table.APAT_VALUE_TITLE1, '\n', '\\|'), '\\|') [0]), SUBSTR(master_table.APAT_VALUE_TITLE1, 1, 60)) `Account Title - Line 1`, IF(locate('|', regexp_replace(master_table.APAT_VALUE_TITLE1, '\n', '\\|'))> 0, IF(LENGTH(split(regexp_replace(master_table.APAT_VALUE_TITLE1, '\n', '\\|'), '\\|') [1])> 60, SUBSTR(split(regexp_replace(master_table.APAT_VALUE_TITLE1, '\n', '\\|'), '\\|') [1], 1, 60), split(regexp_replace(master_table.APAT_VALUE_TITLE1, '\n', '\\|'), '\\|') [1]), SUBSTR(master_table.APAT_VALUE_TITLE1, 61, 60)) `Account Title - Line 2`, IF(locate('|', regexp_replace(master_table.APAT_VALUE_TITLE1, '\n', '\\|'))> 0, IF(LENGTH(split(regexp_replace(master_table.APAT_VALUE_TITLE1, '\n', '\\|'), '\\|') [2])> 60, SUBSTR(split(regexp_replace(master_table.APAT_VALUE_TITLE1, '\n', '\\|'), '\\|') [2], 1, 60), split(regexp_replace(master_table.APAT_VALUE_TITLE1, '\n', '\\|'), '\\|') [2]), SUBSTR(master_table.APAT_VALUE_TITLE1, 121, 60)) `Account Title - Line 3`, IF(locate('|', regexp_replace(master_table.APAT_VALUE_TITLE1, '\n', '\\|'))> 0, IF(LENGTH(split(regexp_replace(master_table.APAT_VALUE_TITLE1, '\n', '\\|'), '\\|') [3])> 60, SUBSTR(split(regexp_replace(master_table.APAT_VALUE_TITLE1, '\n', '\\|'), '\\|') [3], 1, 60), split(regexp_replace(master_table.APAT_VALUE_TITLE1, '\n', '\\|'), '\\|') [3]), SUBSTR(master_table.APAT_VALUE_TITLE1, 181, 60)) `Account Title - Line 4`, master_table.PDGR_VALUE `Product Group`, master_table.APD_CODE `Product Code`, master_table.APD_NAME `Product Code Description`, master_table.APA_NAME_MIX `Account Nickname`, master_table.APA_FRST_EFCTV_DATE `Opening Date`, master_table.RPSLR_LTST_MTRTY_DATE `Current Maturity Date`, master_table.TERM_VALUE `Account Term`, REPLACE(CAST(COALESCE(master_table.CREDIT_LIMIT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') `Current Credit Limit`, REPLACE(CAST(COALESCE(dly_bal.OTSNDG_PRNCPL_BAL, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') `Outstanding Principal Balance`, '' `Unadvanced Balance`, REPLACE(CAST(COALESCE(master_table.RACHLR_APLCBL_RATE, CAST(0 AS BIGINT)) AS NUMERIC(14, 10)), '.', '') `Interest Rate`, master_table.RPSLR_NEXT_DUE_DATE `Next Payment Due Date`, REPLACE(CAST(COALESCE(dly_bal.TOTAL_PDUE_AMT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') `Grand Total Due`, bil_hist.ARGBLR_NEXT_BILL_DATE `Next Bill Date`, bil_hist.ARGBLR_BILL_GEN_DATE `Previous Bill Date`, master_table.CRNCY_ISO4217_VAL `Currency Code`, '' `Mailing Option`, dly_bal.NMBR_OF_DAYS_DLQNY `Days Delinquent`, '' `Next Payment Due Amount`, master_table.RPSLR_OLD_MTRTY_DATE `Previous Maturity Date`, '' `New Maturity Date`, PREV_RPYMNT_SCHDL.RPSLR_CRRNT_LN_TERM_VAL `Previous Term Number of Pmts` FROM uat7400_racs11.RT_AR_STMNT_LN_RL DRIVING_TABLE LEFT JOIN uat7400_racs11.RT_APD_AR_MSTR_LN_RL master_table ON DRIVING_TABLE.ar_id_item = master_table.ar_id_item LEFT JOIN uat7400_racs11.RT_AR_GEN_BILL_HIST_LN_RL bil_hist ON DRIVING_TABLE.ar_id_item = bil_hist.ar_id_item LEFT JOIN uat7400_racs11.RT_AR_DLY_BAL_LN_RL dly_bal ON DRIVING_TABLE.ar_id_item = dly_bal.ar_id_item AND dly_bal.FULL_DATE = '20250728'  LEFT JOIN uat7400_racs11.TB_AR_IP_RLTNP_LN_RL RLTNP ON RLTNP.ar_id_item = DRIVING_TABLE.ar_id_item AND RLTNP.arirt_code = 'Borrower' AND RLTNP.arir_is_prmry = 'SECONDARY' LEFT JOIN uat7400_racs11.TB_CUST_MSTR_IP tb_ip_id_mstr ON RLTNP.ip_id_item = tb_ip_id_mstr.EC_IP_ID LEFT JOIN PREV_RPYMNT_SCHDL ON DRIVING_TABLE.AR_ID_ITEM           = PREV_RPYMNT_SCHDL.AR_ID_ITEM AND PREV_RPYMNT_SCHDL.prev_rpymnt_num = 1 WHERE DRIVING_TABLE.FULL_DATE = '20250728' AND DRIVING_TABLE.STLR_STMNT_TYPE = 'DetailedStatement' AND DRIVING_TABLE.enart_value like '%LineOfCredit%'
hive_20250728201222_5a394a22-2596-4afd-a404-1be2c802fee4
2025-07-28 20 12  Executing command(queryId=hive_20250728201222_5a394a22-2596-4afd-a404-1be2c802fee4)  WITH REC_11410 AS (SELECT COMM_PREF_TYP_VAL, COMM_PREF_STAT, EC_IP_ID, ROW_NUMBER() OVER ( PARTITION BY EC_IP_ID ORDER BY FULL_DATE DESC ) RNK FROM uat7400_racs11.TB_11410_IP_CMMCN_PREF_TYP_EC WHERE FULL_DATE <= '20250728' AND actn_ind    <> 'Delete' ) SELECT DISTINCT '201'                       AS `REC_TYP`, (driving_table.ar_id_item||'-'||'DetailedLOCStatement') AS FILTER_VAL, (DRIVING_TABLE.ar_id_item||'-'||DRIVING_TABLE.IP_ID) AS `accnt_nmbr`, DRIVING_TABLE.ADT_MSG_UUID AS `uuid`, 1                                       AS `sort_order`, '201'                                         AS `sort_order_1`, IP_ID.EC_IP_ID                            AS `Customer Number`, IP_ID.NME_PRFX                            AS `Name Prefix`, IP_ID.FRST_NME                            AS `Customer FIRST Name`, IP_ID.MID_NME                             AS `Customer Middle Name`, IP_ID.LST_NME                             AS `Last Name`, IP_ID.NME_SFX                             AS `Suffix`, IP_ID.TAX_ID                              AS `Tax ID`, date_format(IP_ID.BRTH_DTE, 'yyyy-MM-dd') AS `Date OF Birth`, IP_ID.HOME_PHNBR                          AS `Home Phone`, IP_ID.business_phnbr                      AS `Business Phone`, IP_ID.PRMRY_EMAIL_ADDR                    AS `Electronic Mail`, ip_id.gndr                                AS `Sex`, IP_ID.FAX_PHNBR                           AS `Customer Fax Number`, ''                                        AS `Secret Word`, CASE WHEN IP_ID.ISS_ID_TYP_VAL = 'Driver\'s License' THEN IP_ID.ISS_ID_VAL ELSE '' END AS `Driver License Number`, CASE WHEN IP_ID.ISS_ID_TYP_VAL = 'Driver\'s License' THEN IP_ID.ID_ISS_BY ELSE '' END AS `Driver License State`, CASE WHEN IP_ID.ISS_ID_TYP_VAL = 'Driver\'s License' THEN IP_ID.ID_EXP_DTE ELSE '' END                                                                                            AS `Driver License Expiration Date`, CAST( CAST( IF( DATEDIFF( concat(SUBSTR('20250728', 0, 4),'-',SUBSTR('20250728', 5, 2),'-', SUBSTR('20250728', 7, 2)), CONCAT( SUBSTR('20250728', 0, 4), SUBSTR(IP_ID.BRTH_DTE, 5, 7) ) )>= 0, ( SUBSTR('20250728', 0, 4) - SUBSTR(IP_ID.BRTH_DTE, 0, 4) ), ( SUBSTR('20250728', 0, 4) - SUBSTR(IP_ID.BRTH_DTE, 0, 4)-1 ) ) AS INT ) AS string ) AS `Age AS OF System Date`, IP_ID.IP_ROLE_STRT_DTE_PRIMARY                                                                 AS `Date Account Opened`, ''                                                                                             AS `Mail Flag`, IP_ID.VIP_TYP_VAL                                                                              AS `Customer Code`, IP_ID.NME_LNE                                                                                  AS `Customer Name`, CASE WHEN REC_11410.COMM_PREF_TYP_VAL = 'Privacy Notice' AND REC_11410.COMM_PREF_STAT     = 'Opt In' THEN '1' ELSE '0' END AS `Annual Privacy Notice`, CASE WHEN IP_ID.DOC_DLVRY_PREF = 'Electronic' THEN '00' WHEN IP_ID.DOC_DLVRY_PREF = 'Paper and Electronic' THEN '01' WHEN IP_ID.DOC_DLVRY_PREF = 'Paper' THEN '02' ELSE '' END AS `Electronic STATEMENT Indicator`, CASE WHEN REC_11410.COMM_PREF_TYP_VAL = 'ADA Large Print' AND REC_11410.COMM_PREF_STAT     = 'Opt In' THEN '1' ELSE '0' END AS `ADA Preference Indicator`, EC_11900.RLT_CDE AS `Relationship Code` FROM uat7400_racs11. RT_AR_STMNT_LN_RL DRIVING_TABLE  INNER JOIN uat7400_racs11.TB_11900_IP_AR_RLTNP_EC EC_11900 ON  DRIVING_TABLE.AR_ID_ITEM         = EC_11900.AR_ID AND EC_11900.FULL_DATE              <= '20250728' AND EC_11900.IP_RLT_TYP              = 'Secondary' AND EC_11900.actn_ind               <> 'Delete'  LEFT JOIN uat7400_racs11.TB_CUST_MSTR_IP IP_ID ON EC_11900.EC_IP_ID = IP_ID.EC_IP_ID  LEFT JOIN REC_11410 ON REC_11410.EC_IP_ID         = IP_ID.EC_IP_ID AND REC_11410.RNK             = 1  WHERE DRIVING_TABLE.FULL_DATE = '20250728' AND DRIVING_TABLE.STLR_STMNT_TYPE = 'DetailedStatement' AND DRIVING_TABLE.enart_value like '%LineOfCredit%'
hive_20250728201340_05700585-1c7c-4291-941e-7db86dc4ff3e
2025-07-28 20 13  Executing command(queryId=hive_20250728201340_05700585-1c7c-4291-941e-7db86dc4ff3e)  WITH REC_11410 AS (SELECT COMM_PREF_TYP_VAL, COMM_PREF_STAT, EC_IP_ID, ROW_NUMBER() OVER ( PARTITION BY EC_IP_ID ORDER BY FULL_DATE DESC ) RNK FROM uat7400_racs11.TB_11410_IP_CMMCN_PREF_TYP_EC WHERE FULL_DATE <= '20250728' AND actn_ind    <> 'Delete' ) SELECT DISTINCT '200'                       AS `REC_TYP`, (driving_table.ar_id_item||'-'||'DetailedLOCStatement') AS FILTER_VAL, (DRIVING_TABLE.ar_id_item||'-'||DRIVING_TABLE.IP_ID) AS `accnt_nmbr`, DRIVING_TABLE.ADT_MSG_UUID AS `uuid`, 1                                       AS `sort_order`, '200'                                         AS `sort_order_1`, IP_ID.EC_IP_ID                            AS `Customer Number`, IP_ID.NME_PRFX                            AS `Name Prefix`, IP_ID.FRST_NME                            AS `Customer FIRST Name`, IP_ID.MID_NME                             AS `Customer Middle Name`, IP_ID.LST_NME                             AS `Last Name`, IP_ID.NME_SFX                             AS `Suffix`, IP_ID.TAX_ID                              AS `Tax ID`, date_format(IP_ID.BRTH_DTE, 'yyyy-MM-dd') AS `Date OF Birth`, IP_ID.HOME_PHNBR                          AS `Home Phone`, IP_ID.business_phnbr                      AS `Business Phone`, IP_ID.PRMRY_EMAIL_ADDR                    AS `Electronic Mail`, ip_id.gndr                                AS `Sex`, IP_ID.FAX_PHNBR                           AS `Customer Fax Number`, ''                                        AS `Secret Word`, CASE WHEN IP_ID.ISS_ID_TYP_VAL = 'Driver\'s License' THEN IP_ID.ISS_ID_VAL ELSE '' END AS `Driver License Number`, CASE WHEN IP_ID.ISS_ID_TYP_VAL = 'Driver\'s License' THEN IP_ID.ID_ISS_BY ELSE '' END AS `Driver License State`, CASE WHEN IP_ID.ISS_ID_TYP_VAL = 'Driver\'s License' THEN IP_ID.ID_EXP_DTE ELSE '' END                                                                                            AS `Driver License Expiration Date`, CAST( CAST( IF( DATEDIFF( concat(SUBSTR('20250728', 0, 4),'-',SUBSTR('20250728', 5, 2),'-', SUBSTR('20250728', 7, 2)), CONCAT( SUBSTR('20250728', 0, 4), SUBSTR(IP_ID.BRTH_DTE, 5, 7) ) )>= 0, ( SUBSTR('20250728', 0, 4) - SUBSTR(IP_ID.BRTH_DTE, 0, 4) ), ( SUBSTR('20250728', 0, 4) - SUBSTR(IP_ID.BRTH_DTE, 0, 4)-1 ) ) AS INT ) AS string ) AS `Age AS OF System Date`, IP_ID.IP_ROLE_STRT_DTE_PRIMARY                                                                 AS `Date Account Opened`, ''                                                                                             AS `Mail Flag`, IP_ID.VIP_TYP_VAL                                                                              AS `Customer Code`, IP_ID.NME_LNE                                                                                  AS `Customer Name`, CASE WHEN REC_11410.COMM_PREF_TYP_VAL = 'Privacy Notice' AND REC_11410.COMM_PREF_STAT     = 'Opt In' THEN '1' ELSE '0' END AS `Annual Privacy Notice`, CASE WHEN IP_ID.DOC_DLVRY_PREF = 'Electronic' THEN '00' WHEN IP_ID.DOC_DLVRY_PREF = 'Paper and Electronic' THEN '01' WHEN IP_ID.DOC_DLVRY_PREF = 'Paper' THEN '02' ELSE '' END AS `Electronic STATEMENT Indicator`, CASE WHEN REC_11410.COMM_PREF_TYP_VAL = 'ADA Large Print' AND REC_11410.COMM_PREF_STAT     = 'Opt In' THEN '1' ELSE '0' END AS `ADA Preference Indicator`, EC_11900.RLT_CDE AS `Relationship Code` FROM uat7400_racs11. RT_AR_STMNT_LN_RL DRIVING_TABLE  INNER JOIN uat7400_racs11.TB_11900_IP_AR_RLTNP_EC EC_11900 ON DRIVING_TABLE.AR_ID_ITEM         = EC_11900.AR_ID AND EC_11900.FULL_DATE              <= '20250728' AND EC_11900.IP_RLT_TYP              = 'Primary' AND EC_11900.actn_ind               <> 'Delete'  LEFT JOIN uat7400_racs11.TB_CUST_MSTR_IP IP_ID ON EC_11900.EC_IP_ID = IP_ID.EC_IP_ID  LEFT JOIN REC_11410 ON REC_11410.EC_IP_ID         = IP_ID.EC_IP_ID AND REC_11410.RNK             = 1 WHERE DRIVING_TABLE.FULL_DATE = '20250728' AND DRIVING_TABLE.STLR_STMNT_TYPE = 'DetailedStatement' AND DRIVING_TABLE.enart_value like '%LineOfCredit%'
hive_20250728201506_20ef50a7-170c-4781-b97c-08bb53a13020
2025-07-28 20 15  Executing command(queryId=hive_20250728201506_20ef50a7-170c-4781-b97c-08bb53a13020)  WITH b AS (SELECT ou_id, concat( CASE WHEN end_wkday != '' THEN concat(strt_wkday, ' to ', end_wkday) ELSE strt_wkday END, ' - ', wk_tme ) AS hours_of_oper FROM (SELECT ou_id, CASE WHEN locate(',', wk_daY) = 0 THEN wk_daY ELSE substring( wk_daY, 0, locate(',', wk_daY)-1 ) END                                                                          AS strt_wkday, reverse( substring( reverse(wk_daY), 0, locate( ',', reverse(wk_daY) )-1 ) ) AS end_wkday, wk_tme FROM (SELECT ou_id, Concat_ws( ',', Collect_list(wk_daY) ) AS wk_daY, concat(strt_tme, ' to ', end_tme)      AS wk_tme FROM uat7400_racs11.tb_03110_hrs_of_oprn_wkday_eo GROUP BY ou_id, concat(strt_tme, ' to ', end_tme) ) a ) cd ORDER BY hours_of_oper ), ORG AS (SELECT Ldbid, ou_id, ou_nme, CITY_NME, ST_CDE, soc_media_acc_id, tele_nbr, bus_phone_nmbr, hrs_of_oprn, email_addr, split(addresscols, '-') [0] tag, split(addresscols, '-') [1] value FROM (SELECT Ldbid, ou_id, ou_nme, CITY_NME, ST_CDE, soc_media_acc_id, tele_nbr, bus_phone_nmbr, hrs_of_oprn, email_addr, ADDR_ADDTL_INFO FROM uat7400_racs11.TB_ORG_UNIT_MSTR_EO WHERE ou_typ IN ('Financial Entity') ) t lateral VIEW explode( split(ADDR_ADDTL_INFO, ',') ) branchaddr AS addresscols ) SELECT DISTINCT '100'            AS rec_typ, (driving_table.ar_id_item||'-'||'DetailedLOCStatement')                    AS FILTER_VAL, (DRIVING_TABLE.ar_id_item||'-'||DRIVING_TABLE.IP_ID) AS `accnt_nmbr`, DRIVING_TABLE.ADT_MSG_UUID AS `uuid`, 1                            AS `sort_order`, '100'                              AS `sort_order_1`, driving_table.ar_id_item       AS `account number`, org_snap.ou_id                 AS `company code`, org_snap.ou_nme                AS `company name`, org_snap.`Address Line`        AS `Address Line 1`, org_snap.`Address Line (2)`    AS `Address Line 2`, org_snap.`city`                AS `city`, org_snap.`state`               AS `state`, org_snap.`company postal code` AS `postal code`, org_snap.soc_media_acc_id      AS `web site address`, org_snap.tele_nbr              AS `phone NUMBER 1`, tb_01600.tele_nbr        AS `phone NUMBER 2`, ''                             AS `contact`, org_snap.email_addr            AS `email address`, tb_03110.hours_of_operation       AS `hours OF operation` FROM uat7400_racs11. RT_AR_STMNT_LN_RL driving_table LEFT OUTER JOIN (SELECT Ldbid, ou_id, ou_nme, CITY_NME, ST_CDE, soc_media_acc_id, tele_nbr, bus_phone_nmbr, hrs_of_oprn, email_addr, MAX( IF( tag        = 'StreetName', COALESCE(value, ''), '' ) ) || MAX( IF( ( ( tag = 'StreetName' AND value            <> '' AND value            IS NOT NULL ) OR ( tag              = 'BuildingId' AND value            <> '' AND value            IS NOT NULL ) ), ',', '' ) ) || MAX( IF( tag     = 'BuildingId', COALESCE(value, ''), '' ) ) AS `Address Line`, MAX( IF( tag        = 'BoxNumber', COALESCE(value, ''), '' ) )  AS `Address Line (2)`, MAX( IF( tag        = 'Postcode', COALESCE(value, ''), '' ) )   AS `company postal code`, MAX( IF( tag        = 'City', COALESCE(value, ''), '' ) )   AS `city`, MAX( IF( tag        = 'State', COALESCE(value, ''), '' ) )   AS `state` FROM ORG GROUP BY Ldbid, ou_id, ou_nme, CITY_NME, ST_CDE, soc_media_acc_id, tele_nbr, bus_phone_nmbr, hrs_of_oprn, email_addr ) org_snap ON CAST( driving_table.ldbid AS VARCHAR(10) ) = org_snap.LDBID LEFT OUTER JOIN (SELECT ou_id, concat_ws( ',', sort_array( collect_list(hours_of_oper) ) ) AS hours_of_operation FROM b GROUP BY ou_id ) tb_03110 ON org_snap.ou_id = tb_03110.ou_id LEFT OUTER JOIN (SELECT row_number() OVER ( partition BY ou_id, prcs_date ORDER BY prcs_date DESC ) rw_id, ou_id, tele_nbr FROM uat7400_racs11.tb_01600_ph_eo WHERE ph_typ = 'Business' ) tb_01600 ON org_snap.ou_id = tb_01600.ou_id AND rw_id         = 1 WHERE driving_table.FULL_DATE                 = '20250728' AND DRIVING_TABLE.STLR_STMNT_TYPE = 'DetailedStatement' AND DRIVING_TABLE.enart_value like '%LineOfCredit%'
hive_20250728201629_5e045095-7ebe-48a2-965c-1595ac99b23c
2025-07-28 20 16  Executing command(queryId=hive_20250728201629_5e045095-7ebe-48a2-965c-1595ac99b23c)  select ('ZZZZZZ-ZZZZZZZ') as FILTER_VAL union select (ar_id_item||'-'||stlr_stmnt_type) AS FILTER_VAL from uat7400_racs11.RT_AR_STMNT_LN_RL where stlr_pstmtrty_stmnt_ind = 'Yes' AND full_date = '20250728'
hive_20250728201703_0bd41b55-d531-4d1a-89c1-11beea783490
2025-07-28 20 17  Executing command(queryId=hive_20250728201703_0bd41b55-d531-4d1a-89c1-11beea783490)  WITH DRIVING_TABLE AS (SELECT IP_ID, AR_ID_ITEM, LDBID, STLR_STMNT_ISSUED_DATE, PRCS_DATE, STLR_STMNT_TYPE, ARIR_COMM_MODE, ADT_MSG_UUID, NTFN_MODE FROM uat7400_racs11. RT_AR_STMNT_LN_RL WHERE FULL_DATE = '20250728' AND stlr_pstmtrty_stmnt_ind = 'Yes' ), 11230_IP_POC AS (SELECT ec_ip_id, PSTL_ADDR_TYP, ENT_POC_SEQ_NBR, pstl_addr_cat, full_date, adrr_prio, row_number() OVER (PARTITION BY ec_ip_id, PSTL_ADDR_TYP, ENT_POC_SEQ_NBR ORDER BY full_date DESC, adrr_prio) lst_rec, PAL6_DSTN_LNE1, PAL7_DSTN_LNE2, PAL8_DSTN_LNE3, LCT1_CITY, LCT2_ST, LCT3_PSTL_CDE, LCT6_CNTRY, PSTL_ADDR_FRMT_NME, mlng_cde FROM (SELECT ec_ip_id, PSTL_ADDR_TYP, ENT_POC_SEQ_NBR, strt_dte, end_dte, prptl_strt_dte, prptl_end_dte, pstl_addr_cat, addr.full_date, IF(pstl_addr_cat = 'Temporary', 1, IF(pstl_addr_cat = 'Seasonal', 2, 3)) adrr_prio, PAL6_DSTN_LNE1, PAL7_DSTN_LNE2, PAL8_DSTN_LNE3, LCT1_CITY, LCT2_ST, LCT3_PSTL_CDE, LCT6_CNTRY, PSTL_ADDR_FRMT_NME, mlng_cde FROM uat7400_racs11.TB_11230_IP_POC_PSTL_ADDR_EC addr INNER JOIN (SELECT DISTINCT IP_ID, FULL_DATE, FULL_DATE_TXT FROM uat7400_racs11. RT_AR_STMNT_LN_RL WHERE FULL_DATE = '20250728' AND stlr_pstmtrty_stmnt_ind = 'Yes' ) drv ON drv.IP_ID                            = addr.ec_ip_id WHERE (addr.actn_ind                   <> 'Delete' AND ((COALESCE(addr.pstl_addr_cat, '') <> 'Seasonal' AND (CAST(addr.strt_dte AS DATE)       <= CAST(drv.full_date_txt AS DATE) AND (CAST(addr.end_dte AS DATE)        >= CAST(drv.full_date_txt AS DATE) OR addr.end_dte                        IS NULL))) OR (COALESCE(addr.pstl_addr_cat, '')    = 'Seasonal' AND (CAST(substring(REPLACE(drv.FULL_DATE_TXT, '-', ''), 5) AS INT) BETWEEN CAST(addr.prptl_strt_dte AS INT) AND CAST(addr.prptl_end_dte AS INT))))) ) t ), 11220_IP_POC_EMAIL AS (SELECT ec_ip_id, EMAIL_TYP, ENT_POC_SEQ_NBR, EMAIL_ADDR, eml.full_date, row_number() OVER(PARTITION BY ec_ip_id, EMAIL_TYP, ENT_POC_SEQ_NBR ORDER BY eml.full_date DESC, CAST(eml.strt_dte AS DATE) DESC) lst FROM uat7400_racs11.TB_11220_IP_POC_EMAIL_ADDR_EC eml INNER JOIN (SELECT DISTINCT IP_ID, FULL_DATE, FULL_DATE_TXT FROM uat7400_racs11. RT_AR_STMNT_LN_RL WHERE FULL_DATE = '20250728' AND stlr_pstmtrty_stmnt_ind = 'Yes' ) drv ON drv.IP_ID                    = eml.ec_ip_id WHERE (eml.actn_ind            <> 'Delete' AND (CAST(eml.strt_dte AS DATE)<= CAST(drv.full_date_txt AS DATE) AND (CAST(eml.end_dte AS DATE) >= CAST(drv.full_date_txt AS DATE) OR eml.end_dte                 IS NULL))) ), 11915_IP_AR AS (SELECT ec_ip_id, ar_id, ALT_PRFRD_PSTL_ADDR_TYP, ALT_PRFRD_PSTL_ADDR_SEQ_NBR, PRFRD_COMM_METH, row_number() OVER (PARTITION BY ec_ip_id, PRFRD_COMM_METH, ar_id ORDER BY full_date DESC) lst FROM uat7400_racs11.TB_11915_IP_AR_RLTNP_CMMN_PREF_OCCR_EC WHERE IP_AR_RLT_COMM_PREF_VAL = 'DetailedStatement' AND actn_ind                 <> 'Delete' ), 11916_IP_AR_EMAIL AS (SELECT DISTINCT TB_11916.ec_ip_id, ar_id, alt_prfrd_email_typ, alt_prfrd_email_seq_nbr, TB_11220.EMAIL_ADDR, TB_11220.FULL_DATE FROM uat7400_racs11.TB_11916_IP_AR_RLTNP_CMMN_PREF_NTFN_EC TB_11916 LEFT JOIN (SELECT TB_11220.ec_ip_id, EMAIL_TYP, ENT_POC_SEQ_NBR, EMAIL_ADDR, MAX(FULL_DATE) OVER (PARTITION BY TB_11220.ec_ip_id, EMAIL_TYP, ENT_POC_SEQ_NBR) AS FULL_DATE FROM uat7400_racs11.TB_11220_IP_POC_EMAIL_ADDR_EC TB_11220 ) TB_11220 ON TB_11220.ec_ip_id          = TB_11916.ec_ip_id AND TB_11220.EMAIL_TYP        = TB_11916.alt_prfrd_email_typ AND TB_11220.ENT_POC_SEQ_NBR  = TB_11916.alt_prfrd_email_seq_nbr WHERE IP_AR_RLT_COMM_PREF_VAL = 'DetailedStatement' AND alt_prfrd_email_typ       = 'Primary' AND elctr_msg_ntfn_meth       = 'Email' AND alt_prfrd_email_seq_nbr   = 1 AND actn_ind                 <> 'Delete' ), 11916_IP_AR_TEXTMSG AS (SELECT DISTINCT TB_11916.ec_ip_id, ar_id, alt_prfrd_txt_msg_ph_typ, alt_prfrd_txt_msg_seq_nbr, TB_11210.ful_tele_nbr, TB_11210.FULL_DATE FROM uat7400_racs11.TB_11916_IP_AR_RLTNP_CMMN_PREF_NTFN_EC TB_11916 LEFT JOIN (SELECT TB_11210.ec_ip_id, ph_typ, ENT_POC_SEQ_NBR, ful_tele_nbr, MAX(FULL_DATE) OVER (PARTITION BY TB_11210.ec_ip_id, ph_typ, ENT_POC_SEQ_NBR) AS FULL_DATE FROM uat7400_racs11.TB_11210_IP_TELE_REC_EC TB_11210 ) TB_11210 ON TB_11210.ec_ip_id          = TB_11916.ec_ip_id AND TB_11210.ph_typ           = TB_11916.alt_prfrd_txt_msg_ph_typ AND TB_11210.ENT_POC_SEQ_NBR  = TB_11916.alt_prfrd_txt_msg_seq_nbr WHERE IP_AR_RLT_COMM_PREF_VAL = 'DetailedStatement' AND elctr_msg_ntfn_meth       = 'Text Message' AND alt_prfrd_txt_msg_seq_nbr = 1 AND actn_ind                 <> 'Delete' ) SELECT DISTINCT 'TRN' AS REC_TYP, (driving_table.ar_id_item||'-'||driving_table.stlr_stmnt_type)         AS FILTER_VAL, (DRIVING_TABLE.ar_id_item ||'-' ||DRIVING_TABLE.IP_ID) AS `accnt_nmbr`, DRIVING_TABLE.ADT_MSG_UUID AS `uuid`, 1                      AS `sort_order`, '0'                    AS `sort_order_1`, ORG_SNAP.OU_ID         AS `Code TO Identify Client`, ORG_SNAP_LE.LGL_ENT    AS `Code Identifying Company WITH client`, TB_IP_ID_MSTR.BRNCH_ID AS `Branch Office WHERE Customer Opened account`, DRIVING_TABLE.STLR_STMNT_TYPE                                                                                                                                                                                                                                                                                                                                                      AS `Form/Letter Type`, '100'                                                                                                                                                                                                                                                                                                                                                                              AS `Variation OF the Form/Letter`, DRIVING_TABLE.STLR_STMNT_ISSUED_DATE                                                                                                                                                                                                                                                                                                                                               AS `System Processing Date`, TB_IP_ID_MSTR.EC_IP_ID                                                                                                                                                                                                                                                                                                                                                             AS `Customer Number`, TB_IP_ID_MSTR.NME_LNE                                                                                                                                                                                                                                                                                                                                                              AS `Full Legal Name OF Customer`, IF(locate('|', regexp_replace(LN_SNAP.APAT_VALUE_TITLE1, '\n', '\\|'))> 0, IF(LENGTH(split(regexp_replace(LN_SNAP.APAT_VALUE_TITLE1, '\n', '\\|'), '\\|') [0])> 60, SUBSTR(split(regexp_replace(LN_SNAP.APAT_VALUE_TITLE1, '\n', '\\|'), '\\|') [0], 1, 60), split(regexp_replace(LN_SNAP.APAT_VALUE_TITLE1, '\n', '\\|'), '\\|') [0]), SUBSTR(LN_SNAP.APAT_VALUE_TITLE1, 1, 60))  AS `Primary Title ON Account`, IF(locate('|', regexp_replace(LN_SNAP.APAT_VALUE_TITLE1, '\n', '\\|'))> 0, IF(LENGTH(split(regexp_replace(LN_SNAP.APAT_VALUE_TITLE1, '\n', '\\|'), '\\|') [1])> 60, SUBSTR(split(regexp_replace(LN_SNAP.APAT_VALUE_TITLE1, '\n', '\\|'), '\\|') [1], 1, 60), split(regexp_replace(LN_SNAP.APAT_VALUE_TITLE1, '\n', '\\|'), '\\|') [1]), SUBSTR(LN_SNAP.APAT_VALUE_TITLE1, 61, 60)) AS `Secondary Title ON Account`, COALESCE(11230_IP_POC.PAL6_DSTN_LNE1, 11230_IP_POC_1.PAL6_DSTN_LNE1, TB_IP_ID_MSTR.DEST_LNE_TXT1, '')                                                                                                                                                                                                                                                                              AS `Address Line 1`, COALESCE(11230_IP_POC.PAL7_DSTN_LNE2, 11230_IP_POC_1.PAL7_DSTN_LNE2, TB_IP_ID_MSTR.DEST_LNE_TXT2, '')                                                                                                                                                                                                                                                                              AS `Address Line 2`, COALESCE(11230_IP_POC.PAL8_DSTN_LNE3, 11230_IP_POC_1.PAL8_DSTN_LNE3, TB_IP_ID_MSTR.DEST_LNE_TXT3, '')                                                                                                                                                                                                                                                                              AS `Address Line 3`, ''                                                                                                                                                                                                                                                                                                                                                                                 AS `Address Line 4`, COALESCE(11230_IP_POC.LCT1_CITY, 11230_IP_POC_1.LCT1_CITY, TB_IP_ID_MSTR.LOC_CITY, '')                                                                                                                                                                                                                                                                                             AS `City`, SUBSTRING(COALESCE(11230_IP_POC.LCT2_ST, 11230_IP_POC_1.LCT2_ST, TB_IP_ID_MSTR.LOC_STATE, ''), 1, 2)                                                                                                                                                                                                                                                                               AS `State`, COALESCE(11230_IP_POC.LCT3_PSTL_CDE, 11230_IP_POC_1.LCT3_PSTL_CDE, TB_IP_ID_MSTR.LOC_PSTL_CODE, '')                                                                                                                                                                                                                                                                                AS `Zip Code`, DRIVING_TABLE.AR_ID_ITEM                                                                                                                                                                                                                                                                                                                                                           AS `Account Number`, ''                                                                                                                                                                                                                                                                                                                                                                                 AS `OMR Glyph Code FROM DocuCorp`, COALESCE(IF(11230_IP_POC.ec_ip_id IS NULL, NULL, IF(11230_IP_POC.PSTL_ADDR_FRMT_NME = 'US Domestic', 11230_IP_POC.PSTL_ADDR_FRMT_NME, 11230_IP_POC.LCT6_CNTRY)), IF(11230_IP_POC_1.ec_ip_id IS NULL, NULL, IF(11230_IP_POC_1.PSTL_ADDR_FRMT_NME = 'US Domestic', 11230_IP_POC_1.PSTL_ADDR_FRMT_NME, 11230_IP_POC_1.LCT6_CNTRY)), IF(TB_IP_ID_MSTR.PSTL_ADDR_FRMT_NME = 'US Domestic', TB_IP_ID_MSTR.PSTL_ADDR_FRMT_NME, TB_IP_ID_MSTR.LOC_CNTRY), '') AS `Country Code`, CASE WHEN (COALESCE(11230_IP_POC.PSTL_ADDR_FRMT_NME, 11230_IP_POC_1.PSTL_ADDR_FRMT_NME, TB_IP_ID_MSTR.PSTL_ADDR_FRMT_NME) = 'US Domestic' OR COALESCE(11230_IP_POC.LCT6_CNTRY, 11230_IP_POC_1.LCT6_CNTRY, TB_IP_ID_MSTR.LOC_CNTRY)                             = 'US') THEN '0' WHEN (COALESCE(11230_IP_POC.PSTL_ADDR_FRMT_NME, 11230_IP_POC_1.PSTL_ADDR_FRMT_NME, TB_IP_ID_MSTR.PSTL_ADDR_FRMT_NME) IS NULL AND COALESCE(11230_IP_POC.LCT6_CNTRY, 11230_IP_POC_1.LCT6_CNTRY, TB_IP_ID_MSTR.LOC_CNTRY)                            IS NULL) THEN ' ' ELSE '1' END                                                                              AS `Non-US Country`, COALESCE(11230_IP_POC.MLNG_CDE, 11230_IP_POC_1.MLNG_CDE, TB_IP_ID_MSTR.MLNG_CDE) AS `Customer Mail Flag`, LN_SNAP.AR_ID_ITEM_ORG_UNIT                                                      AS `Branch OF Ownership OF Account`, CASE WHEN STLR_STMNT_TYPE = 'DetailedStatement' and arir_comm_mode = 'SecureEMessage' and ntfn_mode like '%Email%' THEN COALESCE(11916_IP_AR_EMAIL.EMAIL_ADDR, 11220_IP_POC_EMAIL.EMAIL_ADDR, 11220_IP_POC_EMAIL_1.EMAIL_ADDR, TB_IP_ID_MSTR.PRMRY_EMAIL_ADDR, '') ELSE COALESCE(11220_IP_POC_EMAIL.EMAIL_ADDR, 11220_IP_POC_EMAIL_1.EMAIL_ADDR, TB_IP_ID_MSTR.PRMRY_EMAIL_ADDR, '') END AS `Electronic Mail`, IF(((11915_IP_AR_D.ec_ip_id    IS NOT NULL AND 11915_IP_AR_D.PRFRD_COMM_METH = 'Direct Mail') OR (11915_IP_AR_D.ec_ip_id       IS NULL AND (TB_IP_ID_MSTR.EC_IP_ID      IS NOT NULL AND TB_IP_ID_MSTR.DOC_DLVRY_PREF IN ('Paper and Electronic', 'Paper'))) OR (11915_IP_AR_D.ec_ip_id       IS NULL AND TB_IP_ID_MSTR.EC_IP_ID       IS NULL AND DRIVING_TABLE.ARIR_COMM_MODE  = 'Mail')), '1', '0') AS `Paper Indicator`, IF(((11915_IP_AR_S.ec_ip_id    IS NOT NULL AND 11915_IP_AR_S.PRFRD_COMM_METH = 'Secure E-Message') OR (11915_IP_AR_S.ec_ip_id       IS NULL AND (TB_IP_ID_MSTR.EC_IP_ID      IS NOT NULL AND TB_IP_ID_MSTR.DOC_DLVRY_PREF IN ('Paper and Electronic', 'Electronic'))) OR (11915_IP_AR_S.ec_ip_id       IS NULL AND TB_IP_ID_MSTR.EC_IP_ID       IS NULL AND DRIVING_TABLE.ARIR_COMM_MODE  = 'Email')), '1', '0') AS `Secure E-MESSAGE Indicator`, CASE WHEN STLR_STMNT_TYPE = 'DetailedStatement' and arir_comm_mode = 'SecureEMessage' and ntfn_mode like '%SMS%' THEN COALESCE(11916_IP_AR_TEXTMSG.ful_tele_nbr, '') ELSE '' END AS `Text Enabled Phone Number`, CASE WHEN DRIVING_TABLE.NTFN_MODE = 'SMS' THEN 'Text' WHEN DRIVING_TABLE.NTFN_MODE = 'Email' THEN 'Email' WHEN DRIVING_TABLE.NTFN_MODE = 'Email, SMS' THEN 'Email, Text' END AS `Secure E MESSAGE Indicator Notification Method Indicator` FROM DRIVING_TABLE LEFT JOIN uat7400_racs11.TB_ORG_UNIT_MSTR_EO ORG_SNAP ON CAST(DRIVING_TABLE.LDBID AS VARCHAR(10)) = ORG_SNAP.LDBID AND ORG_SNAP.OU_TYP                        IN ('Financial Entity') LEFT JOIN uat7400_racs11.TB_CUST_MSTR_IP TB_IP_ID_MSTR ON DRIVING_TABLE.IP_ID = TB_IP_ID_MSTR.EC_IP_ID LEFT JOIN uat7400_racs11.RT_APD_AR_MSTR_LN_RL LN_SNAP ON LN_SNAP.AR_ID_ITEM = DRIVING_TABLE.AR_ID_ITEM LEFT JOIN uat7400_racs11.TB_ORG_UNIT_MSTR_EO ORG_SNAP_LE ON CAST(DRIVING_TABLE.LDBID AS VARCHAR(10)) = ORG_SNAP_LE.LDBID AND LN_SNAP.AR_ID_ITEM_ORG_UNIT             = ORG_SNAP_LE.OU_ID LEFT JOIN 11915_IP_AR 11915_IP_AR_D ON DRIVING_TABLE.IP_ID            = 11915_IP_AR_D.ec_ip_id AND DRIVING_TABLE.AR_ID_ITEM      = 11915_IP_AR_D.ar_id AND 11915_IP_AR_D.lst             = 1 AND 11915_IP_AR_D.PRFRD_COMM_METH = 'Direct Mail' LEFT JOIN 11915_IP_AR 11915_IP_AR_S ON DRIVING_TABLE.IP_ID            = 11915_IP_AR_S.ec_ip_id AND DRIVING_TABLE.AR_ID_ITEM      = 11915_IP_AR_S.ar_id AND 11915_IP_AR_S.lst             = 1 AND 11915_IP_AR_S.PRFRD_COMM_METH = 'Secure E-Message' LEFT JOIN (SELECT ec_ip_id, ar_id, PRFRD_PSTL_ADDR_TYP, PRFRD_PSTL_ADDR_SEQ_NBR, row_number() OVER (PARTITION BY ec_ip_id, ar_id ORDER BY full_date DESC, CAST(REPLACE(prf_strt_dte, '-', '') AS INT) DESC) lst FROM uat7400_racs11.TB_11926_IP_AR_RLTNP_PSTL_ADDR_PREF_EC WHERE CAST(REPLACE(prf_strt_dte, '-', '') AS INT)<= CAST('20250728' AS INT) AND actn_ind                                     <> 'Delete' ) 11926_IP_AR ON DRIVING_TABLE.IP_ID       = 11926_IP_AR.ec_ip_id AND DRIVING_TABLE.AR_ID_ITEM = 11926_IP_AR.ar_id AND 11926_IP_AR.lst          = 1 LEFT JOIN (SELECT ec_ip_id, PRFRD_PSTL_ADDR_TYP, PRFRD_PSTL_ADDR_SEQ_NBR, prf_strt_dte, full_date, actn_ind, row_number() OVER (PARTITION BY ec_ip_id ORDER BY full_date DESC, CAST(REPLACE(prf_strt_dte, '-', '') AS INT) DESC) lst FROM uat7400_racs11.TB_11430_IP_PREF_POC_EC WHERE CAST(REPLACE(prf_strt_dte, '-', '') AS INT)<= CAST('20250728' AS INT) AND actn_ind                                     <> 'Delete' ) 11430_IP ON DRIVING_TABLE.IP_ID = 11430_IP.ec_ip_id AND 11430_IP.lst       = 1 LEFT JOIN 11230_IP_POC ON 11230_IP_POC.ec_ip_id             = DRIVING_TABLE.IP_ID AND LOWER(11230_IP_POC.PSTL_ADDR_TYP)= LOWER(COALESCE(11915_IP_AR_D.ALT_PRFRD_PSTL_ADDR_TYP, 11926_IP_AR.PRFRD_PSTL_ADDR_TYP, 11430_IP.PRFRD_PSTL_ADDR_TYP, '')) AND 11230_IP_POC.ENT_POC_SEQ_NBR     = COALESCE(11915_IP_AR_D.ALT_PRFRD_PSTL_ADDR_SEQ_NBR, 11926_IP_AR.PRFRD_PSTL_ADDR_SEQ_NBR, 11430_IP.PRFRD_PSTL_ADDR_SEQ_NBR, '') AND 11230_IP_POC.lst_rec             = 1 LEFT JOIN (SELECT ec_ip_id, PAL6_DSTN_LNE1, PAL7_DSTN_LNE2, PAL8_DSTN_LNE3, LCT1_CITY, LCT2_ST, LCT3_PSTL_CDE, LCT6_CNTRY, PSTL_ADDR_FRMT_NME, mlng_cde, COUNT(ec_ip_id) OVER (PARTITION BY ec_ip_id) ec_ip_id_cnt FROM 11230_IP_POC WHERE lst_rec = 1 ) 11230_IP_POC_1 ON 11230_IP_POC_1.ec_ip_id      = DRIVING_TABLE.IP_ID AND 11230_IP_POC_1.ec_ip_id_cnt = 1 LEFT JOIN (SELECT ec_ip_id, ar_id, PRFRD_EMAIL_TYP, PRFRD_EMAIL_SEQ_NBR, row_number() OVER (PARTITION BY ec_ip_id, ar_id ORDER BY full_date DESC, CAST(REPLACE(prf_strt_dte, '-', '') AS INT) DESC) lst FROM uat7400_racs11.TB_11924_IP_AR_RLTNP_EMAIL_PREF_EC WHERE CAST(REPLACE(prf_strt_dte, '-', '') AS INT)<= CAST('20250728' AS INT) AND actn_ind                                     <> 'Delete' ) 11924_IP_AR_EML ON DRIVING_TABLE.IP_ID       = 11924_IP_AR_EML.ec_ip_id AND DRIVING_TABLE.AR_ID_ITEM = 11924_IP_AR_EML.ar_id AND 11924_IP_AR_EML.lst      = 1 LEFT JOIN (SELECT ec_ip_id, PRFRD_EMAIL_TYP, PRFRD_EMAIL_SEQ_NBR, row_number() OVER (PARTITION BY ec_ip_id ORDER BY full_date DESC, CAST(REPLACE(prf_strt_dte, '-', '') AS INT) DESC) lst FROM uat7400_racs11.TB_11430_IP_PREF_POC_EC WHERE CAST(REPLACE(prf_strt_dte, '-', '') AS INT)<= CAST('20250728' AS INT) AND actn_ind                                     <> 'Delete' AND (PRFRD_EMAIL_TYP                             IS NOT NULL AND PRFRD_EMAIL_TYP                              <> '') ) 11430_IP_PREF_EML ON DRIVING_TABLE.IP_ID    = 11430_IP_PREF_EML.ec_ip_id AND 11430_IP_PREF_EML.lst = 1 LEFT JOIN 11220_IP_POC_EMAIL ON 11220_IP_POC_EMAIL.ec_ip_id                                                               = DRIVING_TABLE.IP_ID AND COALESCE(11924_IP_AR_EML.PRFRD_EMAIL_TYP, 11430_IP_PREF_EML.PRFRD_EMAIL_TYP, '')         = 11220_IP_POC_EMAIL.EMAIL_TYP AND COALESCE(11924_IP_AR_EML.PRFRD_EMAIL_SEQ_NBR, 11430_IP_PREF_EML.PRFRD_EMAIL_SEQ_NBR, '') = 11220_IP_POC_EMAIL.ENT_POC_SEQ_NBR AND 11220_IP_POC_EMAIL.lst                                                                   = 1 LEFT JOIN (SELECT ec_ip_id, EMAIL_ADDR, COUNT(ec_ip_id) OVER(PARTITION BY ec_ip_id) ec_ip_id_cnt FROM 11220_IP_POC_EMAIL ) 11220_IP_POC_EMAIL_1 ON 11220_IP_POC_EMAIL_1.ec_ip_id      = DRIVING_TABLE.AR_ID_ITEM AND 11220_IP_POC_EMAIL_1.ec_ip_id_cnt = 1 LEFT JOIN 11916_IP_AR_EMAIL ON 11916_IP_AR_EMAIL.ec_ip_id = DRIVING_TABLE.IP_ID AND 11916_IP_AR_EMAIL.ar_id   = DRIVING_TABLE.AR_ID_ITEM LEFT JOIN 11916_IP_AR_TEXTMSG ON 11916_IP_AR_TEXTMSG.ec_ip_id = DRIVING_TABLE.IP_ID AND 11916_IP_AR_TEXTMSG.ar_id   = DRIVING_TABLE.AR_ID_ITEM
hive_20250728201810_82e1e5cd-db4f-496b-9709-8a2192c252e4
2025-07-28 20 18  Executing command(queryId=hive_20250728201810_82e1e5cd-db4f-496b-9709-8a2192c252e4)  WITH TOT_FEES_YTD AS ( SELECT ARID_ITEM, AABPTL_AMT FROM uat7400_racs11.TB_APD_AR_BAL_PERIOD_LN_RL WHERE BALTT_CODE = 'TotalFeeCollected' AND AABPTL_VALUE = 'Yearly' AND SUBSTRING('20250728', 1, 4) = SUBSTRING(AABPTL_END_DATE, 1, 4) ), TOT_INT_YTD AS ( SELECT ARID_ITEM, AABPTL_AMT FROM uat7400_racs11.TB_APD_AR_BAL_PERIOD_LN_RL WHERE BALTT_CODE = 'TotalInterestCollected' AND AABPTL_VALUE = 'Yearly' AND SUBSTRING('20250728', 1, 4) = SUBSTRING(AABPTL_END_DATE, 1, 4) ), TOT_FEES_PREV_YTD AS ( SELECT ARID_ITEM, AABPTL_AMT FROM uat7400_racs11.TB_APD_AR_BAL_PERIOD_LN_RL WHERE BALTT_CODE = 'TotalFeeCollected' AND AABPTL_VALUE = 'Yearly' AND (SUBSTRING('20250728', 1, 4) - 1) = SUBSTRING(AABPTL_END_DATE, 1, 4) ), TOT_INT_PREV_YTD AS ( SELECT ARID_ITEM, AABPTL_AMT FROM uat7400_racs11.TB_APD_AR_BAL_PERIOD_LN_RL WHERE BALTT_CODE = 'TotalInterestCollected' AND AABPTL_VALUE = 'Yearly' AND (SUBSTRING('20250728', 1, 4) - 1) = SUBSTRING(AABPTL_END_DATE, 1, 4) ) SELECT DISTINCT '791' AS `REC_TYP`, (driving_table.ar_id_item||'-'||driving_table.stlr_stmnt_type) AS FILTER_VAL, 1 AS `sort_order`, '791' AS `sort_order_1`, (DRIVING_TABLE.ar_id_item||'-'||DRIVING_TABLE.IP_ID) AS `accnt_nmbr`, DRIVING_TABLE.ADT_MSG_UUID AS `uuid`, '' AS `Over Limit Amount`, '' AS `Resolved Amount`, '' AS `VAT Total for Period`, '' AS `Capitalized Interest at Billing`, REPLACE(CAST(COALESCE(TOT_FEES_YTD.AABPTL_AMT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Total Fees Assessed YTD`, REPLACE(CAST(COALESCE(TOT_INT_YTD.AABPTL_AMT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Total Interest Earned YTD`, REPLACE(CAST(COALESCE(TOT_FEES_PREV_YTD.AABPTL_AMT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Total Fees Assessed Previous YTD`, REPLACE(CAST(COALESCE(TOT_INT_PREV_YTD.AABPTL_AMT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Total Interest Earned Previous YTD` FROM uat7400_racs11.RT_AR_STMNT_LN_RL DRIVING_TABLE LEFT JOIN TOT_FEES_YTD ON DRIVING_TABLE.AR_ID_ITEM = TOT_FEES_YTD.ARID_ITEM LEFT JOIN TOT_INT_YTD ON DRIVING_TABLE.AR_ID_ITEM = TOT_INT_YTD.ARID_ITEM LEFT JOIN TOT_FEES_PREV_YTD ON DRIVING_TABLE.AR_ID_ITEM = TOT_FEES_PREV_YTD.ARID_ITEM LEFT JOIN TOT_INT_PREV_YTD ON DRIVING_TABLE.AR_ID_ITEM = TOT_INT_PREV_YTD.ARID_ITEM WHERE DRIVING_TABLE.FULL_DATE = '20250728' AND DRIVING_TABLE.stlr_pstmtrty_stmnt_ind = 'Yes'
hive_20250728201942_cf5177ed-3cb4-4944-807a-379d72638458
2025-07-28 20 19  Executing command(queryId=hive_20250728201942_cf5177ed-3cb4-4944-807a-379d72638458)  WITH PREVIOUS_STATEMENT AS (SELECT ROW_NUMBER() OVER (PARTITION BY ar_id_item ORDER BY FULL_DATE DESC) AS prev_stmnt_num, ar_id_item, stlr_stmnt_type, STLR_CLSG_BAL, full_date FROM uat7400_racs11.RT_AR_STMNT_LN_RL DRIVING_TABLE WHERE FULL_DATE < '20250728' AND DRIVING_TABLE.stlr_pstmtrty_stmnt_ind = 'Yes' ) SELECT DISTINCT '790' AS `REC_TYP`, (driving_table.ar_id_item||'-'||driving_table.stlr_stmnt_type) AS FILTER_VAL, 1 AS `sort_order`, '790' AS `sort_order_1`, (DRIVING_TABLE.ar_id_item||'-'||DRIVING_TABLE.IP_ID) AS `accnt_nmbr`, DRIVING_TABLE.ADT_MSG_UUID AS `uuid`, DRIVING_TABLE.AR_ID_ITEM AS `Account Number`, REPLACE(CAST(COALESCE(PREVIOUS_DLY_BAL.OTSNDG_PRNCPL_BAL, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Beginning Principal Balance`, REPLACE(CAST(COALESCE(PREVIOUS_STATEMENT.STLR_CLSG_BAL, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Beginning Total Balance`, '' AS `Principal Credit Amount`, '' AS `Total Credit Amount`, '' AS `Principal Debit Amount`, '' AS `Total Debit Amount`, '' AS `Total Debit Amount + Accrued Interest`, REPLACE(CAST(COALESCE(DRIVING_TABLE.INTRST_DUE_AMT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Current Payment (Interest)`, REPLACE(CAST(COALESCE(DRIVING_TABLE.PRNCPL_BAL, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Ending Principal Balance`, REPLACE(CAST(COALESCE(DRIVING_TABLE.STLR_CLSG_BAL, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Ending Total Balances`, '' AS `Average Daily Principal Balance`, REPLACE(CAST(COALESCE(AR_MSTR.RACLR_ACCR_FACTOR, CAST(0 AS BIGINT)) AS NUMERIC(14, 10)), '.', '') AS `Daily Interest Rate Factor`, DRIVING_TABLE.STLR_STMNT_ISSUED_DATE AS `Billing/STATEMENT Generation Date`, REPLACE(CAST(COALESCE(DRIVING_TABLE.STLR_DAYIN_BILL_CYCLE, CAST(0 AS BIGINT)) AS NUMERIC(3)), '.', '') AS `Days IN Cycle/Period`, REPLACE(CAST(COALESCE(DRIVING_TABLE.PAST_DUE_AMT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Amount Past Due`, REPLACE(CAST(COALESCE(AR_MSTR.RACLR_APR, CAST(0 AS BIGINT)) AS NUMERIC(14, 10)), '.', '') AS `Annual Percentage Rate (APR)`, DRIVING_TABLE.STLR_STMNT_EFCTV_DATE AS `Beginning DATE OF Billing Period`, REPLACE(CAST(COALESCE(DRIVING_TABLE.PAST_DUE_AMT + DRIVING_TABLE.TOT_CRRNT_DUE_AMT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Total Payment Due`, REPLACE(CAST(COALESCE(AR_MSTR.ARUSLR_MLTRY_APR, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Military Annual Percentage Rate`, AR_MSTR.RPSLR_NEXT_DUE_DATE AS `Payment Due DATE Billed`, REPLACE(CAST(COALESCE(DRIVING_TABLE.PRNPL_DUE_AMT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Current Payment (Principal)`, '' AS `Current Payment (Principal/Interest)`, REPLACE(CAST(COALESCE(DRIVING_TABLE.LATE_CHRG_DUE_AMT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Total Late Charges Due`, REPLACE(CAST(COALESCE(DLY_BAL.MISC_FEE_RCVBL, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Total Miscellaneous Charges/Loan Fees Due`, '' AS `Date AFTER Which Late Charges are Assessed`, REPLACE(CAST(COALESCE(DLY_BAL.INTRST_ACCRD_BAL, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Interest Accrued During Cycle/Period`, REPLACE(CAST(COALESCE(PREVIOUS_DLY_BAL.PDUE_INTRST_AMT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Total Interest Due`, REPLACE(CAST(COALESCE(PREVIOUS_DLY_BAL.PDUE_PRNCPL_AMT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Total Principal Due`, '' AS `Average Daily Balance FOR Interest Accruals`, DRIVING_TABLE.STLR_STMNT_TYPE AS `Statement Type`, DRIVING_TABLE.STLR_STMNT_EFCTV_DATE AS `Statement START Date`, DRIVING_TABLE.STLR_STMNT_END_DATE AS `Statement END Date`, REPLACE(CAST(COALESCE(PREVIOUS_DLY_BAL.DISB_PRNCPL_BAL, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Total Disbursements/Advances`, REPLACE(CAST(COALESCE(DRIVING_TABLE.TOT_PYMNT_MDE, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Total Payments`, REPLACE(CAST(COALESCE(DRIVING_TABLE.CRRNT_PYOFF_PNLTY, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Current Payoff Penalty/Fee`, REPLACE(CAST(COALESCE(DRIVING_TABLE.TOT_INS_CLCTD, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Insurance Collected This Period`, REPLACE(CAST(COALESCE(DRIVING_TABLE.INS_DUE_AMT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Insurance Due`, CASE WHEN UPPER(DRIVING_TABLE.STLR_PSTMTRTY_STMNT_IND) = 'YES' THEN '1' ELSE '0' END AS `Post Maturity Statement Indicator`, REPLACE(CAST(COALESCE(DLY_BAL.TOTAL_FEE_CLCTD, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Fees Collected This Period`, REPLACE(CAST(COALESCE(DRIVING_TABLE.TOT_LTCHG_CLCTD, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Late Charge Collected This Period`, REPLACE(CAST(COALESCE(DRIVING_TABLE.PRNCPL_BAL, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `New Principal Balance`, DRIVING_TABLE.PRNCPL_BAL_ASOFDT_DATE AS `New Principal Balance Date`, REPLACE(CAST(COALESCE(DRIVING_TABLE.TOT_CRRNT_DUE_AMT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Total Current Due` FROM uat7400_racs11.RT_AR_STMNT_LN_RL DRIVING_TABLE LEFT JOIN uat7400_racs11.RT_AR_DLY_BAL_LN_RL DLY_BAL ON DRIVING_TABLE.AR_ID_ITEM = DLY_BAL.AR_ID_ITEM AND DLY_BAL.FULL_DATE = '20250728' LEFT JOIN uat7400_racs11.RT_AR_DLY_BAL_LN_RL PREVIOUS_DLY_BAL ON DRIVING_TABLE.AR_ID_ITEM = PREVIOUS_DLY_BAL.AR_ID_ITEM AND PREVIOUS_DLY_BAL.FULL_DATE_TXT = date_sub(DRIVING_TABLE.STLR_STMNT_EFCTV_DATE, 1) LEFT JOIN uat7400_racs11.RT_APD_AR_MSTR_LN_RL AR_MSTR ON DRIVING_TABLE.AR_ID_ITEM = AR_MSTR.AR_ID_ITEM LEFT JOIN PREVIOUS_STATEMENT ON DRIVING_TABLE.AR_ID_ITEM = PREVIOUS_STATEMENT.AR_ID_ITEM AND PREVIOUS_STATEMENT.prev_stmnt_num = 1 WHERE DRIVING_TABLE.FULL_DATE = '20250728' AND DRIVING_TABLE.stlr_pstmtrty_stmnt_ind = 'Yes'
hive_20250728202218_9dbce946-25e2-4317-b023-cb7aa99d447d
2025-07-28 20 22  Executing command(queryId=hive_20250728202218_9dbce946-25e2-4317-b023-cb7aa99d447d)  WITH DRIVING_TABLE AS (SELECT * FROM uat7400_racs11.RT_AR_STMNT_LN_RL WHERE full_date = '20250728' AND stlr_pstmtrty_stmnt_ind = 'Yes' ) SELECT DISTINCT '711' AS rec_typ, (driving_table.ar_id_item||'-'||driving_table.stlr_stmnt_type) AS FILTER_VAL, (DRIVING_TABLE.ar_id_item||'-'||DRIVING_TABLE.IP_ID) AS `accnt_nmbr`, driving_table.AR_ID_ITEM `Account Number`, DRIVING_TABLE.ADT_MSG_UUID AS `uuid`, 1 AS `sort_order`, '711' AS `sort_order_1`, trans_hist_ln.TRANS_IDFR `Transaction Sequence Number`, REPLACE(CAST(COALESCE(trans_hist_ln.PSTG_AMT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') `Transaction Amount`, CASE WHEN trans_hist_ln.psstd_code IN ('ACHPrincipalPayment', 'CashPrincipalPayment', 'CheckPrincipalPayment', 'PrincipalPayment') THEN REPLACE(CAST(COALESCE(trans_hist_ln.PSTG_AMT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') END AS `Principal Amount`, CASE WHEN trans_hist_ln.psstd_code IN ('ACHInterestPayment', 'CashInterestPayment', 'CheckInterestPayment', 'InterestPayment') THEN REPLACE(CAST(COALESCE(trans_hist_ln.PSTG_AMT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') END AS `Interest Amount`, CASE WHEN trans_hist_ln.psstd_code IN ('ACHLateChargePayment', 'CashLateChargePayment', 'CheckLateChargePayment', 'LateChargeFeePayment', 'LatePaymentPenaltyFeeWaive', 'ManualLatePaymentFeeWaive') THEN REPLACE(CAST(COALESCE(trans_hist_ln.PSTG_AMT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') END AS `Penalty / Late Charge Amount`, '' `Undisbursed Principal`, CASE WHEN trans_hist_ln.psstd_code IN ('ACHMiscellaneousFeePayment', 'CashMiscellaneousFeePayment', 'CheckMiscellaneousFeePayment', 'ManualMiscFeeWaive', 'MiscellaneousFeeAssessed', 'MiscellaneousFeePayment', 'MiscellaneousFeeWaive') THEN REPLACE(CAST(COALESCE(trans_hist_ln.PSTG_AMT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') END AS `Miscellaneous Charge`, '' `Escrow Suspense`, REPLACE(CAST(COALESCE(trans_hist_ln.CRRNT_INTRST_DUE, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') `Uncollected Interest`, '' `Unapplied Funds`, REPLACE(CAST(COALESCE(trans_hist_ln.CHOFF_PRNCPL, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') `Principal Charge-OFF Amount`, CASE WHEN trans_hist_ln.psstd_code IN ('ChargeOff', 'PartialChargeOff') THEN REPLACE(CAST(COALESCE(trans_hist_ln.PSTG_AMT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') END AS `Charged-OFF Recovered`, REPLACE(CAST(COALESCE(trans_hist_ln.OTSNDG_PRNCPL_BAL, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') `Running Principal Balance`, trans_hist_ln.PSTG_BKNG_DATE `System Processing Date`, trans_hist_ln.PSTG_EFCTV_DATE `Effective Date`, trans_hist_ln.PT_VALUE `Debit/Credit Indicator`, trans_hist_ln.PSTG_TXT `Transaction Description`, trans_hist_ln.REVRSL_CODE `Reversal Reason Code`, trans_hist_ln.REVRSL_DESC `Reversal Reason Description` FROM uat7400_racs11.RT_TRANS_HIST_LN_RL trans_hist_ln INNER JOIN driving_table ON driving_table.ar_id_item = trans_hist_ln.ar_id_item AND from_unixtime(unix_timestamp(trans_hist_ln.full_date_txt, 'yyyy-MM-dd'),'yyyy-MM-dd') >= from_unixtime(unix_timestamp(driving_table.stlr_stmnt_efctv_date, 'yyyy-MM-dd'),'yyyy-MM-dd') AND from_unixtime(unix_timestamp(trans_hist_ln.full_date_txt, 'yyyy-MM-dd'),'yyyy-MM-dd') <= from_unixtime(unix_timestamp(driving_table.stlr_stmnt_end_date, 'yyyy-MM-dd'),'yyyy-MM-dd')
hive_20250728202256_d855591c-1789-44f7-b3ed-2e1b4cbc7e44
2025-07-28 20 22  Executing command(queryId=hive_20250728202256_d855591c-1789-44f7-b3ed-2e1b4cbc7e44)  WITH AR_BAL AS (SELECT AR_ID_ITEM, STBLR_AMT FROM uat7400_racs11.TB_AR_BAL_LN_RL WHERE BALTT_CODE = 'TotalProjectedInterestToDueDate' AND FULL_DATE = '20250728' ), Min_PMT_AMT AS (SELECT AR_ID_ITEM, STBLR_AMT FROM uat7400_racs11.TB_AR_BAL_LN_RL WHERE BALTT_CODE = 'minPmtDue' AND FULL_DATE = '20250728' ), Avail_BAL AS (SELECT AR_ID_ITEM, STBLR_AMT FROM uat7400_racs11.TB_AR_BAL_LN_RL WHERE BALTT_CODE in ('AvailableBalance', 'AvailableCredit') AND FULL_DATE = '20250728' ) SELECT DISTINCT '402' AS `REC_TYP`, (driving_table.ar_id_item||'-'||driving_table.stlr_stmnt_type) AS FILTER_VAL, 1 AS `sort_order`, '402' AS `sort_order_1`, (DRIVING_TABLE.ar_id_item||'-'||DRIVING_TABLE.IP_ID) AS `accnt_nmbr`, DRIVING_TABLE.ADT_MSG_UUID AS `uuid`, REPLACE(CAST(COALESCE(RATE_CHNG.RACLR_ACCR_FACTOR, CAST(0 AS BIGINT)) AS NUMERIC(14, 10)), '.', '') AS `Interest - Daily Factor`, REPLACE(CAST(COALESCE(Min_PMT_AMT.STBLR_AMT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Minimum Payment Amount`, '' AS `Percentage of Minimum Payment`, REPLACE(CAST(COALESCE(AR_MSTR.ARBLR_CNTRCT_AMT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Disclosure - Total Note`, '' AS `Fixed Late Charge Amount`, REPLACE(CAST(COALESCE(Avail_BAL.STBLR_AMT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Available Balance`, '' AS `Cash Advance Limit`, '' AS `Cash Advance Available`, '' AS `Total Disputed Amount`, REPLACE(CAST(COALESCE(DLY_BAL.TOTAL_PDUE_AMT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Delinquent Amount`, AR_BKRPCY.BKRPCY_STATUS AS `Bankruptcy Status`, REPLACE(CAST(COALESCE(AR_MSTR.CREDIT_LIMIT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Current Credit Limit`, ADDTL_DTL.GracePeriodEndDate AS `Grace Time`, REPLACE(CAST(COALESCE(DLY_BAL.INTRST_ACCRD_BAL, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Interest Charged on Credit Line`, REPLACE(CAST(COALESCE(AR_BAL.STBLR_AMT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Total Projected Interest to Due Date`, IF(DLY_BAL.otsndg_prncpl_bal < 0, 'Y', IF(DLY_BAL.misc_adjmnt > 0, 'Y', 'N')) AS `Credit Balance Ind`, '' AS `LOC Term-Out Indicator`, '' AS `LOC Term-Out Reason`, '' AS `Total Interest Charge Paid`, '' AS `Tax Year`, '' AS `Account Interest Rate as of` FROM uat7400_racs11.RT_AR_STMNT_LN_RL DRIVING_TABLE LEFT JOIN uat7400_racs11.RT_AR_DLY_BAL_LN_RL DLY_BAL ON DRIVING_TABLE.AR_ID_ITEM = DLY_BAL.AR_ID_ITEM AND DLY_BAL.FULL_DATE = '20250728' LEFT JOIN uat7400_racs11.RT_APD_AR_MSTR_LN_RL AR_MSTR ON DRIVING_TABLE.AR_ID_ITEM = AR_MSTR.AR_ID_ITEM LEFT JOIN uat7400_racs11.RT_AR_US_BKRPCY_LN_RL AR_BKRPCY ON DRIVING_TABLE.AR_ID_ITEM = AR_BKRPCY.AR_ID_ITEM LEFT JOIN uat7400_racs11.RT_RATE_CHNG_LN_RL RATE_CHNG ON DRIVING_TABLE.AR_ID_ITEM = RATE_CHNG.AR_ID_ITEM AND RATE_CHNG.FULL_DATE = '20250728' LEFT JOIN AR_BAL ON DRIVING_TABLE.AR_ID_ITEM = AR_BAL.AR_ID_ITEM LEFT JOIN Min_PMT_AMT ON DRIVING_TABLE.AR_ID_ITEM = Min_PMT_AMT.AR_ID_ITEM LEFT JOIN Avail_BAL ON DRIVING_TABLE.AR_ID_ITEM = Avail_BAL.AR_ID_ITEM LEFT JOIN uat7400_racs11.VW_LN_RL_STMNT_ADDTL_DTL ADDTL_DTL ON DRIVING_TABLE.ADT_MSG_UUID = ADDTL_DTL.ADT_MSG_UUID WHERE DRIVING_TABLE.FULL_DATE = '20250728' AND DRIVING_TABLE.stlr_pstmtrty_stmnt_ind = 'Yes'
hive_20250728202324_38b34592-720d-42c6-a54e-4b837605168e
2025-07-28 20 23  Executing command(queryId=hive_20250728202324_38b34592-720d-42c6-a54e-4b837605168e)  WITH BAL_PERIOD AS (SELECT arid_item, baltt_code, AABPTL_AMT, full_date FROM uat7400_racs11.TB_APD_AR_BAL_PERIOD_LN_RL WHERE baltt_code = 'TotalInterestCollected' AND aabptl_value = 'Yearly' AND full_date = '20250728' ), PREVIOUS_STATEMENT AS (SELECT ROW_NUMBER() OVER (PARTITION BY ar_id_item ORDER BY FULL_DATE DESC) AS prev_stmnt_num, ar_id_item, stlr_stmnt_type, STLR_NEXT_AUTO_DR_DATE, full_date FROM uat7400_racs11.RT_AR_STMNT_LN_RL DRIVING_TABLE WHERE FULL_DATE < '20250728' AND DRIVING_TABLE.stlr_pstmtrty_stmnt_ind = 'Yes' ), PREVIOUS_YEAR AS (SELECT arid_item, baltt_code, AABPTL_AMT, full_date FROM uat7400_racs11.TB_APD_AR_BAL_PERIOD_LN_RL WHERE baltt_code = 'TotalInterestCollected' AND aabptl_value = 'Yearly' AND full_date = CONCAT(Cast(SUBSTRING('20250728', 1, 4) - 1 AS INT), '1231')) SELECT DISTINCT '401' AS rec_typ, (driving_table.ar_id_item||'-'||driving_table.stlr_stmnt_type) AS FILTER_VAL, (DRIVING_TABLE.ar_id_item||'-'||DRIVING_TABLE.IP_ID) AS `accnt_nmbr`, DRIVING_TABLE.ADT_MSG_UUID AS `uuid`, 1 AS `sort_order`, '401' AS `sort_order_1`, REPLACE(CAST(COALESCE(DLY_BALANCE.PDUE_INTRST_AMT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Prior Period Interest Uncollected/Due`, REPLACE(CAST(COALESCE(DRIVING_TABLE.intrst_due_amt, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Current Period Interest Due`, REPLACE(CAST(COALESCE((DLY_BALANCE.PDUE_INTRST_AMT +BILL_HIST.ARGBLR_INTRST_AMT_OWED), CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Total Interest Due`, REPLACE(CAST(COALESCE(DLY_BALANCE.PDUE_PRNCPL_AMT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Prior Periods Principal Uncollected/Due`, REPLACE(CAST(COALESCE(DRIVING_TABLE.PRNPL_DUE_AMT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Current Period Principal Due`, REPLACE(CAST(COALESCE(DLY_BALANCE.OTSNDG_PRNCPL_BAL, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Total Principal Due`, REPLACE(CAST(COALESCE(DRIVING_TABLE.LATE_CHRG_DUE_AMT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Late Charges Due`, REPLACE(CAST(COALESCE(DRIVING_TABLE.TOT_FEE_ASSD, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Miscellaneous Charges/Loan Fees Due`, REPLACE(CAST(COALESCE(BILL_HIST.ARGBLR_BNP_AMT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Total Billed - NOT Due`, REPLACE(CAST(COALESCE(DLY_BALANCE.INTRST_ACCRD_BAL, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Accrued Interest`, '' AS `Last Scheduled Payment Date`, DRIVING_TABLE.STLR_NEXT_AUTO_DR_DATE AS `Next Scheduled Payment Date`, MASTER_TABLE.RPSLR_GRC_TIME_FOR_PYMNT AS `Payment Grace Period`, REPLACE(CAST(COALESCE(MASTER_TABLE.ARBLR_CNTRCT_AMT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Disclosure - Amount Financed`, REPLACE(CAST(COALESCE(MASTER_TABLE.RACLR_APR, CAST(0 AS BIGINT)) AS NUMERIC(14, 10)), '.', '') AS `Disclosure - Annual Percentage Rate`, REPLACE(CAST(COALESCE(DRIVING_TABLE.TOT_FEE_ASSD, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Disclosure - Total Finance Charge`, '' AS `Original NUMBER OF Payments`, REPLACE(CAST(COALESCE(MASTER_TABLE.RPSLR_SCHDL_AMT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Principal AND Interest Payment`, REPLACE(CAST(COALESCE(BILL_HIST.ARGBLR_PRNCPL_OWED_AMT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Fixed Principal Amount`, REPLACE(CAST(COALESCE(BILL_HIST.ARGBLR_BILL_AMT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Current Payment Amount`, '' AS `Estimated Balloon Balance`, REPLACE(CAST(COALESCE(MASTER_TABLE.RACLR_ACCR_FACTOR, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Payoff - Daily Interest Amount`, REPLACE(CAST(COALESCE(DRIVING_TABLE.PYOFF_BAL, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Payoff - Net Payoff Amount`, RATE_CHARGE.RACHLR_MARGIN_RFRNC_CODE AS `Interest Index`, REPLACE(CAST(COALESCE(RATE_CHARGE.RACHLR_MARGIN_RAW_RATE, CAST(0 AS BIGINT)) AS NUMERIC(14, 10)), '.', '') AS `Interest Spread`, MASTER_TABLE.RACLR_PRMY_FRQNCY_INTVL_TYPE AS `Interest Change Frequency`, '' AS `Next Interest Change Date`, REPLACE(CAST(COALESCE(BAL_PERIOD.AABPTL_AMT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Interest Paid YEAR-TO-Date`, REPLACE(CAST(COALESCE(PREVIOUS_YEAR.AABPTL_AMT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') AS `Interest Paid Prior Year`, '' AS `Date OF FIRST Payment`, DRIVING_TABLE.AR_ID_ITEM AS `Account Number`, '' AS `Signature Card Indicator`, '' AS `Online Signature Card Completed Indicator`, '' AS `Paper Signature Card Returned`, DRIVING_TABLE.STLR_NEXT_AUTO_DR_DATE AS `Next Auto Debit Date`, PREVIOUS_STATEMENT.STLR_NEXT_AUTO_DR_DATE AS `Last Auto Debit Date`, DRIVING_TABLE.STLR_STMNT_ISSUED_DATE AS `Payoff Good Through Date`, '' AS `Early Payoff Penalty/Fee`, '' AS `Last Payment DATE`, '' AS `Last Payment Amount`, '' AS `Balloon Amount`, '' AS `Next Repayment Mod Date`, '' AS `Repayment Mod Reason`, MASTER_TABLE.ip_idfr_rltnp_mgr_prmry AS `Relationship Manager Name` FROM uat7400_racs11.RT_AR_STMNT_LN_RL DRIVING_TABLE LEFT JOIN uat7400_racs11.RT_APD_AR_MSTR_LN_RL MASTER_TABLE ON MASTER_TABLE.AR_ID_ITEM = DRIVING_TABLE.AR_ID_ITEM LEFT JOIN uat7400_racs11.RT_AR_DLY_BAL_LN_RL DLY_BALANCE ON DLY_BALANCE.AR_ID_ITEM =DRIVING_TABLE.AR_ID_ITEM AND DLY_BALANCE.FULL_DATE = '20250728' LEFT JOIN uat7400_racs11.RT_AR_GEN_BILL_HIST_LN_RL BILL_HIST ON BILL_HIST.AR_ID_ITEM=DRIVING_TABLE.AR_ID_ITEM LEFT JOIN BAL_PERIOD ON BAL_PERIOD.ARID_ITEM=DRIVING_TABLE.AR_ID_ITEM LEFT JOIN uat7400_racs11.TB_RATE_CHARGE_LN_RL RATE_CHARGE ON RATE_CHARGE.AR_ID_ITEM =DRIVING_TABLE.AR_ID_ITEM LEFT JOIN PREVIOUS_STATEMENT ON DRIVING_TABLE.AR_ID_ITEM = PREVIOUS_STATEMENT.AR_ID_ITEM AND PREVIOUS_STATEMENT.prev_stmnt_num = 1 LEFT JOIN PREVIOUS_YEAR ON DRIVING_TABLE.AR_ID_ITEM = PREVIOUS_YEAR.ARID_ITEM WHERE DRIVING_TABLE.FULL_DATE = '20250728' AND DRIVING_TABLE.stlr_pstmtrty_stmnt_ind = 'Yes'
hive_20250728202414_67cfb867-be20-4d84-b333-6dc67a55020c
2025-07-28 20 24  Executing command(queryId=hive_20250728202414_67cfb867-be20-4d84-b333-6dc67a55020c)  WITH PREV_RPYMNT_SCHDL AS (SELECT ROW_NUMBER() OVER (PARTITION BY ar_id_item ORDER BY FULL_DATE DESC) AS prev_rpymnt_num, ar_id_item, RPSLR_CRRNT_LN_TERM_VAL, full_date FROM uat7400_racs11.RT_RPYMNT_SCHDL_LN_RL RPYMNT_SCHDL WHERE FULL_DATE <= '20250728' ) SELECT DISTINCT '400' AS rec_typ, (driving_table.ar_id_item||'-'||driving_table.stlr_stmnt_type) AS FILTER_VAL, (DRIVING_TABLE.ar_id_item||'-'||DRIVING_TABLE.IP_ID) AS `accnt_nmbr`, DRIVING_TABLE.ADT_MSG_UUID AS `uuid`, 1 AS `sort_order`, '400' AS `sort_order_1`, tb_ip_id_mstr.NME_LNE `Coborrower Name`, master_table.AR_ID_ITEM `Account Number`, IF(locate('|', regexp_replace(master_table.APAT_VALUE_TITLE1, '\n', '\\|'))> 0, IF(LENGTH(split(regexp_replace(master_table.APAT_VALUE_TITLE1, '\n', '\\|'), '\\|') [0])> 60, SUBSTR(split(regexp_replace(master_table.APAT_VALUE_TITLE1, '\n', '\\|'), '\\|') [0], 1, 60), split(regexp_replace(master_table.APAT_VALUE_TITLE1, '\n', '\\|'), '\\|') [0]), SUBSTR(master_table.APAT_VALUE_TITLE1, 1, 60)) `Account Title - Line 1`, IF(locate('|', regexp_replace(master_table.APAT_VALUE_TITLE1, '\n', '\\|'))> 0, IF(LENGTH(split(regexp_replace(master_table.APAT_VALUE_TITLE1, '\n', '\\|'), '\\|') [1])> 60, SUBSTR(split(regexp_replace(master_table.APAT_VALUE_TITLE1, '\n', '\\|'), '\\|') [1], 1, 60), split(regexp_replace(master_table.APAT_VALUE_TITLE1, '\n', '\\|'), '\\|') [1]), SUBSTR(master_table.APAT_VALUE_TITLE1, 61, 60)) `Account Title - Line 2`, IF(locate('|', regexp_replace(master_table.APAT_VALUE_TITLE1, '\n', '\\|'))> 0, IF(LENGTH(split(regexp_replace(master_table.APAT_VALUE_TITLE1, '\n', '\\|'), '\\|') [2])> 60, SUBSTR(split(regexp_replace(master_table.APAT_VALUE_TITLE1, '\n', '\\|'), '\\|') [2], 1, 60), split(regexp_replace(master_table.APAT_VALUE_TITLE1, '\n', '\\|'), '\\|') [2]), SUBSTR(master_table.APAT_VALUE_TITLE1, 121, 60)) `Account Title - Line 3`, IF(locate('|', regexp_replace(master_table.APAT_VALUE_TITLE1, '\n', '\\|'))> 0, IF(LENGTH(split(regexp_replace(master_table.APAT_VALUE_TITLE1, '\n', '\\|'), '\\|') [3])> 60, SUBSTR(split(regexp_replace(master_table.APAT_VALUE_TITLE1, '\n', '\\|'), '\\|') [3], 1, 60), split(regexp_replace(master_table.APAT_VALUE_TITLE1, '\n', '\\|'), '\\|') [3]), SUBSTR(master_table.APAT_VALUE_TITLE1, 181, 60)) `Account Title - Line 4`, master_table.PDGR_VALUE `Product Group`, master_table.APD_CODE `Product Code`, master_table.APD_NAME `Product Code Description`, master_table.APA_NAME_MIX `Account Nickname`, master_table.APA_FRST_EFCTV_DATE `Opening Date`, master_table.RPSLR_LTST_MTRTY_DATE `Current Maturity Date`, master_table.TERM_VALUE `Account Term`, REPLACE(CAST(COALESCE(master_table.CREDIT_LIMIT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') `Current Credit Limit`, REPLACE(CAST(COALESCE(dly_bal.OTSNDG_PRNCPL_BAL, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') `Outstanding Principal Balance`, '' `Unadvanced Balance`, REPLACE(CAST(COALESCE(master_table.RACHLR_APLCBL_RATE, CAST(0 AS BIGINT)) AS NUMERIC(14, 10)), '.', '') `Interest Rate`, master_table.RPSLR_NEXT_DUE_DATE `Next Payment Due Date`, REPLACE(CAST(COALESCE(dly_bal.TOTAL_PDUE_AMT, CAST(0 AS BIGINT)) AS NUMERIC(26, 4)), '.', '') `Grand Total Due`, bil_hist.ARGBLR_NEXT_BILL_DATE `Next Bill Date`, bil_hist.ARGBLR_BILL_GEN_DATE `Previous Bill Date`, master_table.CRNCY_ISO4217_VAL `Currency Code`, '' `Mailing Option`, dly_bal.NMBR_OF_DAYS_DLQNY `Days Delinquent`, '' `Next Payment Due Amount`, master_table.RPSLR_OLD_MTRTY_DATE `Previous Maturity Date`, '' `New Maturity Date`, PREV_RPYMNT_SCHDL.RPSLR_CRRNT_LN_TERM_VAL `Previous Term Number of Pmts` FROM uat7400_racs11.RT_AR_STMNT_LN_RL DRIVING_TABLE LEFT JOIN uat7400_racs11.RT_APD_AR_MSTR_LN_RL master_table ON DRIVING_TABLE.ar_id_item = master_table.ar_id_item LEFT JOIN uat7400_racs11.RT_AR_GEN_BILL_HIST_LN_RL bil_hist ON DRIVING_TABLE.ar_id_item = bil_hist.ar_id_item LEFT JOIN uat7400_racs11.RT_AR_DLY_BAL_LN_RL dly_bal ON DRIVING_TABLE.ar_id_item = dly_bal.ar_id_item AND dly_bal.FULL_DATE = '20250728'  LEFT JOIN uat7400_racs11.TB_AR_IP_RLTNP_LN_RL RLTNP ON RLTNP.ar_id_item = DRIVING_TABLE.ar_id_item AND RLTNP.arirt_code = 'Borrower' AND RLTNP.arir_is_prmry = 'SECONDARY' LEFT JOIN uat7400_racs11.TB_CUST_MSTR_IP tb_ip_id_mstr ON RLTNP.ip_id_item = tb_ip_id_mstr.EC_IP_ID LEFT JOIN PREV_RPYMNT_SCHDL ON DRIVING_TABLE.AR_ID_ITEM           = PREV_RPYMNT_SCHDL.AR_ID_ITEM AND PREV_RPYMNT_SCHDL.prev_rpymnt_num = 1 WHERE DRIVING_TABLE.FULL_DATE = '20250728' AND DRIVING_TABLE.stlr_pstmtrty_stmnt_ind = 'Yes'
hive_20250728202518_58d91584-b90a-47a7-95a2-0cf996a0e8be
2025-07-28 20 25  Executing command(queryId=hive_20250728202518_58d91584-b90a-47a7-95a2-0cf996a0e8be)  WITH REC_11410 AS (SELECT COMM_PREF_TYP_VAL, COMM_PREF_STAT, EC_IP_ID, ROW_NUMBER() OVER ( PARTITION BY EC_IP_ID ORDER BY FULL_DATE DESC ) RNK FROM uat7400_racs11.TB_11410_IP_CMMCN_PREF_TYP_EC WHERE FULL_DATE <= '20250728' AND actn_ind    <> 'Delete' ) SELECT DISTINCT '201'                       AS `REC_TYP`, (driving_table.ar_id_item||'-'||driving_table.stlr_stmnt_type) AS FILTER_VAL, (DRIVING_TABLE.ar_id_item||'-'||DRIVING_TABLE.IP_ID) AS `accnt_nmbr`, DRIVING_TABLE.ADT_MSG_UUID AS `uuid`, 1                                       AS `sort_order`, '201'                                         AS `sort_order_1`, IP_ID.EC_IP_ID                            AS `Customer Number`, IP_ID.NME_PRFX                            AS `Name Prefix`, IP_ID.FRST_NME                            AS `Customer FIRST Name`, IP_ID.MID_NME                             AS `Customer Middle Name`, IP_ID.LST_NME                             AS `Last Name`, IP_ID.NME_SFX                             AS `Suffix`, IP_ID.TAX_ID                              AS `Tax ID`, date_format(IP_ID.BRTH_DTE, 'yyyy-MM-dd') AS `Date OF Birth`, IP_ID.HOME_PHNBR                          AS `Home Phone`, IP_ID.business_phnbr                      AS `Business Phone`, IP_ID.PRMRY_EMAIL_ADDR                    AS `Electronic Mail`, ip_id.gndr                                AS `Sex`, IP_ID.FAX_PHNBR                           AS `Customer Fax Number`, ''                                        AS `Secret Word`, CASE WHEN IP_ID.ISS_ID_TYP_VAL = 'Driver\'s License' THEN IP_ID.ISS_ID_VAL ELSE '' END AS `Driver License Number`, CASE WHEN IP_ID.ISS_ID_TYP_VAL = 'Driver\'s License' THEN IP_ID.ID_ISS_BY ELSE '' END AS `Driver License State`, CASE WHEN IP_ID.ISS_ID_TYP_VAL = 'Driver\'s License' THEN IP_ID.ID_EXP_DTE ELSE '' END                                                                                            AS `Driver License Expiration Date`, CAST( CAST( IF( DATEDIFF( concat(SUBSTR('20250728', 0, 4),'-',SUBSTR('20250728', 5, 2),'-', SUBSTR('20250728', 7, 2)), CONCAT( SUBSTR('20250728', 0, 4), SUBSTR(IP_ID.BRTH_DTE, 5, 7) ) )>= 0, ( SUBSTR('20250728', 0, 4) - SUBSTR(IP_ID.BRTH_DTE, 0, 4) ), ( SUBSTR('20250728', 0, 4) - SUBSTR(IP_ID.BRTH_DTE, 0, 4)-1 ) ) AS INT ) AS string ) AS `Age AS OF System Date`, IP_ID.IP_ROLE_STRT_DTE_PRIMARY                                                                 AS `Date Account Opened`, ''                                                                                             AS `Mail Flag`, IP_ID.VIP_TYP_VAL                                                                              AS `Customer Code`, IP_ID.NME_LNE                                                                                  AS `Customer Name`, CASE WHEN REC_11410.COMM_PREF_TYP_VAL = 'Privacy Notice' AND REC_11410.COMM_PREF_STAT     = 'Opt In' THEN '1' ELSE '0' END AS `Annual Privacy Notice`, CASE WHEN IP_ID.DOC_DLVRY_PREF = 'Electronic' THEN '00' WHEN IP_ID.DOC_DLVRY_PREF = 'Paper and Electronic' THEN '01' WHEN IP_ID.DOC_DLVRY_PREF = 'Paper' THEN '02' ELSE '' END AS `Electronic STATEMENT Indicator`, CASE WHEN REC_11410.COMM_PREF_TYP_VAL = 'ADA Large Print' AND REC_11410.COMM_PREF_STAT     = 'Opt In' THEN '1' ELSE '0' END AS `ADA Preference Indicator`, EC_11900.RLT_CDE AS `Relationship Code` FROM uat7400_racs11. RT_AR_STMNT_LN_RL DRIVING_TABLE  INNER JOIN uat7400_racs11.TB_11900_IP_AR_RLTNP_EC EC_11900 ON  DRIVING_TABLE.AR_ID_ITEM         = EC_11900.AR_ID AND EC_11900.FULL_DATE              <= '20250728' AND EC_11900.IP_RLT_TYP              = 'Secondary' AND EC_11900.actn_ind               <> 'Delete'  LEFT JOIN uat7400_racs11.TB_CUST_MSTR_IP IP_ID ON EC_11900.EC_IP_ID = IP_ID.EC_IP_ID  LEFT JOIN REC_11410 ON REC_11410.EC_IP_ID         = IP_ID.EC_IP_ID AND REC_11410.RNK             = 1  WHERE DRIVING_TABLE.FULL_DATE = '20250728' AND DRIVING_TABLE.stlr_pstmtrty_stmnt_ind = 'Yes'
hive_20250728202656_17c32d33-e04a-4276-a912-e56f07c9c455
2025-07-28 20 27  Executing command(queryId=hive_20250728202656_17c32d33-e04a-4276-a912-e56f07c9c455)  WITH REC_11410 AS (SELECT COMM_PREF_TYP_VAL, COMM_PREF_STAT, EC_IP_ID, ROW_NUMBER() OVER ( PARTITION BY EC_IP_ID ORDER BY FULL_DATE DESC ) RNK FROM uat7400_racs11.TB_11410_IP_CMMCN_PREF_TYP_EC WHERE FULL_DATE <= '20250728' AND actn_ind    <> 'Delete' ) SELECT DISTINCT '200'                       AS `REC_TYP`, (driving_table.ar_id_item||'-'||driving_table.stlr_stmnt_type) AS FILTER_VAL, (DRIVING_TABLE.ar_id_item||'-'||DRIVING_TABLE.IP_ID) AS `accnt_nmbr`, DRIVING_TABLE.ADT_MSG_UUID AS `uuid`, 1                                       AS `sort_order`, '200'                                         AS `sort_order_1`, IP_ID.EC_IP_ID                            AS `Customer Number`, IP_ID.NME_PRFX                            AS `Name Prefix`, IP_ID.FRST_NME                            AS `Customer FIRST Name`, IP_ID.MID_NME                             AS `Customer Middle Name`, IP_ID.LST_NME                             AS `Last Name`, IP_ID.NME_SFX                             AS `Suffix`, IP_ID.TAX_ID                              AS `Tax ID`, date_format(IP_ID.BRTH_DTE, 'yyyy-MM-dd') AS `Date OF Birth`, IP_ID.HOME_PHNBR                          AS `Home Phone`, IP_ID.business_phnbr                      AS `Business Phone`, IP_ID.PRMRY_EMAIL_ADDR                    AS `Electronic Mail`, ip_id.gndr                                AS `Sex`, IP_ID.FAX_PHNBR                           AS `Customer Fax Number`, ''                                        AS `Secret Word`, CASE WHEN IP_ID.ISS_ID_TYP_VAL = 'Driver\'s License' THEN IP_ID.ISS_ID_VAL ELSE '' END AS `Driver License Number`, CASE WHEN IP_ID.ISS_ID_TYP_VAL = 'Driver\'s License' THEN IP_ID.ID_ISS_BY ELSE '' END AS `Driver License State`, CASE WHEN IP_ID.ISS_ID_TYP_VAL = 'Driver\'s License' THEN IP_ID.ID_EXP_DTE ELSE '' END                                                                                            AS `Driver License Expiration Date`, CAST( CAST( IF( DATEDIFF( concat(SUBSTR('20250728', 0, 4),'-',SUBSTR('20250728', 5, 2),'-', SUBSTR('20250728', 7, 2)), CONCAT( SUBSTR('20250728', 0, 4), SUBSTR(IP_ID.BRTH_DTE, 5, 7) ) )>= 0, ( SUBSTR('20250728', 0, 4) - SUBSTR(IP_ID.BRTH_DTE, 0, 4) ), ( SUBSTR('20250728', 0, 4) - SUBSTR(IP_ID.BRTH_DTE, 0, 4)-1 ) ) AS INT ) AS string ) AS `Age AS OF System Date`, IP_ID.IP_ROLE_STRT_DTE_PRIMARY                                                                 AS `Date Account Opened`, ''                                                                                             AS `Mail Flag`, IP_ID.VIP_TYP_VAL                                                                              AS `Customer Code`, IP_ID.NME_LNE                                                                                  AS `Customer Name`, CASE WHEN REC_11410.COMM_PREF_TYP_VAL = 'Privacy Notice' AND REC_11410.COMM_PREF_STAT     = 'Opt In' THEN '1' ELSE '0' END AS `Annual Privacy Notice`, CASE WHEN IP_ID.DOC_DLVRY_PREF = 'Electronic' THEN '00' WHEN IP_ID.DOC_DLVRY_PREF = 'Paper and Electronic' THEN '01' WHEN IP_ID.DOC_DLVRY_PREF = 'Paper' THEN '02' ELSE '' END AS `Electronic STATEMENT Indicator`, CASE WHEN REC_11410.COMM_PREF_TYP_VAL = 'ADA Large Print' AND REC_11410.COMM_PREF_STAT     = 'Opt In' THEN '1' ELSE '0' END AS `ADA Preference Indicator`, EC_11900.RLT_CDE AS `Relationship Code` FROM uat7400_racs11. RT_AR_STMNT_LN_RL DRIVING_TABLE  INNER JOIN uat7400_racs11.TB_11900_IP_AR_RLTNP_EC EC_11900 ON DRIVING_TABLE.AR_ID_ITEM         = EC_11900.AR_ID AND EC_11900.FULL_DATE              <= '20250728' AND EC_11900.IP_RLT_TYP              = 'Primary' AND EC_11900.actn_ind               <> 'Delete'  LEFT JOIN uat7400_racs11.TB_CUST_MSTR_IP IP_ID ON EC_11900.EC_IP_ID = IP_ID.EC_IP_ID  LEFT JOIN REC_11410 ON REC_11410.EC_IP_ID         = IP_ID.EC_IP_ID AND REC_11410.RNK             = 1 WHERE DRIVING_TABLE.FULL_DATE = '20250728' AND DRIVING_TABLE.stlr_pstmtrty_stmnt_ind = 'Yes'
hive_20250728202834_09981c2f-9c02-48c7-97ab-1af28de23037
2025-07-28 20 28  Executing command(queryId=hive_20250728202834_09981c2f-9c02-48c7-97ab-1af28de23037)  WITH b AS (SELECT ou_id, concat( CASE WHEN end_wkday != '' THEN concat(strt_wkday, ' to ', end_wkday) ELSE strt_wkday END, ' - ', wk_tme ) AS hours_of_oper FROM (SELECT ou_id, CASE WHEN locate(',', wk_daY) = 0 THEN wk_daY ELSE substring( wk_daY, 0, locate(',', wk_daY)-1 ) END                                                                          AS strt_wkday, reverse( substring( reverse(wk_daY), 0, locate( ',', reverse(wk_daY) )-1 ) ) AS end_wkday, wk_tme FROM (SELECT ou_id, Concat_ws( ',', Collect_list(wk_daY) ) AS wk_daY, concat(strt_tme, ' to ', end_tme)      AS wk_tme FROM uat7400_racs11.tb_03110_hrs_of_oprn_wkday_eo GROUP BY ou_id, concat(strt_tme, ' to ', end_tme) ) a ) cd ORDER BY hours_of_oper ), ORG AS (SELECT Ldbid, ou_id, ou_nme, CITY_NME, ST_CDE, soc_media_acc_id, tele_nbr, bus_phone_nmbr, hrs_of_oprn, email_addr, split(addresscols, '-') [0] tag, split(addresscols, '-') [1] value FROM (SELECT Ldbid, ou_id, ou_nme, CITY_NME, ST_CDE, soc_media_acc_id, tele_nbr, bus_phone_nmbr, hrs_of_oprn, email_addr, ADDR_ADDTL_INFO FROM uat7400_racs11.TB_ORG_UNIT_MSTR_EO WHERE ou_typ IN ('Financial Entity') ) t lateral VIEW explode( split(ADDR_ADDTL_INFO, ',') ) branchaddr AS addresscols ) SELECT DISTINCT '100'            AS rec_typ, (driving_table.ar_id_item||'-'||driving_table.stlr_stmnt_type)                    AS FILTER_VAL, (DRIVING_TABLE.ar_id_item||'-'||DRIVING_TABLE.IP_ID) AS `accnt_nmbr`, DRIVING_TABLE.ADT_MSG_UUID AS `uuid`, 1                            AS `sort_order`, '100'                              AS `sort_order_1`, driving_table.ar_id_item       AS `account number`, org_snap.ou_id                 AS `company code`, org_snap.ou_nme                AS `company name`, org_snap.`Address Line`        AS `Address Line 1`, org_snap.`Address Line (2)`    AS `Address Line 2`, org_snap.`city`                AS `city`, org_snap.`state`               AS `state`, org_snap.`company postal code` AS `postal code`, org_snap.soc_media_acc_id      AS `web site address`, org_snap.tele_nbr              AS `phone NUMBER 1`, tb_01600.tele_nbr        AS `phone NUMBER 2`, ''                             AS `contact`, org_snap.email_addr            AS `email address`, tb_03110.hours_of_operation       AS `hours OF operation` FROM uat7400_racs11. RT_AR_STMNT_LN_RL driving_table LEFT OUTER JOIN (SELECT Ldbid, ou_id, ou_nme, CITY_NME, ST_CDE, soc_media_acc_id, tele_nbr, bus_phone_nmbr, hrs_of_oprn, email_addr, MAX( IF( tag        = 'StreetName', COALESCE(value, ''), '' ) ) || MAX( IF( ( ( tag = 'StreetName' AND value            <> '' AND value            IS NOT NULL ) OR ( tag              = 'BuildingId' AND value            <> '' AND value            IS NOT NULL ) ), ',', '' ) ) || MAX( IF( tag     = 'BuildingId', COALESCE(value, ''), '' ) ) AS `Address Line`, MAX( IF( tag        = 'BoxNumber', COALESCE(value, ''), '' ) )  AS `Address Line (2)`, MAX( IF( tag        = 'Postcode', COALESCE(value, ''), '' ) )   AS `company postal code`, MAX( IF( tag        = 'City', COALESCE(value, ''), '' ) )   AS `city`, MAX( IF( tag        = 'State', COALESCE(value, ''), '' ) )   AS `state` FROM ORG GROUP BY Ldbid, ou_id, ou_nme, CITY_NME, ST_CDE, soc_media_acc_id, tele_nbr, bus_phone_nmbr, hrs_of_oprn, email_addr ) org_snap ON CAST( driving_table.ldbid AS VARCHAR(10) ) = org_snap.LDBID LEFT OUTER JOIN (SELECT ou_id, concat_ws( ',', sort_array( collect_list(hours_of_oper) ) ) AS hours_of_operation FROM b GROUP BY ou_id ) tb_03110 ON org_snap.ou_id = tb_03110.ou_id LEFT OUTER JOIN (SELECT row_number() OVER ( partition BY ou_id, prcs_date ORDER BY prcs_date DESC ) rw_id, ou_id, tele_nbr FROM uat7400_racs11.tb_01600_ph_eo WHERE ph_typ = 'Business' ) tb_01600 ON org_snap.ou_id = tb_01600.ou_id AND rw_id         = 1 WHERE driving_table.FULL_DATE                 = '20250728' AND DRIVING_TABLE.stlr_pstmtrty_stmnt_ind = 'Yes'
hive_20250728202957_cc83bdbd-ad83-4daa-b998-783936381aa3
2025-07-28 20 29  Executing command(queryId=hive_20250728202957_cc83bdbd-ad83-4daa-b998-783936381aa3)  WITH rec AS (SELECT COUNT(1) AS cnt, FILLTER_VARI, FORM_ID, LDBID FROM ( SELECT DISTINCT CASE WHEN ( drivng_table.STLR_STMNT_TYPE IS NOT NULL ) THEN '100' END                    AS FILLTER_VARI, drivng_table.STLR_STMNT_TYPE AS FORM_ID, drivng_table.LDBID, CAST( drivng_table.ip_id AS string ), CAST( drivng_table.AR_ID_ITEM AS string ) FROM uat7400_racs11.RT_AR_STMNT_LN_RL drivng_table WHERE drivng_table.full_date = '20250728' ) a GROUP BY FILLTER_VARI, FORM_ID, LDBID ) SELECT DISTINCT '995' AS REC_TYP, 'ZZZZZZZ'           AS `accnt_nmbr`, 'ZZZZZZZ' AS `uuid`, rec.FORM_ID  || CAST(rec.FILLTER_VARI AS INT)                   AS `sort_order`, '995' AS `sort_order_1`, 'ZZZZZZ-ZZZZZZZ'                 AS FILTER_VAL, ou_id                            AS `Company code`, rec.FORM_ID                      AS `Form / Letter Type`, rec.FILLTER_VARI                 AS `Variation OF the Form/Letter`, rec.cnt                          AS `Total NUMBER OF Records` , CURRENT_DATE                     AS `Statement Run-date` FROM uat7400_racs11.TB_ORG_UNIT_MSTR_EO LEFT JOIN rec WHERE ou_typ         IN ('Financial Entity') AND rec.FILLTER_VARI IS NOT NULL
application_1752432472682_71409 HIVE-821f9b21-a833-4ea2-be21-ce6f9bfd5825 1280GB 160vCores
hive_20250729001747_1ad481fb-7791-428a-99d2-cab7fcc2b646
2025-07-29 00 17  Executing command(queryId=hive_20250729001747_1ad481fb-7791-428a-99d2-cab7fcc2b646)  LOAD DATA INPATH '/tmp/2025_07_29/svcras1600admin/application_1752432472682_71379/aaf71344-cc08-4a3e-b016-4e70175d5dd1' INTO TABLE uat1600_racp11.RT_AR_DLY_BAL_DP_RD
application_1752432472682_72505 HIVE-013cef75-7264-4047-b814-156f6eea540c 1280GB 160vCores
hive_20250729024522_dc644bf6-fec1-4298-bbfa-b2be7ed8b898
2025-07-29 02 45  Executing command(queryId=hive_20250729024522_dc644bf6-fec1-4298-bbfa-b2be7ed8b898)  with BTCH_DTE AS ( select tb_pm_batch_rfrnc_inl.ldbid, from_unixTime( unix_timestamp( tb_pm_batch_rfrnc_inl.crrnt_batch_date, 'yyyy-MM-dd' ), 'yyyyMMdd' ) as dt, ADD_MONTHS( Trunc( from_unixTime( unix_timestamp( tb_pm_batch_rfrnc_inl.crrnt_batch_date, 'yyyy-MM-dd' ), 'yyyy-MM-dd' ), 'YY' ), -12 ) as Tm, Trunc( from_unixTime( unix_timestamp( tb_pm_batch_rfrnc_inl.crrnt_batch_date, 'yyyy-MM-dd' ), 'yyyyMMdd' ), 'YY' )as CYFMD, DATE_ADD( Trunc( from_unixTime( unix_timestamp( tb_pm_batch_rfrnc_inl.crrnt_batch_date, 'yyyy-MM-dd' ), 'yyyy-MM-dd' ), 'YY' ), -1 ) as Td, tb_pm_batch_rfrnc_inl.crrnt_batch_date AS DT1 from uat5201_raca21.TB_PM_BATCH_RFRNC_INL ), BAL_PERIOD AS ( SELECT t.ar_id_item, t.aabpdp_batch_date, t.ldbid, t.aabpdp_amt, t.aabps_efctv_date, t.aabps_end_date, t.aabpdp_batch_ts, t.baltt_idfr, t.baltt_code, t.abpt_value, t.aabpdp_aggr_amt, t.aabpdp_aggr_days from ( SELECT balp.ar_id_item, balp.aabpdp_batch_date, balp.ldbid, balp.aabpdp_amt, balp.aabps_efctv_date, balp.aabps_end_date, balp.aabpdp_batch_ts, balp.baltt_idfr, balp.baltt_code, balp.abpt_value, balp.aabpdp_aggr_amt, balp.aabpdp_aggr_days, ROW_NUMBER() OVER( Partition by balp.ar_id_item ORDER BY balp.ar_id_item, balp.aabpdp_batch_ts DESC ) AS Rownumber FROM uat5201_raca21.TB_APD_AR_BAL_PERIOD_DP_RD BALP INNER JOIN BTCH_DTE ON btch_dte.ldbid = balp.ldbid WHERE UPPER(balp.baltt_code) = 'LEDGERBALANCE' AND UPPER(balp.abpt_value) IN ('YEARLY') AND balp.full_date <= btch_dte.dt AND balp.aabps_efctv_date >= btch_dte.tm AND balp.aabps_end_date <= btch_dte.td ) T where t.rownumber = 1 ) SELECT concat( 100, unix_timestamp( current_timestamp(), 'HH
application_1752432472682_71771 HIVE-c8cb6555-9a91-4692-a4da-d863e9e58742 1320GB 165vCores
hive_20250729004743_3df7689c-a375-48c1-80ab-819ea7b849dc
2025-07-29 00 47  Executing command(queryId=hive_20250729004743_3df7689c-a375-48c1-80ab-819ea7b849dc)  CREATE TEMPORARY TABLE BOR044_Temp1 AS 				SELECT ACCT_NBR,PROD_TYP,ACCT_TTL,ACCRD_INT,LDGR_BAL,OD_BAL,RUNNG_LDGR_BAL,INT_RTE,LST_TRAN,ORG_DTE,HLD_AMT,AVAIL_BAL,INT_INDX,CRNCY,FULL_DATE,APALT_VALUE,ACCT_CLOSE_DTE 				from ( 				SELECT 				MSTR_DP.AR_ID_ITEM 			AS ACCT_NBR, 				MSTR_DP.APD_CODE 			AS PROD_TYP, 				MSTR_DP.APAT_VALUE_TITLE1 	AS ACCT_TTL, 				BAL_DP.INTRST_ACCRD_BAL 	AS ACCRD_INT, 				BAL_DP.LDGR_BAL				AS  LDGR_BAL, 				BAL_DP.OD_BAL				AS  OD_BAL, 				BAL_DP.RUNNG_BAL 			AS  RUNNG_LDGR_BAL, 				NVL(MSTR_DP.APAID_CRRNT_INTRST_RATE,'0.0000000000') AS INT_RTE, 				NVL((from_unixtime(unix_timestamp(cast(HIST.FULL_DATE_TXT as date)), 'MM-dd-yyyy')),' ') AS LST_TRAN, 				NVL((from_unixtime(unix_timestamp(cast(MSTR_DP.APA_FRST_EFCTV_DT as date)), 'MM-dd-yyyy')),' ') AS ORG_DTE, 				BAL_DP.HLD_BAL AS HLD_AMT, 				BAL_DP.AVAIL_BAL AS AVAIL_BAL, 				MSTR_DP.APAID_INDEX_NAME AS INT_INDX, 				MSTR_DP.CRNCY_ISO4217_VAL_BCS AS CRNCY, 				MSTR_DP.FULL_DATE	as	FULL_DATE, 				MSTR_DP.APALT_VALUE, 				NVL(MSTR_DP.APADP_CLOSE_DATE,' ') AS ACCT_CLOSE_DTE 				FROM uat5300_racf12.RT_APD_AR_MSTR_DP_RD   AS MSTR_DP 					LEFT JOIN (SELECT LDGR_BAL,INTRST_ACCRD_BAL,OD_BAL,RUNNG_BAL,HLD_BAL,AVAIL_BAL,ldbid,ar_id_item,FULL_DATE from  uat5300_racf12.RT_AR_DLY_BAL_DP_RD where FULL_DATE in (select max(full_date) from uat5300_racf12.TB_PM_BATCH_RFRNC_INL)) AS BAL_DP 								ON MSTR_DP.AR_ID_ITEM = BAL_DP.AR_ID_ITEM AND MSTR_DP.LDBID = BAL_DP.LDBID and MSTR_DP.FULL_DATE = BAL_DP.FULL_DATE 					LEFT JOIN  (select max(FULL_DATE_TXT)  as FULL_DATE_TXT, AR_ID_ITEM from uat5300_racf12.RT_TRANS_HIST_DP_RD GROUP BY AR_ID_ITEM) HIST  ON  HIST.AR_ID_ITEM = MSTR_DP.AR_ID_ITEM 				WHERE MSTR_DP.FULL_DATE in (SELECT MAX(MSTR_DP1.FULL_DATE) FROM uat5300_racf12.RT_APD_AR_MSTR_DP_RD MSTR_DP1 where MSTR_DP.AR_ID_ITEM = MSTR_DP1.AR_ID_ITEM) 				AND ('5300'='99999998' OR NVL(MSTR_DP.LDBID,'') IN (SELECT EXPLODE(SPLIT('5300',',')))) 				AND ('99999998'='99999998' OR NVL(MSTR_DP.APD_CODE,'') IN (SELECT EXPLODE(SPLIT('99999998',',')))) 				AND ('99999998'='99999998' OR NVL(MSTR_DP.CRNCY_ISO4217_VAL_BCS,'') IN (SELECT EXPLODE(SPLIT('99999998',',')))) 				AND MSTR_DP.ENART_VALUE IN ('Savings', 'MMDA') 				) A GROUP BY ACCT_NBR,PROD_TYP,ACCT_TTL,ACCRD_INT,LDGR_BAL,OD_BAL,RUNNG_LDGR_BAL,INT_RTE,LST_TRAN,ORG_DTE,HLD_AMT,AVAIL_BAL,INT_INDX,CRNCY,FULL_DATE,APALT_VALUE,ACCT_CLOSE_DTE
hive_20250729004846_45baea93-63bc-463a-866c-3771a67592b3
2025-07-29 00 48  Executing command(queryId=hive_20250729004846_45baea93-63bc-463a-866c-3771a67592b3)  CREATE TEMPORARY TABLE BOR044_Temp2 AS 							with BOR044_BAL_PER_Temp1 as 								(SELECT AR_ID_ITEM,BALTT_CODE,AABPDP_BATCH_TS AS AABPDP_BATCH_TS,ABPT_VALUE,aabps_end_date,AABPDP_AMT 								FROM uat5300_racf12.TB_APD_AR_BAL_PERIOD_DP_RD where full_date between '20240101' and '20241231' 								),							BOR044_BAL_PER_Temp2 as 								( select  max(AABPDP_BATCH_TS) AABPDP_BATCH_TS,AR_ID_ITEM,BALTT_CODE from BOR044_BAL_PER_Temp1 								WHERE  NVL(AABPS_END_DATE,'') BETWEEN '2024-01-01' and '2024-12-31' AND BALTT_CODE in('InterestPaidBalance','EarlyWithdrawalPenaltyCharged','FATCATaxPaid','FederalTaxPaid') 								AND ABPT_VALUE = 'Yearly' group by AR_ID_ITEM,BALTT_CODE 								),							BOR044_BAL_PER_Temp3 AS 								(select BOR044_BAL_PER_Temp1.AR_ID_ITEM, 									CASE WHEN BOR044_BAL_PER_Temp1.BALTT_CODE = 'InterestPaidBalance' AND ABPT_VALUE = 'Yearly' THEN NVL(AABPDP_AMT,0) END AS INT_YTD, 									CASE WHEN BOR044_BAL_PER_Temp1.BALTT_CODE = 'EarlyWithdrawalPenaltyCharged' AND ABPT_VALUE = 'Yearly' THEN NVL(AABPDP_AMT,0) END AS PNLTY_YTD, 									CASE WHEN BOR044_BAL_PER_Temp1.BALTT_CODE = 'FATCATaxPaid' AND ABPT_VALUE = 'Yearly' THEN NVL(AABPDP_AMT,0) END AS BWY, 									CASE WHEN BOR044_BAL_PER_Temp1.BALTT_CODE = 'FederalTaxPaid' AND ABPT_VALUE = 'Yearly' THEN NVL(AABPDP_AMT,0) END AS BWY1, 									BOR044_BAL_PER_Temp1.AABPDP_BATCH_TS 								from BOR044_BAL_PER_Temp1 								inner join BOR044_BAL_PER_Temp2 on BOR044_BAL_PER_Temp1.ar_id_item = BOR044_BAL_PER_Temp2.ar_id_item and BOR044_BAL_PER_Temp1.AABPDP_BATCH_TS = BOR044_BAL_PER_Temp2.AABPDP_BATCH_TS 								) 								SELECT AR_ID_ITEM, 									COALESCE(collect_list(INT_YTD))[0] AS INT_YTD, 									COALESCE(collect_list(PNLTY_YTD))[0] AS PNLTY_YTD, 									COALESCE(collect_list(BWY))[0]  AS BWY, 									COALESCE(collect_list(BWY1))[0] AS BWY1 								from BOR044_BAL_PER_Temp3 GROUP By AR_ID_ITEM
hive_20250729005002_8cb1be64-e2a1-4178-b22a-e36ec3e6695a
2025-07-29 00 50  Executing command(queryId=hive_20250729005002_8cb1be64-e2a1-4178-b22a-e36ec3e6695a)  CREATE TEMPORARY TABLE BOR044_Temp3 AS 				SELECT T1.ACCT_NBR,T1.PROD_TYP,T1.ACCT_TTL,T1.ACCRD_INT,T1.LDGR_BAL,T1.OD_BAL,T1.RUNNG_LDGR_BAL,T1.INT_RTE,T1.LST_TRAN,T1.ORG_DTE,T1.HLD_AMT,T1.AVAIL_BAL,T1.INT_INDX,T1.CRNCY,T1.FULL_DATE,T1.APALT_VALUE,T1.ACCT_CLOSE_DTE,T2.INT_YTD as INT_YTD,nvl(T2.BWY,'0') AS BWYTD,nvl(T2.BWY1,'0') AS BWYTD1 				FROM BOR044_Temp1 T1 				LEFT JOIN BOR044_Temp2 T2 ON T1.ACCT_NBR=T2.AR_ID_ITEM where UPPER(T1.APALT_VALUE)='ACTIVE' 				UNION SELECT T3.ACCT_NBR,T3.PROD_TYP,T3.ACCT_TTL,T3.ACCRD_INT,T3.LDGR_BAL,T3.OD_BAL,T3.RUNNG_LDGR_BAL,T3.INT_RTE,T3.LST_TRAN,T3.ORG_DTE,T3.HLD_AMT,T3.AVAIL_BAL,T3.INT_INDX,T3.CRNCY,T3.FULL_DATE,T3.APALT_VALUE,T3.ACCT_CLOSE_DTE,T4.INT_YTD as INT_YTD,nvl(T4.BWY,'0') AS BWYTD,nvl(T4.BWY1,'0') AS BWYTD1 				from BOR044_Temp1 T3 INNER JOIN BOR044_Temp2 T4 ON T3.ACCT_NBR=T4.AR_ID_ITEM and ( nvl(T4.BWY1,'0.0000') > '0.0000' OR nvl(T4.BWY,'0.0000') >'0.0000' OR nvl(T4.INT_YTD,'0.0000') > '0.0000') 				where Upper(T3.APALT_VALUE) <> 'ACTIVE' and (T3.ACCT_CLOSE_DTE between '2024-01-01'  and '2024-12-31') 					
hive_20250729005010_c9353e29-76f8-49f6-ad64-5f85623332ba
2025-07-29 00 50  Executing command(queryId=hive_20250729005010_c9353e29-76f8-49f6-ad64-5f85623332ba)  SELECT 						ACCT_NBR, 						PROD_TYP, 						ACCT_TTL, 						NVL(CAST(format_number(ACCRD_INT,4) as string),'0.00') 	AS ACCRD_INT, 						CRNCY, 						NVL(CAST(format_number(LDGR_BAL,4) as string),'0.00') 		AS LDGR_BAL, 						NVL(CAST(format_number(OD_BAL,4) as string),'0.00') 		AS OD_BAL, 						NVL(CAST(format_number(RUNNG_LDGR_BAL,4) as string),'0.00') AS RUNNG_LDGR_BAL, 						INT_RTE, 						NVL(CAST(format_number(INT_YTD,4) as string),'0.00') 		AS INT_YTD, 						LST_TRAN, 						ORG_DTE, 						NVL(CAST(format_number(HLD_AMT,4) as string),'0.00')			AS HLD_AMT, 						NVL(CAST(format_number(AVAIL_BAL,4) as string),'0.00')			AS AVAIL_BAL, 						NVL(CAST(format_number((BWYTD+BWYTD1),4) as string),'0.00')  AS BWYTD, 						INT_INDX, 						CEIL((ROW_NUMBER() OVER (ORDER BY PROD_TYP,ACCT_NBR)) / '10') pagenbr 					FROM BOR044_Temp3 					ORDER BY PROD_TYP,ACCT_NBR
application_1752432472682_72634 HIVE-7681a44a-7c6a-4e2a-8368-bc33f2020333 1328GB 166vCores
hive_20250729032136_80077935-b956-444a-a469-0f018ec9edef
2025-07-29 03 21  Executing command(queryId=hive_20250729032136_80077935-b956-444a-a469-0f018ec9edef)  CREATE TEMPORARY TABLE ULR015_Temp1 as 							select 							RT_APD.AR_ID_ITEM AS LN_NBR, 							RT_APD.APADL_VALUE AS PROC_STAT, 							RATE_CHRG.RACLR_ACCR_TYPE  AS INTRST, 							RT_AR.OTSNDG_PRNCPL_BAL AS PRIN_BAL, 							RT_AR.LTCHG_RCVBL	AS LT_CHRG_DUE, 							RT_AR.TOTAL_PDUE_AMT	AS AMT_PDUE, 							CAST(NVL((from_unixtime(unix_timestamp(cast(TRANS_DATA.ARTAL_LAST_PYMNT_DATE as date)), 'MM-dd-yyyy')),'') AS STRING)  AS LST_PMT_DTE, 							CAST(NVL((from_unixtime(unix_timestamp(cast(RT_APD.RPSLR_NEXT_DUE_DATE as date)), 'MM-dd-yyyy')),'') AS STRING) AS NXT_DUE_DTE, 							case when RT_APD.EC_EMPL_IND ='Y' then 'XXXXXXXX' else RT_APD.IP_ID_PRMRY END	AS CUST_NBR, 							case when RT_APD.EC_EMPL_IND ='Y' then 'XXXXXXXX' else IP.NME_LNE END	AS SHRT_NME, 							RT_APD.ENART_VALUE	        AS PROC_TYP, 							RT_AR.TOTAL_INTRST_RCVBL	AS INT_BAL, 							RT_AR.TOTAL_FEE_RCVBL	AS FEE_DUE, 							RT_APD.RPSLR_SCHDL_AMT AS NXT_DUE_AMT, 							CAST(NVL((from_unixtime(unix_timestamp(cast(RT_AR.PAST_DUE_DATE as date)), 'MM-dd-yyyy')),'') AS STRING)	AS OLD_DUE, 							CAST(NVL((from_unixtime(unix_timestamp(cast(RT_APD.RPSLR_LTST_MTRTY_DATE as date)), 'MM-dd-yyyy')),'') AS STRING)	AS CUR_MAT, 							DLR_DTL.AR_ID_ITEM_DRSV	AS DLR_NBR, 							DLR_DTL.AADDL_DLR_RECORS_LBLTY	AS REC, 							RT_APD.IP_IDFR_RLTNP_MGR_PRMRY	AS REL_MANAGER_RPT, 							''	AS REL_MANAGER_COL, 							CASE WHEN RT_APD.ARBLR_CLLTRL_CODE  is null then 'Unsecured Loan' ELSE RT_APD.ARBLR_CLLTRL_CODE END  AS COLL_CDE, 							RT_APD.ARBLR_CNTRCT_AMT	AS ORIGINAL_LN_AMT, 							''	AS POFF_AMT, 							RT_AR.NMBR_OF_DAYS_DLQNY	AS DAY_LT, 							TB_APD.AACPTL_CNTR 	AS NBR_OF_PMT, 							RT_APD.CRNCY_ISO4217_VAL, 							DLR_DTL.AADDL_DRSV_AMT AS RESRV_BAL, 							DLR_DTL.AADDL_DLR_EARN_METHOD AS DLR_EARN_METHOD, 							0.00 AS RETENTION_AMT, 							RT_APD.AR_ID_ITEM_ORG_UNIT	AS BRNCH, 							RT_APD.LDBID	AS BNK_ID, 							RT_APD.APD_CODE	AS PRD_CDE, 							RT_APD.APD_NAME	AS PRD_NME 							FROM uat7400_racs13.RT_APD_AR_MSTR_LN_RL RT_APD INNER JOIN 							(SELECT RT_AR1.* from uat7400_racs13.RT_AR_DLY_BAL_LN_RL AS RT_AR1 							JOIN (SELECT AR_ID_ITEM, MAX(Full_Date) AS Full_Date FROM uat7400_racs13.RT_AR_DLY_BAL_LN_RL WHERE FULL_DATE between '20250701' AND '20250731' group by AR_ID_ITEM) AS RT_AR2 							ON RT_AR1.Full_Date = RT_AR2.Full_Date and RT_AR1.AR_ID_ITEM = RT_AR2.AR_ID_ITEM 							WHERE RT_AR1.FULL_DATE between '20250701' AND '20250731' AND NVL(RT_AR1.NMBR_OF_DAYS_DLQNY,0) > 0 )  AS RT_AR 							ON RT_AR.AR_ID_ITEM = RT_APD.AR_ID_ITEM AND RT_AR.LDBID = RT_APD.LDBID 							LEFT JOIN 							(SELECT TRANS_DATA1.*, ROW_NUMBER() OVER (PARTITION BY TRANS_DATA1.AR_ID_ITEM ORDER BY TRANS_DATA1.full_date DESC ) AS ROWNUMBER from uat7400_racs13.TB_APD_AR_TRANS_DATA_TDL_LN_RL AS TRANS_DATA1)							  AS TRANS_DATA 							ON TRANS_DATA.AR_ID_ITEM = RT_APD.AR_ID_ITEM AND TRANS_DATA.LDBID = RT_APD.LDBID and TRANS_DATA.ROWNUMBER=1 							LEFT JOIN 							(SELECT TB_APD1.AACPTL_CNTR,TB_APD1.arid_item,TB_APD1.CNTRT_CODE,TB_APD1.CNPT_VALUE,TB_APD1.Full_Date,TB_APD1.LDBID,ROW_NUMBER() OVER (PARTITION BY TB_APD1.arid_item ORDER BY TB_APD1.full_date DESC ) AS ROWNUMBER from uat7400_racs13.TB_APD_AR_CNTR_PERIOD_LN_RL AS TB_APD1 where TB_APD1.CNTRT_CODE in ('NoOfPaymentsReceived') AND TB_APD1.CNPT_VALUE = 'LifeToDate') AS TB_APD 							ON TB_APD.arid_item = RT_APD.AR_ID_ITEM AND CAST(TB_APD.LDBID AS STRING) = RT_APD.LDBID AND TB_APD.ROWNUMBER = 1 							LEFT JOIN (SELECT RATE_CHRG1.RACLR_ACCR_TYPE,RATE_CHRG1.AR_ID_ITEM,RATE_CHRG1.BKNG_TS, RATE_CHRG1.FULL_DATE,RATE_CHRG1.LDBID,RATE_CHRG1.RACLR_CHARGE_TYPE_CODE,ROW_NUMBER() OVER (PARTITION BY RATE_CHRG1.AR_ID_ITEM ORDER BY RATE_CHRG1.BKNG_TS DESC ) AS ROWNUMBER  from uat7400_racs13.TB_RATE_CHARGE_LN_RL AS RATE_CHRG1 							)  AS RATE_CHRG ON RATE_CHRG.AR_ID_ITEM = RT_APD.AR_ID_ITEM AND RATE_CHRG.LDBID = RT_APD.LDBID and RATE_CHRG.RACLR_CHARGE_TYPE_CODE = 'DebitInterest' and RATE_CHRG.ROWNUMBER=1 							LEFT JOIN uat7400_racs13.TB_CUST_MSTR_IP IP ON IP.EC_IP_ID = RT_APD.IP_ID_PRMRY 							LEFT JOIN (SELECT IP1.NME_LNE,DLR_DTL1.AR_ID_ITEM_DRSV,DLR_DTL1.AADDL_DLR_RECORS_LBLTY,DLR_DTL1.AADDL_DRSV_AMT,DLR_DTL1.AADDL_DLR_EARN_METHOD, DLR_DTL1.AR_ID_ITEM,DLR_DTL1.LDBID,DLR_DTL1.IP_ID_ITEM_DLR, ROW_NUMBER() OVER (PARTITION BY DLR_DTL1.AR_ID_ITEM ORDER BY DLR_DTL1.ADT_OPER_TS DESC ) AS ROWNUMBER  from uat7400_racs13.RT_APD_AR_DLR_DTL_LN_RL AS DLR_DTL1 LEFT JOIN uat7400_racs13.TB_CUST_MSTR_IP IP1 ON IP1.EC_IP_ID=DLR_DTL1.IP_ID_ITEM_DLR )  AS DLR_DTL 							ON DLR_DTL.AR_ID_ITEM=RT_APD.AR_ID_ITEM AND DLR_DTL.LDBID=RT_APD.LDBID and DLR_DTL.ROWNUMBER=1 							WHERE RT_APD.APALT_VALUE = 'ACTIVE' and RT_APD.APADL_VALUE in ('Normal', 'PartialChargeOff', 'ChargeOff')
hive_20250729032232_95eb6d83-f1df-4eee-9987-a61b8e1cf96a
2025-07-29 03 22  Executing command(queryId=hive_20250729032232_95eb6d83-f1df-4eee-9987-a61b8e1cf96a)  CREATE TEMPORARY TABLE ULR015_Temp2 as 								select 								LN_NBR, 								PROC_STAT, 								PRIN_BAL, 								LT_CHRG_DUE, 								AMT_PDUE, 								LST_PMT_DTE, 								NXT_DUE_DTE, 								CUST_NBR, 								SHRT_NME, 								PROC_TYP, 								INT_BAL, 								FEE_DUE, 								NXT_DUE_AMT, 								OLD_DUE, 								CUR_MAT, 								DLR_NBR, 								REC, 								REL_MANAGER_RPT, 								REL_MANAGER_COL, 								COLL_CDE, 								ORIGINAL_LN_AMT, 								DAY_LT, 								NBR_OF_PMT, 								BRNCH, 								BNK_ID, 								PRD_CDE, 								PRD_NME, 								CRNCY_ISO4217_VAL, 								RESRV_BAL, 								DLR_EARN_METHOD, 								RETENTION_AMT 								FROM ULR015_Temp1 								WHERE ('99999998'='99999998' OR '99999998'='' OR NVL(CUST_NBR,'') IN (SELECT EXPLODE(SPLIT('99999998',',')))) 								AND ('99999998'='99999998' OR NVL(BRNCH,'') IN (SELECT EXPLODE(SPLIT('99999998',',')))) 								AND ('7400'='99999998' OR NVL(BNK_ID,'') IN (SELECT EXPLODE(SPLIT('7400',',')))) 								AND ('99999998'='99999998' OR NVL(PRD_NME,'') IN (SELECT EXPLODE(SPLIT('99999998',',')))) 								AND ('99999998'='99999998' OR '99999998'='' OR NVL(REL_MANAGER_RPT,'') IN (SELECT EXPLODE(SPLIT('99999998',',')))) 								AND ('99999998'='99999998' OR '99999998'='' OR NVL(CRNCY_ISO4217_VAL,'') IN (SELECT EXPLODE(SPLIT('99999998',',')))) 								AND ('99999998'='99999998' OR '99999998'='' OR NVL(DLR_NBR,'') IN (SELECT EXPLODE(SPLIT('99999998',',')))) 								
hive_20250729032236_5173fcf5-04ca-4c04-bda0-91183cc49e25
2025-07-29 03 22  Executing command(queryId=hive_20250729032236_5173fcf5-04ca-4c04-bda0-91183cc49e25)  SELECT 									LN_NBR AS AR_ID_ITEM, 									CUST_NBR, 									DLR_NBR, 									SHRT_NME, 									REL_MANAGER_COL, 									REL_MANAGER_RPT, 									PROC_STAT, 									PROC_TYP, 									COLL_CDE, 									PRD_CDE,									PRD_NME,									CRNCY_ISO4217_VAL, 									PRIN_BAL, 									INT_BAL, 									ORIGINAL_LN_AMT, 									LT_CHRG_DUE, 									FEE_DUE, 									RESRV_BAL, 									DLR_EARN_METHOD, 									RETENTION_AMT, 									AMT_PDUE, 									NXT_DUE_AMT, 									DAY_LT, 									LST_PMT_DTE, 									OLD_DUE, 									NBR_OF_PMT, 									NXT_DUE_DTE, 									CUR_MAT, 									BRNCH, 									REC,1 TYP, 									CEIL((ROW_NUMBER() OVER (ORDER BY CUST_NBR)) / '10') pagenbr 								FROM ULR015_Temp2 								ORDER BY CUST_NBR
application_1752432472682_71945 HIVE-867341c3-442b-40fe-8c60-d54e7cdc5a37 1376GB 172vCores
hive_20250729011053_75e1f557-5b65-446d-ac3a-36c245ba941c
2025-07-29 01 11  Executing command(queryId=hive_20250729011053_75e1f557-5b65-446d-ac3a-36c245ba941c)  CREATE TEMPORARY TABLE BOR050_Temp1 							AS SELECT 'Retail Deposits' AS PROD_LNE, 								AR_MSTR.APD_CODE  			AS PROD_TYP, 								AR_MSTR.AR_ID_ITEM 			AS AR_ID_ITEM, 								CUST_MSTR.NME_LNE 		AS CUST_NME, 								NVL(DLY_BAL.LDGR_BAL,0.0000)  			AS LGR_BAL, 								AR_MSTR.CRNCY_ISO4217_VAL_BCS		AS CRNCY, 								nvl(DLY_BAL.PRIN_BAL,'0.0000') as PRIN_BAL, 								NVL((from_unixtime(unix_timestamp(cast(AR_MSTR.APA_FRST_EFCTV_DT as date)), 'MM-dd-yyyy')),' ') 	AS OPEN_DTE, 								AR_MSTR.FRST_TXN_AMT					AS OPEN_DP, 								case when AR_MSTR.apadl_value = 'Unredeemed' and AR_MSTR.rtd_unrdm_intrst_option = 'NoAccrual' then nvl(un_inter_acc_rate,'0.0000000000') else  nvl(AR_MSTR.APAID_CRRNT_INTRST_RATE,'0.0000000000') end as INTRT, 								AR_MSTR.APAID_INDEX_NAME	AS INTRT_INDX, 								AR_MSTR.APADP_INTRST_DPSTN_CODE 	AS INT_DPSTN_MODE, 								NVL(DLY_BAL.INTRST_ACCRD_BAL,0.0000) 		AS ACCRD_INT, 								0.00 					AS CMPND_INT, 								NVL((from_unixtime(unix_timestamp(cast(HIST.FULL_DATE_TXT  as date)), 'MM-dd-yyyy')),' ')	AS LST_CUST_MNY_ACTY, 								CONCAT(AR_MSTR.RTD_MTRTY_TERM_PERIOD,' ',AR_MSTR.RTD_MTRTY_TERM_FRQNCY_CODE) 			AS TERM, 								NVL((from_unixtime(unix_timestamp(cast(AR_MSTR.LAST_MTRTY_DATE  as date)), 'MM-dd-yyyy')),' ') 	AS LST_MTRTY_DTE, 								NVL((from_unixtime(unix_timestamp(cast(AR_MSTR.RTD_MTRTY_DATE as date)), 'MM-dd-yyyy')),' ')  		AS MAT_DTE, 								''					AS PNLTY_METH, 								AR_MSTR.APADP_CLOSE_DATE AS ACCT_CLOS_DTE, 								AR_MSTR.APADL_VALUE as ACCT_SECOND_STAT, 								NVL((from_unixtime(unix_timestamp(cast(AR_MSTR.FULL_DATE_TXT as date)), 'MM-dd-yyyy')),' ')  		AS RPT_DTE, 								AR_MSTR.APALT_VALUE 							FROM uat4300_racc11.RT_APD_AR_MSTR_DP_RD AR_MSTR 							LEFT JOIN (select ar_id_item, ldbid,apaid_addtl_info,translate(split(INTRST.apaid_addtl_info, '
hive_20250729011249_12eb6499-14d0-44e1-a1e3-29e0ae8ee4ea
2025-07-29 01 12  Executing command(queryId=hive_20250729011249_12eb6499-14d0-44e1-a1e3-29e0ae8ee4ea)  CREATE TEMPORARY TABLE BOR050_Temp2 AS 							with BOR050_BAL_PER_Temp1 as 								(SELECT AR_ID_ITEM,BALTT_CODE,AABPDP_BATCH_TS AS AABPDP_BATCH_TS,ABPT_VALUE,aabps_end_date,AABPDP_AMT 								FROM uat4300_racc11.TB_APD_AR_BAL_PERIOD_DP_RD where full_date between '20250101' and '20251231' 								),							BOR050_BAL_PER_Temp2 as 								( select  max(AABPDP_BATCH_TS) AABPDP_BATCH_TS,AR_ID_ITEM,BALTT_CODE from BOR050_BAL_PER_Temp1 								WHERE  NVL(AABPS_END_DATE,'') BETWEEN '2025-01-01' and '2025-12-31' AND BALTT_CODE in('InterestPaidBalance','EarlyWithdrawalPenaltyCharged','FATCATaxPaid','FederalTaxPaid','DistributionFederalTax') 								AND ABPT_VALUE = 'Yearly' group by AR_ID_ITEM,BALTT_CODE 								),							BOR050_BAL_PER_Temp3 AS 								(select BOR050_BAL_PER_Temp1.AR_ID_ITEM, 									CASE WHEN BOR050_BAL_PER_Temp1.BALTT_CODE = 'InterestPaidBalance' AND ABPT_VALUE = 'Yearly' THEN NVL(AABPDP_AMT,0) END AS INT_PAID_YTD, 									CASE WHEN BOR050_BAL_PER_Temp1.BALTT_CODE = 'EarlyWithdrawalPenaltyCharged' AND ABPT_VALUE = 'Yearly' THEN NVL(AABPDP_AMT,0) END AS PNLTY_YTD, 									CASE WHEN BOR050_BAL_PER_Temp1.BALTT_CODE = 'FATCATaxPaid' AND ABPT_VALUE = 'Yearly' THEN NVL(AABPDP_AMT,0) END AS BWY, 									CASE WHEN BOR050_BAL_PER_Temp1.BALTT_CODE = 'FederalTaxPaid' AND ABPT_VALUE = 'Yearly' THEN NVL(AABPDP_AMT,0) END AS BWY1, 									CASE WHEN BOR050_BAL_PER_Temp1.BALTT_CODE = 'DistributionFederalTax' AND ABPT_VALUE = 'Yearly' THEN NVL(AABPDP_AMT,0) END AS BWY2, 									BOR050_BAL_PER_Temp1.AABPDP_BATCH_TS, 									ROW_NUMBER() OVER(PARTITION BY BOR050_BAL_PER_Temp1.AR_ID_ITEM, BOR050_BAL_PER_Temp1.BALTT_CODE ORDER BY BOR050_BAL_PER_Temp1.AABPDP_BATCH_TS DESC) AS RN 								from BOR050_BAL_PER_Temp1 								inner join BOR050_BAL_PER_Temp2 on BOR050_BAL_PER_Temp1.ar_id_item = BOR050_BAL_PER_Temp2.ar_id_item and BOR050_BAL_PER_Temp1.AABPDP_BATCH_TS = BOR050_BAL_PER_Temp2.AABPDP_BATCH_TS 								) 								SELECT AR_ID_ITEM, 									COALESCE(collect_list(INT_PAID_YTD))[0] AS INT_PAID_YTD, 									COALESCE(collect_list(PNLTY_YTD))[0] AS PNLTY_YTD, 									COALESCE(collect_list(BWY))[0]  AS BWY, 									COALESCE(collect_list(BWY1))[0] AS BWY1,                                     COALESCE(collect_list(BWY2))[0] AS BWY2 								from BOR050_BAL_PER_Temp3 where  RN = 1 GROUP By AR_ID_ITEM
hive_20250729011615_93733ad2-a0fd-43f8-b57a-38f571b34df2
2025-07-29 01 16  Executing command(queryId=hive_20250729011615_93733ad2-a0fd-43f8-b57a-38f571b34df2)  CREATE TEMPORARY TABLE BOR050_Temp3 AS 			SELECT PROD_LNE,PROD_TYP,T1.AR_ID_ITEM,CUST_NME,LGR_BAL,CRNCY,PRIN_BAL,OPEN_DTE,OPEN_DP,INTRT,INTRT_INDX,INT_DPSTN_MODE,ACCRD_INT,CMPND_INT,LST_CUST_MNY_ACTY,TERM,LST_MTRTY_DTE,MAT_DTE,PNLTY_METH, 				INT_PAID_YTD,PNLTY_YTD, BWY, BWY1,BWY2,ACCT_CLOS_DTE,ACCT_SECOND_STAT,RPT_DTE 			FROM BOR050_Temp1 T1 			LEFT JOIN BOR050_Temp2 T2 ON T1.AR_ID_ITEM=T2.AR_ID_ITEM where Upper(T1.APALT_VALUE) = 'ACTIVE' 			UNION ALL 			SELECT PROD_LNE,PROD_TYP,B.AR_ID_ITEM,CUST_NME,LGR_BAL,CRNCY,PRIN_BAL,OPEN_DTE,OPEN_DP,INTRT,INTRT_INDX,INT_DPSTN_MODE,ACCRD_INT,CMPND_INT,LST_CUST_MNY_ACTY,TERM,LST_MTRTY_DTE,MAT_DTE,PNLTY_METH, 			INT_PAID_YTD,PNLTY_YTD, BWY, BWY1,BWY2,ACCT_CLOS_DTE,ACCT_SECOND_STAT,RPT_DTE 			FROM BOR050_Temp1 B  JOIN BOR050_Temp2 C ON B.AR_ID_ITEM=C.AR_ID_ITEM and ( nvl(C.BWY1,'0.0000') > '0.0000' OR nvl(C.BWY,'0.0000') >'0.0000' OR nvl(C.BWY2,'0.0000') >'0.0000' OR nvl(C.INT_PAID_YTD,'0.0000') > '0.0000') 			where Upper(B.APALT_VALUE) <> 'ACTIVE' and ((B.ACCT_CLOS_DTE between '2025-01-01'  and '2025-12-31') OR (B.ACCT_CLOS_DTE is NULL)) 			
hive_20250729011618_0a84671b-6fa5-42a0-b83f-1f87c91e1299
2025-07-29 01 16  Executing command(queryId=hive_20250729011618_0a84671b-6fa5-42a0-b83f-1f87c91e1299)  CREATE TEMPORARY TABLE BOR050_Temp4 							AS SELECT 								'' AS SUBTOT_DUMMY, 								PROD_LNE, 								PROD_TYP, 								CAST(AR_ID_ITEM AS STRING) 	AS AR_ID_ITEM, 								CAST(CUST_NME AS STRING) 	AS CUST_NME, 								LGR_BAL AS LGR_BAL, 								cast(CRNCY as string) AS CRNCY, 								cast(PRIN_BAL as int) AS PRIN_BAL, 								CAST(OPEN_DTE AS STRING) 	AS OPEN_DTE, 								OPEN_DP, 								INTRT, 								CAST(INTRT_INDX AS STRING) 	AS INTRT_INDX, 								CAST(INT_DPSTN_MODE AS STRING) 	AS INT_DPSTN_MODE, 								INT_PAID_YTD AS INT_PAID_YTD, 								ACCRD_INT AS ACCRD_INT, 								CMPND_INT, 								CAST(LST_CUST_MNY_ACTY AS STRING) AS LST_CUST_MNY_ACTY, 								CAST(TERM AS STRING) AS TERM, 								CAST(LST_MTRTY_DTE AS STRING) 	AS LST_MTRTY_DTE, 								CAST(MAT_DTE AS STRING) 	AS MAT_DTE, 								CAST(PNLTY_METH AS STRING) 	AS PNLTY_METH, 								PNLTY_YTD AS PNLTY_YTD, 								BWY AS BWY, 								BWY1 AS BWY1,  								BWY2 AS BWY2, 								cast(ACCT_CLOS_DTE as string) as ACCT_CLOS_DTE, 								cast(ACCT_SECOND_STAT as string) as ACCT_SECOND_STAT, 								cast(RPT_DTE as string) as RPT_DTE, 								'0' AS DATAORDERING 							FROM BOR050_Temp3 AS T1 							UNION ALL 							SELECT 							concat('SubTotal
hive_20250729011620_665212bb-81df-4b5a-bfd1-bbff6f928475
2025-07-29 01 16  Executing command(queryId=hive_20250729011620_665212bb-81df-4b5a-bfd1-bbff6f928475)   SELECT 									PROD_LNE, 									CASE WHEN DATAORDERING=1 AND SUBTOT_DUMMY = 'SubTotal
application_1752432472682_71953 HIVE-e71671c6-3282-4fc2-a1f9-1829b37da6a7 1376GB 172vCores
hive_20250729011703_933a82ef-c7d0-44e2-bcb1-488bd49be6ae
2025-07-29 01 17  Executing command(queryId=hive_20250729011703_933a82ef-c7d0-44e2-bcb1-488bd49be6ae)  CREATE TEMPORARY TABLE BOR050_Temp1 							AS SELECT 'Retail Deposits' AS PROD_LNE, 								AR_MSTR.APD_CODE  			AS PROD_TYP, 								AR_MSTR.AR_ID_ITEM 			AS AR_ID_ITEM, 								AR_MSTR.AR_ID_ITEM 			AS AR_ID_ITEM, 								CUST_MSTR.NME_LNE 		AS CUST_NME, 								NVL(DLY_BAL.LDGR_BAL,0.0000)  			AS LGR_BAL, 								AR_MSTR.CRNCY_ISO4217_VAL_BCS		AS CRNCY, 								DLY_BAL.PRIN_BAL as PRIN_BAL, 								NVL((from_unixtime(unix_timestamp(cast(AR_MSTR.APA_FRST_EFCTV_DT as date)), 'MM-dd-yyyy')),' ') 	AS OPEN_DTE, 								AR_MSTR.FRST_TXN_AMT					AS OPEN_DP, 								DLY_BAL.PRIN_BAL as PRIN_BAL, 								NVL((from_unixtime(unix_timestamp(cast(AR_MSTR.APA_FRST_EFCTV_DT as date)), 'MM-dd-yyyy')),' ') 	AS OPEN_DTE, 								AR_MSTR.FRST_TXN_AMT					AS OPEN_DP, 								case when AR_MSTR.apadl_value = 'Unredeemed' and AR_MSTR.rtd_unrdm_intrst_option = 'NoAccrual' then nvl(un_inter_acc_rate,'0.0000000000') else  nvl(AR_MSTR.APAID_CRRNT_INTRST_RATE,'0.0000000000') end as INTRT, 								AR_MSTR.APAID_INDEX_NAME	AS INTRT_INDX, 								AR_MSTR.APAID_INDEX_NAME	AS INTRT_INDX, 								AR_MSTR.APADP_INTRST_DPSTN_CODE 	AS INT_DPSTN_MODE, 								NVL(DLY_BAL.INTRST_ACCRD_BAL,0.0000) 		AS ACCRD_INT, 								'0.0000' 					AS CMPND_INT, 								NVL((from_unixtime(unix_timestamp(cast(HIST.FULL_DATE_TXT  as date)), 'MM-dd-yyyy')),' ')	AS LST_CUST_MNY_ACTY, 								NVL((from_unixtime(unix_timestamp(cast(HIST.FULL_DATE_TXT  as date)), 'MM-dd-yyyy')),' ')	AS LST_CUST_MNY_ACTY, 								CONCAT(AR_MSTR.RTD_MTRTY_TERM_PERIOD,' ',AR_MSTR.RTD_MTRTY_TERM_FRQNCY_CODE) 			AS TERM, 								NVL((from_unixtime(unix_timestamp(cast(AR_MSTR.LAST_MTRTY_DATE  as date)), 'MM-dd-yyyy')),' ') 	AS LST_MTRTY_DTE, 								NVL((from_unixtime(unix_timestamp(cast(AR_MSTR.RTD_MTRTY_DATE as date)), 'MM-dd-yyyy')),' ')  		AS MAT_DTE, 								''					AS PNLTY_METH, 								AR_MSTR.APADP_CLOSE_DATE as ACCT_CLOS_DTE, 								AR_MSTR.APADL_VALUE as ACCT_SECOND_STAT, 								AR_MSTR.FULL_DATE_TXT as RPT_DTE, 								AR_MSTR.APALT_VALUE 							FROM uat4300_racc11.RT_APD_AR_MSTR_DP_RD AR_MSTR 							LEFT JOIN (select ar_id_item, ldbid,apaid_addtl_info,translate(split(INTRST.apaid_addtl_info, '
hive_20250729011906_34795cc9-a447-4c7a-87b3-b667c3233c17
2025-07-29 01 19  Executing command(queryId=hive_20250729011906_34795cc9-a447-4c7a-87b3-b667c3233c17)  CREATE TEMPORARY TABLE BOR050_BAL_Temp2 AS 							with BOR050_BAL_PER_Temp1 as 								(SELECT AR_ID_ITEM,BALTT_CODE,AABPDP_BATCH_TS AS AABPDP_BATCH_TS,ABPT_VALUE,aabps_end_date,AABPDP_AMT 								FROM uat4300_racc11.TB_APD_AR_BAL_PERIOD_DP_RD where full_date between '20250101' and '20251231' 								),							BOR050_BAL_PER_Temp2 as 								( select  max(AABPDP_BATCH_TS) AABPDP_BATCH_TS,AR_ID_ITEM,BALTT_CODE from BOR050_BAL_PER_Temp1 								WHERE  NVL(AABPS_END_DATE,'') BETWEEN '2025-01-01' and '2025-12-31' AND BALTT_CODE in('InterestPaidBalance','EarlyWithdrawalPenaltyCharged','FATCATaxPaid','FederalTaxPaid','DistributionFederalTax' ) 								AND ABPT_VALUE = 'Yearly' group by AR_ID_ITEM,BALTT_CODE 								),							BOR050_BAL_PER_Temp3 AS 								(select BOR050_BAL_PER_Temp1.AR_ID_ITEM, 									CASE WHEN BOR050_BAL_PER_Temp1.BALTT_CODE = 'InterestPaidBalance' AND ABPT_VALUE = 'Yearly' THEN NVL(AABPDP_AMT,0) END AS INT_PAID_YTD, 									CASE WHEN BOR050_BAL_PER_Temp1.BALTT_CODE = 'EarlyWithdrawalPenaltyCharged' AND ABPT_VALUE = 'Yearly' THEN NVL(AABPDP_AMT,0) END AS PNLTY_YTD, 									CASE WHEN BOR050_BAL_PER_Temp1.BALTT_CODE = 'FATCATaxPaid' AND ABPT_VALUE = 'Yearly' THEN NVL(AABPDP_AMT,0) END AS BWY, 									CASE WHEN BOR050_BAL_PER_Temp1.BALTT_CODE = 'FederalTaxPaid' AND ABPT_VALUE = 'Yearly' THEN NVL(AABPDP_AMT,0) END AS BWY1, 									CASE WHEN BOR050_BAL_PER_Temp1.BALTT_CODE = 'DistributionFederalTax' AND ABPT_VALUE = 'Yearly' THEN NVL(AABPDP_AMT,0) END AS BWY2, 									BOR050_BAL_PER_Temp1.AABPDP_BATCH_TS, 									ROW_NUMBER() OVER(PARTITION BY BOR050_BAL_PER_Temp1.AR_ID_ITEM, BOR050_BAL_PER_Temp1.BALTT_CODE ORDER BY BOR050_BAL_PER_Temp1.AABPDP_BATCH_TS DESC) AS RN 								from BOR050_BAL_PER_Temp1 								inner join BOR050_BAL_PER_Temp2 on BOR050_BAL_PER_Temp1.ar_id_item = BOR050_BAL_PER_Temp2.ar_id_item and BOR050_BAL_PER_Temp1.AABPDP_BATCH_TS = BOR050_BAL_PER_Temp2.AABPDP_BATCH_TS 								) 								SELECT AR_ID_ITEM, 									COALESCE(collect_list(INT_PAID_YTD))[0] AS INT_PAID_YTD, 									COALESCE(collect_list(PNLTY_YTD))[0] AS PNLTY_YTD, 									COALESCE(collect_list(BWY))[0]  AS BWY, 									COALESCE(collect_list(BWY1))[0] AS BWY1, 									COALESCE(collect_list(BWY2))[0] AS BWY2 								from BOR050_BAL_PER_Temp3 where  RN = 1 GROUP By AR_ID_ITEM
hive_20250729012141_d19670db-a7a2-4786-845a-ef820ddba729
2025-07-29 01 21  Executing command(queryId=hive_20250729012141_d19670db-a7a2-4786-845a-ef820ddba729)  CREATE TEMPORARY TABLE BOR050_Temp3 AS 			SELECT PROD_LNE,PROD_TYP,T1.AR_ID_ITEM,CUST_NME,LGR_BAL,CRNCY,PRIN_BAL,OPEN_DTE,OPEN_DP,INTRT,INTRT_INDX,INT_DPSTN_MODE,ACCRD_INT,CMPND_INT,LST_CUST_MNY_ACTY,TERM,LST_MTRTY_DTE,MAT_DTE,PNLTY_METH,ACCT_CLOS_DTE,ACCT_SECOND_STAT,RPT_DTE 			FROM BOR050_Temp1 T1 where Upper(T1.APALT_VALUE) = 'ACTIVE' 			UNION ALL 			SELECT PROD_LNE,PROD_TYP,B.AR_ID_ITEM,CUST_NME,LGR_BAL,CRNCY,PRIN_BAL,OPEN_DTE,OPEN_DP,INTRT,INTRT_INDX,INT_DPSTN_MODE,ACCRD_INT,CMPND_INT,LST_CUST_MNY_ACTY,TERM,LST_MTRTY_DTE,MAT_DTE,PNLTY_METH,ACCT_CLOS_DTE,ACCT_SECOND_STAT,RPT_DTE 			FROM BOR050_Temp1 B  JOIN BOR050_BAL_Temp2 C ON B.AR_ID_ITEM=C.AR_ID_ITEM and ( nvl(C.BWY1,'0.0000') > '0.0000' OR nvl(C.BWY,'0.0000') >'0.0000' OR nvl(C.BWY2,'0.0000') >'0.0000' OR nvl(C.INT_PAID_YTD,'0.0000') > '0.0000') 			where Upper(B.APALT_VALUE) <> 'ACTIVE' and ((B.ACCT_CLOS_DTE between '2025-01-01'  and '2025-12-31') OR (B.ACCT_CLOS_DTE is NULL)) 			
hive_20250729012143_b5bc8a6f-9a3a-4f2e-9ef5-7d5302c5bd5b
2025-07-29 01 21  Executing command(queryId=hive_20250729012143_b5bc8a6f-9a3a-4f2e-9ef5-7d5302c5bd5b)  CREATE TEMPORARY TABLE BOR050_Temp2 				AS SELECT 					COUNT(AR_ID_ITEM)  AS TOT_CNT_OF_ACCT, 					COUNT(AR_ID_ITEM)  AS TOT_CNT_OF_ACCT, 					SUM(LGR_BAL)       AS TOT_LGR_BAL 				FROM BOR050_Temp3
hive_20250729012147_a4ccfb7d-5e40-4dad-b2ea-717b0694cf29
2025-07-29 01 21  Executing command(queryId=hive_20250729012147_a4ccfb7d-5e40-4dad-b2ea-717b0694cf29)  SELECT * FROM 			( 			( 			SELECT 				'' AS COL1, 				INTRT  AS COL2, 				NVL(CAST(COUNT(AR_ID_ITEM) as string),'0.0000') AS COL3, 				CAST(format_number((COUNT(AR_ID_ITEM) / MIN(TOT_CNT_OF_ACCT) * 100),2) as string) AS COL4, 				CRNCY AS COL5, 				CAST(format_number((SUM(LGR_BAL)),2) as string) AS COL6, 				CAST(format_number((CASE 					WHEN MIN(VW.TOT_LGR_BAL)<>0 THEN (SUM(LGR_BAL) / MIN(TOT_LGR_BAL) * 100) 					ELSE 0.0000 					END),2) as string) AS COL7, 				'1' AS pagenbr, 				'0' AS Dataordering 			FROM BOR050_Temp3 			CROSS JOIN BOR050_Temp2 AS VW 			GROUP BY INTRT,CRNCY 			UNION ALL 			SELECT 				CONCAT_WS('
application_1752432472682_71426 HIVE-18c9eb7f-bee7-4ad6-ab27-5c0e4a76a40d 1392GB 174vCores
hive_20250729001924_60eb37cb-7844-489d-8e38-3f4901176aed
2025-07-29 00 19  Executing command(queryId=hive_20250729001924_60eb37cb-7844-489d-8e38-3f4901176aed)  create table uat1600_racp11.tb_stg_act_impt_RDPM173 as select * from uat1600_racp11.tb_stg_act_impt_RDPM173_tmp
hive_20250729001947_669e8e7e-f270-4887-b502-5c17fa4ef4d0
2025-07-29 00 19  Executing command(queryId=hive_20250729001947_669e8e7e-f270-4887-b502-5c17fa4ef4d0)  INSERT INTO uat1600_racp11.RT_APD_AR_MSTR_DP_RD select tbl1.rec_date,tbl1.prcs_date,'2025-06-04' as full_date_txt,tbl1.ldbid,tbl1.ar_id_item,tbl1.ar_sort_ps_value,tbl1.ar_sort_appl_value,tbl1.enart_value,tbl1.apd_code,tbl1.pdln_value,tbl1.pdgr_value,tbl1.pdsgr_value,tbl1.pd_tmpl,tbl1.apd_name,tbl1.pect_value,tbl1.apat_value_title1,tbl1.apa_name_mix,tbl1.ar_id_item_org_unit,tbl1.crncy_iso4217_val_bcs,tbl1.apa_efctv_date,tbl1.apalt_value,tbl1.apadl_value,tbl1.obj_status,tbl1.apacs_dr_bal_option,tbl1.abdcs_cls_typ,tbl1.apacs_fund_owner,tbl1.abdcs_atm_trans_alw_indctr,tbl1.apaud_ach_trans_option_code,tbl1.apadp_intrst_dpstn_code,tbl1.apadp_intrst_dpstn_frqncy_term,tbl1.apadp_intrst_dpstn_frqncy_code,tbl1.abdcs_intngbl_tax,tbl1.apacs_acct_prps,tbl1.abdcs_ar_orgntn_mde,tbl1.apacs_drcard_hldr_indctr,tbl1.abdcs_ltst_rec_avail_ind,tbl1.abdcs_auf_lmt_exp_date,tbl1.apadp_adt_acct_ind,tbl1.abdcs_emp_txn_ind,tbl1.apaus_atmpos_optin_value,tbl1.abdcs_wire_trans_option_code,tbl1.abdcs_inet_txn_alw_ind,tbl1.apaud_resp_state_name,tbl1.apaud_resp_state,tbl1.apaud_esch_state,tbl1.apaud_tis_cnsmr,tbl1.apaud_bkup_whhldg,tbl1.apaud_bai_rptg_indctr,tbl1.ip_id_item,tbl1.arir_efctv_date,tbl1.arir_end_date,tbl1.arir_prcntg,tbl1.arirt_code,tbl1.arirt_name,tbl1.rtd_discl_apy,tbl1.aridt_ar_id_item,tbl1.reason_code_close,tbl1.apadp_close_date,tbl1.stlm_code,tbl1.acdcs_lwa_prcs_dte,tbl1.arodcs_reopn_resn,tbl1.apadp_reopen_date,tbl1.apa_efctv_date_reopen,tbl1.apa_frst_efctv_dt,tbl1.apadp_cl_type,tbl1.abdtd_ar_orgntn_mode,tbl1.abdtd_emp_trans_ind,tbl1.rtd_orgnl_apy,tbl1.rtd_intrst_rate,tbl1.rtd_tax_dfn_code,tbl1.rtd_tax_rate,tbl1.rtd_mtrty_term_frqncy_code,tbl1.rtd_mtrty_term_period,tbl1.rtd_mtrty_date,tbl1.rtd_mtrty_prcs_day,tbl1.rtd_auto_rnwl,tbl1.rtd_rnw_period_option,tbl1.rtd_rnwl_intrst_option,tbl1.rtd_rnwl_amt_option,tbl1.rtd_rnw_diff_dur_ind,tbl1.rtd_mtrty_rnwl_term_frqncy_code,tbl1.rtd_mtrty_rnwl_term_period,tbl1.rtd_rnw_addtl_amt_ind,tbl1.rtd_rnwl_amt,tbl1.rtd_rnwl_amt_prcs_date,tbl1.rtd_last_rnwl_date,tbl1.rtd_rnwl_cnt,tbl1.rtd_rnwl_rate,tbl1.rtd_prncpl_dpstn_option,tbl1.rtd_grc_type,tbl1.rtd_grc_val,tbl1.rtd_grc_intrst_option,tbl1.rtd_grace_period_indctr,tbl1.rtd_grace_end_date,tbl1.rtd_accru_intrst_opn_dp_met,tbl1.rtd_unrdm_intrst_option,tbl1.rtd_step_up_cnt,tbl1.apatd_rate_reset_period,tbl1.rtd_rate_reset_val,tbl1.rtd_step_up_rate,tbl1.rtd_orgnl_mtrty_amt,tbl1.rtd_crrnt_mtrty_amt,tbl1.rtd_cntrctl_amt,tbl1.apa_frst_efctv_dt_reopen,tbl1.acct_rstrcn_ind,tbl1.acct_hold_ind,tbl1.ip_id_item_prmry_rltnp_mgr,tbl1.scndy_cls_reasn_code,tbl1.apadp_last_cntct_date,tbl1.apadp_gl_cost_cntr,tbl1.ds_code_src,tbl1.ari_value,tbl1.oprtn_type_value,tbl1.apaid_rate_name,tbl1.apaid_index_name,tbl1.apaid_intrst_sprd,tbl1.apaid_year_basis,tbl1.apaid_rate_tier_type,tbl1.apatd_frst_rnwl_date,tbl1.ar_id_item_rng,tbl1.ar_id_item_ext_gl,tbl1.frst_txn_date,tbl1.frst_txn_amt,tbl1.inslvny_date,tbl1.unclm_date,tbl1.dorm_date,tbl1.adt_usr_id_open,tbl1.adt_usr_id_close,tbl1.adt_usr_id_reopen,tbl1.adt_usr_id_rnwl,tbl1.adt_dev_id_open,tbl1.adt_dev_id_close,tbl1.adt_dev_id_reopen,tbl1.adt_dev_id_rnwl,tbl1.last_mtrty_date,tbl1.csc_code,tbl1.csc_name,tbl1.csi_code,tbl1.cst_code,tbl1.csit_value,tbl1.cst_intrst_fee_ind,tbl1.cst_prcng_type,tbl1.apa_bkng_date,tbl1.cst_end_date,tbl1.cst_inhr,tbl1.apadp_last_chng_date,tbl1.frst_dpst_efctv_date,tbl1.crncy_iso4217_val_frst_dp_amt,tbl1.apaid_margin_rate,tbl1.ar_id_item_iban,tbl1.ret_acct_ind,tbl1.ret_acct_pln_typ,tbl1.ret_acct_pln_nbr,tbl1.mkt_lnk_code,tbl1.schdl_stlmnt_date,tbl1.usr_drvtv_trans_hedge,tbl1.issued_clltrl,tbl1.orc_code,tbl1.apadp_dmstc_acct_indctr,tbl1.apadp_swp_indctr,tbl1.arex_idfr_prnt,tbl1.reasn_code,tbl1.arex_desc,tbl1.arex_efctv_date,tbl1.arex_end_date,tbl1.reasn_cl_type,tbl1.inactive_date,tbl1.mrkd_uncl_date,tbl1.apaid_accrl_type,tbl1.apaid_last_intrst_paid_date,tbl1.apaid_accrl_frqncy_value,tbl1.apaid_accrl_frqncy_unit,tbl1.crir_name,tbl1.apaid_apy,tbl1.apaid_day_cnt,tbl1.apaid_rate_type,tbl1.apaid_crrnt_intrst_rate,tbl1.artad_nmbr_of_actv_stop_rqst,tbl1.artad_trmntn_date,tbl1.artad_part_of_pkg,tbl1.arid_item_flx_tfr,tbl1.frce_cls_ind,tbl1.insdr_rltnp,tbl1.ou_nme,tbl1.ip_id_item_lgl_org_unit,tbl1.apacs_final_whdrwl_amt,tbl1.acdrt_final_prcs_dte,tbl1.abdcs_alw_unclr_fnd_amt,tbl1.abdcs_auf_date,tbl1.account_orgn_mode,tbl1.apadp_od_limit,tbl1.apadp_od_optin_date,tbl1.apadp_od_optin_reasn,tbl1.apadp_od_fee_wav,tbl1.intrst_brg_acct_ind,tbl1.apadp_choff_reasn,tbl1.apadp_choff_amt,tbl1.apadp_embd_option,tbl1.rtd_steup_up_ind,tbl1.apadp_sec_dpst_ind,tbl1.apadp_file_rte_chng,tbl1.apadp_pasthru_acct_flg,tbl1.apadp_sub_acct_trans_flag,tbl1.apadp_atm_pos_od_optin_date,tbl1.apadp_atm_pos_od_optin,tbl1.intl_fundg_ind,tbl1.excs_od_cntct_date,tbl1.apadp_esch_status,tbl1.apadp_esch_date,tbl1.arid_item_micr,tbl1.mrgr_date,tbl1.mrgr_id,tbl1.pndg_reasn,tbl1.apaud_fdic_loss_indctr,tbl1.prcg_idfr,tbl1.abdcs_scndy_stat_resn,tbl1.rtd_cntrctl_amt_date,tbl1.rtd_rnw_whdrwl_amt_ind,tbl1.rtd_rnw_whdrwl_amt,tbl1.rtd_rnw_whdrwl_amt_date,tbl1.rtd_nbr_of_wthdrwl_alw,tbl1.rtd_nbr_of_dpst_alw,tbl1.rtd_tot_nbr_of_trans_alw,tbl1.rtd_orgnl_mtrty_amt_date,tbl1.rtd_crrnt_amt_date,tbl1.rtd_alw_whdrwl_accrd_intrst_ind,tbl1.rtd_alw_whdrwl_intrst_option,tbl1.rtd_tot_nbr_of_rdmptn_alw,tbl1.rtd_nbr_of_manual_bmup_irate,tbl1.apdc_resn_code,tbl1.apdc_resn_desc,tbl1.syst_orc,tbl1.discr_orc,tbl1.acct_review_date,tbl1.syst_mlng_type,tbl1.ar_id_item_bban,tbl1.ar_id_item_lgcy,tbl1.drcard_nmbr,tbl1.acct_anlys_indctr,tbl1.acct_review_desc,tbl1.rtd_perdc_intrst_dpstn_mode,tbl1.rtd_rlvr_ind,tbl1.rtd_rlvr_prod,tbl1.rtd_rlvr_frce_prod,tbl1.rtd_cust_induce_indctr,tbl1.rtd_tax_liab,tbl1.tdmbup_irate_cntr,tbl1.tdmbup_prcs_date,tbl1.affil_code,tbl1.ngot_ind,tbl1.stmn_frqncy_type,tbl1.stmn_frqncy_value,tbl1.stm_hol_prcsg_rule,tbl1.regcc_acct,tbl1.st_resp,tbl1.acct_prps,tbl1.st_open,tbl1.alw_auto_cls,tbl1.spclzd_acct_type,tbl1.prpd_acct_flag,tbl1.last_rstrc_updtd_date,tbl1.last_ip_rltnp_updtd_date,tbl1.last_hld_updtd_date,tbl1.last_maintnc_chng_date,tbl1.last_rm_updtd_date,tbl1.min_bal_limit,tbl1.bkup_whldg_ind,tbl1.vltry_whldg_ind,tbl1.total_fee_adjmnt_choff,tbl1.chrg_anlys_option,tbl1.ovr_fundg_amt,tbl1.chk_img_dpstn,tbl1.city_nme,tbl1.ou_st_cde,tbl1.ec_emplt_id,tbl1.ec_empl_ind,tbl1.aacc_rate_factor,tbl1.orgnl_aplcbl_apy,tbl1.std_od_option_ind,tbl1.colngoff_period_end_date,tbl1.rtd_mtrty_amt,tbl1.od_fee_cure_option,'20250604' as full_date from  uat1600_racp11.RT_APD_AR_MSTR_DP_RD tbl1 left join ( select ar_id_item from uat1600_racp11.tb_stg_act_impt_RDPM173 ) tbl2 on tbl1.ar_id_item=tbl2.ar_id_item where tbl2.ar_id_item is null
hive_20250729002440_984f5685-524f-43d5-a5b4-5706485dd9d1
2025-07-29 00 24  Executing command(queryId=hive_20250729002440_984f5685-524f-43d5-a5b4-5706485dd9d1)  LOAD DATA INPATH '/tmp/2025_07_29/svcras1600admin/application_1752432472682_71378/88c8170c-c4ed-45cc-ba3f-6b43e867781f' INTO TABLE uat1600_racp11.RT_APD_AR_MSTR_DP_RD
hive_20250729002649_0a0b5ee3-83f9-4c22-8ec0-a18154c0eb14
2025-07-29 00 26  Executing command(queryId=hive_20250729002649_0a0b5ee3-83f9-4c22-8ec0-a18154c0eb14)  LOAD DATA INPATH '/tmp/2025_07_29/svcras1600admin/application_1752432472682_71378/64e6ddd1-7627-4ca6-9b78-57145d41e5e1' INTO TABLE uat1600_racp11.RT_APD_AR_HIST_DP_RD
application_1752432472682_72367 HIVE-ab787fff-026e-4b3c-8195-f525148de817 1584GB 198vCores
hive_20250729022112_22660ca3-6df0-480a-a74d-eca6b5770e87
2025-07-29 02 21  Executing command(queryId=hive_20250729022112_22660ca3-6df0-480a-a74d-eca6b5770e87)  insert into uat5201_raca21.TB_CFRAS_STMNT_REC_TYPE_1 partition (stmnt) select * from ( With STMT AS ( select distinct DRI01.IP_ID_ITEM_RECEIVER, DRI01.AR_ID_ITEM, DRI01.LDBID, DRI01.ARSDP_BATCH_DATE, cast(DRI01.FULL_DATE_TXT as date) as FULL_DATE_TXT, DRI01.FULL_DATE, DRI01.STMN_GRP_ID, DRI01.ARSDP_ADDTL_INFO, DRI01.AR_GRP_ROLE, cast(DRI01.stmn_period_start as date) as stmn_period_start, Date_add( Cast(DRI01.stmn_period_start AS DATE), -1 ) as prvs_stmn_period_start, Date_add( Cast(DRI01.stmn_period_end AS DATE), -1 ) as prvs_stmn_period_end, concat( int( substr(DRI01.stmn_period_end, 1, 4) ), '-12-31' ) as curr_yr_end, concat( int( substr(DRI01.stmn_period_end, 1, 4) -1 ), '-12-31' ) as prvs_yr_end, cast(DRI01.stmn_period_end as date) as stmn_period_end, DRI01.ARSDP_INTRST_EARNED, DRI01.STMN_OPNG_BAL, DRI01.STMN_CLSG_BAL, DRI01.STMN_DR_AMT, DRI01.STMN_CR_AMT, DRI01.STMN_PSTG_DR_CNT, DRI01.STMN_PSTG_CR_CNT, DRI01.ARSDP_APYE, DRI01.STMNT_TYPE, DRI01.stmn_addtl_cnt, DRI01.stmn_comm_mode, DRI01.STMN_NTFN_MODE, DRI01.APALT_VALUE, DRI01.stmn_comm_mode_sec_emsg_cnt, DRI01.stmn_comm_mode_papr_cnt, case when ( DRI01.STMN_GRP_ID = '' or DRI01.STMN_GRP_ID is Null ) Then 1 When ( ( DRI01.STMN_GRP_ID <> '' and DRI01.STMN_GRP_ID is not Null ) and ( temp.STMN_GRP_ID is null or temp.STMN_GRP_ID = '' ) ) Then 2 When ( ( DRI01.STMN_GRP_ID is not null or DRI01.STMN_GRP_ID <> '' ) and ( temp.STMN_GRP_ID is not null or temp.STMN_GRP_ID <> '' ) ) Then 1 else 0 End as stmnt from uat5201_raca21.TB_APD_AR_STMNT_DTL_DP_RD DRI01 left join uat5201_raca21.orphan_account temp on DRI01.STMN_GRP_ID = temp.STMN_GRP_ID WHERE DRI01.FULL_DATE = cast('20250728' as int) and ( ( DRI01.STMN_GRP_ID = '' or DRI01.STMN_GRP_ID is Null ) OR ( DRI01.STMN_GRP_ID <> '' and DRI01.STMN_GRP_ID is not Null ) ) ), DRIVING_TABLE as ( select DISTINCT DRI01.IP_ID_ITEM_RECEIVER, DRI01.AR_ID_ITEM, DRI01.LDBID, DRI01.ARSDP_BATCH_DATE, DRI01.FULL_DATE_TXT, DRI01.FULL_DATE, coalesce( UREC.STMN_GRP_ID, DRI01.STMN_GRP_ID ) as STMN_GRP_ID, DRI01.ARSDP_ADDTL_INFO, DRI01.AR_GRP_ROLE, coalesce( UREC.stmn_period_start, DRI01.stmn_period_start ) as stmn_period_start, coalesce( UREC.prvs_stmn_period_start, DRI01.prvs_stmn_period_start ) as prvs_stmn_period_start, coalesce( UREC.prvs_stmn_period_end, DRI01.prvs_stmn_period_end ) as prvs_stmn_period_end, DRI01.curr_yr_end, DRI01.prvs_yr_end, coalesce( UREC.stmn_period_end, DRI01.stmn_period_end ) as stmn_period_end, COALESCE( UREC.ARSDP_INTRST_EARNED, DRI01.ARSDP_INTRST_EARNED ) as ARSDP_INTRST_EARNED, COALESCE( UREC.STMN_OPNG_BAL, DRI01.STMN_OPNG_BAL ) as STMN_OPNG_BAL, coalesce( UREC.STMN_CLSG_BAL, DRI01.STMN_CLSG_BAL ) as STMN_CLSG_BAL, COALESCE( UREC.STMN_DR_AMT, DRI01.STMN_DR_AMT ) as STMN_DR_AMT, COALESCE( UREC.STMN_CR_AMT, DRI01.STMN_CR_AMT ) as STMN_CR_AMT, COALESCE( UREC.STMN_PSTG_DR_CNT, DRI01.STMN_PSTG_DR_CNT ) as STMN_PSTG_DR_CNT, COALESCE( UREC.STMN_PSTG_CR_CNT, DRI01.STMN_PSTG_CR_CNT ) as STMN_PSTG_CR_CNT, COALESCE( UREC.ARSDP_APYE, DRI01.ARSDP_APYE ) as ARSDP_APYE, DRI01.STMNT_TYPE, DRI01.stmn_comm_mode, DRI01.STMN_NTFN_MODE, DRI01.stmnt, DRI01.stmn_addtl_cnt, DRI01.stmn_comm_mode_sec_emsg_cnt, DRI01.stmn_comm_mode_papr_cnt, TB_IP_ID_MSTR.wr_lang_pref_cde, coalesce( IRA.ar_id_item, DRI01.AR_ID_ITEM ) AS IRA_ar_id_item, DEP_SNAP_1.APAT_VALUE_TITLE1, DEP_SNAP_1.AR_ID_ITEM_ORG_UNIT, DEP_SNAP_1.RET_ACCT_PLN_TYP, DEP_SNAP_1.CRNCY_ISO4217_VAL_BCS, DEP_SNAP_1.RTD_MTRTY_TERM_PERIOD, DEP_SNAP_1.RTD_MTRTY_DATE, DEP_SNAP_1.RTD_GRC_VAL, DEP_SNAP_1.RTD_GRC_TYPE, DEP_SNAP_1.APAID_CRRNT_INTRST_RATE, DEP_SNAP_1.RTD_MTRTY_TERM_FRQNCY_CODE, DEP_SNAP_1.RTD_CNTRCTL_AMT, DEP_SNAP_1.enart_value, DEP_SNAP_1.apa_frst_efctv_dt, DEP_SNAP_1.apa_efctv_date, DEP_SNAP_1.APA_NAME_MIX, DEP_SNAP_1.APD_NAME, DEP_SNAP_1.APD_CODE, DEP_SNAP_1.RET_ACCT_IND, DEP_SNAP_1.RET_ACCT_PLN_NBR, DEP_SNAP_1.FRST_TXN_DATE, DEP_SNAP_1.rtd_last_rnwl_date, DEP_SNAP_1.rtd_prncpl_dpstn_option, DEP_SNAP_1.apadp_intrst_dpstn_code, DEP_SNAP_1.APAID_DAY_CNT, DEP_SNAP_1.APAID_YEAR_BASIS, DEP_SNAP_1.apaid_intrst_sprd, DEP_SNAP_1.apadp_close_date, DEP_SNAP_1.RTD_CRRNT_MTRTY_AMT, DEP_SNAP_1.PDGR_VALUE, COALESCE( DRI01.APALT_VALUE, DEP_SNAP_1.APALT_VALUE, 'Unsettled' ) as APALT_VALUE, cast( coalesce( IRA.APADP_CLOSE_DATE, DEP_SNAP_1.apadp_close_date, '1900-01-01' ) as date ) as IRA_APADP_CLOSE_DATE, DEP_SNAP_1.APADP_CHOFF_REASN as APADP_CHOFF_REASN from STMT DRI01 LEFT OUTER JOIN uat5201_raca21.RT_APD_AR_MSTR_DP_RD DEP_SNAP_1 ON DRI01.ar_id_item = DEP_SNAP_1.ar_id_item LEFT OUTER JOIN uat5201_raca21.RT_APD_AR_MSTR_DP_RD IRA ON IRA.RET_ACCT_PLN_NBR = DEP_SNAP_1.RET_ACCT_PLN_NBR and IRA.ar_id_item = DEP_SNAP_1.ar_id_item and DRI01.stmnt = 1 and IRA.RET_ACCT_PLN_NBR <> '' and DEP_SNAP_1.RET_ACCT_PLN_NBR <> '' LEFT OUTER JOIN STMT UREC ON UREC.ar_id_item = IRA.ar_id_item and UREC.IP_ID_ITEM_RECEIVER = DRI01.IP_ID_ITEM_RECEIVER LEFT OUTER JOIN uat5201_raca21.TB_CUST_MSTR_IP TB_IP_ID_MSTR ON DRI01.IP_ID_ITEM_RECEIVER = TB_IP_ID_MSTR.EC_IP_ID ), EC_11900 as ( select distinct EC_11900_i2.ar_id_item, EC_11900_i2.IP_ID_ITEM_RECEIVER, EC_11900_i2.AR_ID, EC_11900_i2.full_date, EC_11900_i2.IP_RLT_TYP, EC_11900_i2.rlt_cde, EC_11900_i2.EC_IP_ID, EC_11900_i2.RLT_CDE, EC_11900_i2.actn_ind, EC_11900_i2.RNO from ( SELECT distinct AR_ID, drv1.AR_ID_ITEM, drv1.ip_id_item_receiver, RLT_CDE, IP_RLT_TYP, EC_IP_ID, full_date, actn_ind, ROW_NUMBER() OVER ( PARTITION by AR_ID, strt_dte, rlt_cde, EC_IP_ID, drv1.ip_id_item_receiver order by full_date desc ) RNO FROM uat5201_raca21.TB_11900_IP_AR_RLTNP_EC EC_11900_i1 inner join ( select distinct ar_id_item, IP_ID_ITEM_RECEIVER from DRIVING_TABLE ) drv1 ON drv1.AR_ID_ITEM = EC_11900_i1.AR_ID WHERE EC_11900_i1.FULL_DATE <= '20250728' ) EC_11900_i2 ), TB_11410 as ( select REC_11410.EC_IP_ID, REC_11410.actn_ind, REC_11410.COMM_PREF_TYP_VAL, REC_11410.COMM_PREF_STAT, ROW_NUMBER() OVER ( PARTITION BY EC_11900.AR_ID_ITEM, EC_11900.IP_ID_ITEM_RECEIVER, EC_11900.IP_RLT_TYP, EC_11900.EC_IP_ID, REC_11410.COMM_PREF_TYP_VAL, REC_11410.COMM_PREF_STAT ORDER BY REC_11410.FULL_DATE DESC ) RNK From uat5201_raca21.TB_11410_IP_CMMCN_PREF_TYP_EC REC_11410 inner Join EC_11900 ON REC_11410.EC_IP_ID = EC_11900.EC_IP_ID AND REC_11410.FULL_DATE <= EC_11900.full_date AND ( REC_11410.COMM_PREF_TYP_VAL = 'Privacy Notice' or REC_11410.COMM_PREF_TYP_VAL = 'ADA Large Print' ) and REC_11410.COMM_PREF_STAT = 'Opt In' ), CUS_PRI_SEC AS ( select distinct tm.EC_IP_ID, tm.AR_ID, tm.IP_RLT_TYP, tm.ar_id_item, tm.IP_ID_ITEM_RECEIVER, tm.COMM_PREF_TYP_VAL_P, tm.COMM_PREF_TYP_VAL_A, tm.RLT_CDE, IP_ID_P_S.NME_PRFX, IP_ID_P_S.FRST_NME, IP_ID_P_S.MID_NME, IP_ID_P_S.LST_NME, IP_ID_P_S.NME_SFX, IP_ID_P_S.TAX_ID, IP_ID_P_S.BRTH_DTE, IP_ID_P_S.HOME_PHNBR, IP_ID_P_S.business_phnbr, IP_ID_P_S.PRMRY_EMAIL_ADDR, IP_ID_P_S.gndr, IP_ID_P_S.FAX_PHNBR, 11060_ip.ISS_ID_TYP_VAL, 11060_ip.ISS_ID_VAL, 11060_ip.ISS_BY, 11060_ip.EXP_DTE, IP_ID_P_S.IP_ROLE_STRT_DTE_PRIMARY, IP_ID_P_S.VIP_TYP_VAL, IP_ID_P_S.NME_LNE, IP_ID_P_S.DOC_DLVRY_PREF, IP_ID_P_S.DEST_LNE_TXT1, IP_ID_P_S.DEST_LNE_TXT2, IP_ID_P_S.DEST_LNE_TXT3, IP_ID_P_S.LOC_CITY, IP_ID_P_S.LOC_STATE, IP_ID_P_S.LOC_PSTL_CODE, IP_ID_P_S.PSTL_ADDR_FRMT_NME, IP_ID_P_S.LOC_CNTRY, IP_ID_P_S.RSDNC_CTRY_CDE from ( select EC_IP_ID, AR_ID, IP_RLT_TYP, ar_id_item, IP_ID_ITEM_RECEIVER, RLT_CDE, max(COMM_PREF_TYP_VAL_P) as COMM_PREF_TYP_VAL_P, max(COMM_PREF_TYP_VAL_A) as COMM_PREF_TYP_VAL_A from ( SELECT if( REC_11410.COMM_PREF_TYP_VAL = 'Privacy Notice' and REC_11410.COMM_PREF_STAT = 'Opt In', 1, 0 ) COMM_PREF_TYP_VAL_P, if( REC_11410.COMM_PREF_TYP_VAL = 'ADA Large Print' and REC_11410.COMM_PREF_STAT = 'Opt In', 1, 0 ) COMM_PREF_TYP_VAL_A, EC_11900.EC_IP_ID, EC_11900.AR_ID, EC_11900.IP_RLT_TYP, EC_11900.ar_id_item, EC_11900.IP_ID_ITEM_RECEIVER, EC_11900.RLT_CDE, ROW_NUMBER() OVER ( PARTITION BY EC_11900.AR_ID_ITEM, EC_11900.IP_ID_ITEM_RECEIVER, EC_11900.IP_RLT_TYP, EC_11900.EC_IP_ID, REC_11410.COMM_PREF_TYP_VAL, REC_11410.COMM_PREF_STAT ORDER BY REC_11410.FULL_DATE DESC ) RNK FROM ( select distinct drv1.ar_id_item, drv1.IP_ID_ITEM_RECEIVER, EC_11900_i1.AR_ID, EC_11900_i1.full_date, EC_11900_i1.IP_RLT_TYP, EC_11900_i1.EC_IP_ID, EC_11900_i1.RLT_CDE from ( select distinct ar_id_item, IP_ID_ITEM_RECEIVER from DRIVING_TABLE ) drv1 INNER JOIN ( SELECT distinct AR_ID, RLT_CDE, IP_RLT_TYP, EC_IP_ID, full_date, actn_ind, ROW_NUMBER() OVER ( PARTITION by AR_ID, RLT_CDE, IP_RLT_TYP, EC_IP_ID order by full_date desc ) RNO FROM uat5201_raca21.TB_11900_IP_AR_RLTNP_EC WHERE FULL_DATE <= '20250728' ) EC_11900_i1 ON drv1.AR_ID_ITEM = EC_11900_i1.AR_ID AND EC_11900_i1.actn_ind <> 'Delete' AND EC_11900_i1.RNO = 1 ) EC_11900 Left Outer Join uat5201_raca21.TB_11410_IP_CMMCN_PREF_TYP_EC REC_11410 ON REC_11410.EC_IP_ID = EC_11900.EC_IP_ID AND REC_11410.FULL_DATE <= EC_11900.full_date AND REC_11410.actn_ind <> 'Delete' AND ( REC_11410.COMM_PREF_TYP_VAL = 'Privacy Notice' or REC_11410.COMM_PREF_TYP_VAL = 'ADA Large Print' ) and REC_11410.COMM_PREF_STAT = 'Opt In' ) tmp where RNK = 1 Group by ar_id_item, IP_ID_ITEM_RECEIVER, EC_IP_ID, AR_ID, IP_RLT_TYP, RLT_CDE ) tm Left Outer Join uat5201_raca21.TB_CUST_MSTR_IP IP_ID_P_S ON IP_ID_P_S.EC_IP_ID = tm.EC_IP_ID Left Outer Join ( select EC_IP_ID, ISS_ID_TYP_VAL, ISS_ID_VAL, ISS_BY, EXP_DTE, full_date, ROW_NUMBER() OVER ( PARTITION by ISS_ID_TYP_VAL, ISS_ID_VAL, ISS_BY, EXP_DTE order by full_date desc ) RNO from uat5201_raca21.tb_11060_ip_iss_id_ec WHERE FULL_DATE <= '20250728' ) 11060_ip ON 11060_ip.EC_IP_ID = tm.EC_IP_ID AND 11060_ip.RNO = 1 ), AR_ADDTL_DP_RD AS ( select a.ar_id_item, a.IP_ID_ITEM_RECEIVER, a.IRA_ar_id_item, collect_list(a.group_map[ 'Curr' ]) [0] as Curr, collect_list(a.group_map[ 'APY' ]) [0] as APY, collect_list(a.group_map[ 'CalType' ]) [0] as CalType, collect_list(a.group_map[ 'BlendedAPY' ]) [0] as BlendedAPY, collect_list( a.group_map[ 'CheckImageDisposition' ] ) [0] as CheckImageDisposition from ( SELECT drv9.ar_id_item, drv9.IP_ID_ITEM_RECEIVER, drv9.IRA_ar_id_item, ADDTL1.aadr_ar_type, ADDTL1.AADR_AR_TYPE_VALUE, map( ADDTL1.aadr_ar_type, ADDTL1.aadr_ar_type_value ) as group_map, row_number() over ( Partition by drv9.IRA_ar_id_item, drv9.IP_ID_ITEM_RECEIVER ORDER BY ADDTL1.bkng_ts DESC ) AS RN FROM DRIVING_TABLE drv9 inner join uat5201_raca21.TB_AR_ADDTL_DP_RD ADDTL1 on ADDTL1.ar_id_item = drv9.IRA_ar_id_item and ( ( ADDTL1.aadr_ar_type = 'CalType' and ADDTL1.aadr_ar_type_value in ('Flat', 'Tier') ) or ( ADDTL1.aadr_ar_type = 'BlendedAPY' and ADDTL1.aadr_ar_type_value in ('True') ) or (ADDTL1.aadr_ar_type = 'Curr') or (ADDTL1.aadr_ar_type = 'APY') or ( ADDTL1.aadr_ar_type = 'CheckImageDisposition' ) ) ) a group by a.ar_id_item, a.IP_ID_ITEM_RECEIVER, a.IRA_ar_id_item ), 301_balances AS ( SELECT distinct drv11.IRA_ar_id_item, dep_snap.RUNNG_BAL, drv11.ar_id_item, drv11.IP_ID_ITEM_RECEIVER, dep_snap.ldgr_bal, dep_snap.avail_bal, dep_snap.AVAIL_BAL_WO_OD, dep_snap.clctd_bal, dep_snap.hld_bal, dep_snap.FULL_DATE, cast(dep_snap.FULL_DATE_TXT as date) as FULL_DATE_TXT, dep_snap.POS_CLCTD_BAL, dep_snap.INTRST_BASIS_POS_CLCTD FROM DRIVING_TABLE drv11 INNER JOIN uat5201_raca21.rt_ar_dly_bal_dp_rd dep_snap ON dep_snap.ar_id_item = drv11.IRA_ar_id_item WHERE ( dep_snap.FULL_DATE = cast( replace( drv11.prvs_stmn_period_end, '-', '' ) as int ) or dep_snap.FULL_DATE = cast( replace(drv11.stmn_period_end, '-', '') as int ) ) ), apd_ar_bal_period AS ( SELECT bal_period.ar_id_item, bal_period.FULL_DATE, bal_period.baltt_code, bal_period.aabpdp_amt, bal_period.AABPDP_AVG_AMT, bal_period.abpt_value, cast( bal_period.aabps_end_date as date ) as aabps_end_date, cast( bal_period.aabpdp_batch_date as date ) as aabpdp_batch_date, bal_period.aabpdp_batch_ts, case when bal_period.baltt_code in ( 'LedgerBalance', 'PositiveCollectedBalance', 'IntBasisPositiveCollectedBal' ) then map( bal_period.baltt_code, bal_period.AABPDP_AVG_AMT ) else map( bal_period.baltt_code, bal_period.aabpdp_amt ) end as group_map FROM uat5201_raca21.tb_apd_ar_bal_period_dp_rd bal_period WHERE FULL_DATE <= '20250728' and ( bal_period.abpt_value = 'Statement' OR bal_period.abpt_value = 'Yearly' ) and bal_period.baltt_code IN( 'OverdraftFeeCharged', 'ReturnItemFeeBalance', 'ACHReturnFeeCharged', 'ACHOrgntdReturnFeeBalance', 'ACHReturnFeeRefundBalance', 'ACHOrgntdReturnFeeRefundBalance', 'ACHDeclineFeeBalance', 'ACHReturnFeeBalance', 'ACHFederalBenefit', 'BillPaymentFeeBalance', 'BillPaymentFeeRefundBalance', 'RemoteDepositFeeBalance', 'RemoteDepositCheckFeeRefundBal', 'FeeWaived', 'FeeDiscounted', 'FeeReversed', 'ACHDeclineFeeRefundBalance', 'FederalTaxPaid', 'EarlyWithdrawalPenaltyCharged', 'LedgerBalance', 'InterestPaidBalance', 'CustGoodwillIntPaymentBal', 'InterestAndIncentivePaidBalance', 'CustIncentiveIntPaymentBal', 'InterestAccruedBalance', 'PositiveCollectedBalance', 'IntBasisPositiveCollectedBal', 'InterestEarnedBalance' ) ), 301_STMT_curr_period as( SELECT ar_id_item, IRA_ar_id_item, IP_ID_ITEM_RECEIVER, collect_list(a.group_map[ 'LedgerBalance' ]) [0] as LedgerBalance, collect_list( a.group_map[ 'OverdraftFeeCharged' ] ) [0] as OverdraftFeeCharged, collect_list( a.group_map[ 'ACHReturnFeeBalance' ] ) [0] as ACHReturnFeeBalance, collect_list( a.group_map[ 'ACHDeclineFeeBalance' ] ) [0] as ACHDeclineFeeBalance, collect_list( a.group_map[ 'ACHFederalBenefit' ] ) [0] as ACHFederalBenefit, collect_list( a.group_map[ 'ACHReturnFeeRefundBalance' ] ) [0] as ACHReturnFeeRefundBalance, collect_list( a.group_map[ 'ACHOrgntdReturnFeeBalance' ] ) [0] as ACHOrgntdReturnFeeBalance, collect_list( a.group_map[ 'ACHOrgntdReturnFeeRefundBalance' ] ) [0] as ACHOrgntdReturnFeeRefundBalance, collect_list( a.group_map[ 'BillPaymentFeeRefundBalance' ] ) [0] as BillPaymentFeeRefundBalance, collect_list( a.group_map[ 'BillPaymentFeeBalance' ] ) [0] as BillPaymentFeeBalance, collect_list( a.group_map[ 'RemoteDepositFeeBalance' ] ) [0] as RemoteDepositFeeBalance, collect_list( a.group_map[ 'RemoteDepositCheckFeeRefundBal' ] ) [0] as RemoteDepositCheckFeeRefundBal, collect_list(a.group_map[ 'FeeWaived' ]) [0] as FeeWaived, collect_list(a.group_map[ 'FeeDiscounted' ]) [0] as FeeDiscounted, collect_list(a.group_map[ 'FeeReversed' ]) [0] as FeeReversed, collect_list( a.group_map[ 'InterestAccruedBalance' ] ) [0] as InterestAccruedBalance, collect_list( a.group_map[ 'InterestPaidBalance' ] ) [0] as InterestPaidBalance, collect_list( a.group_map[ 'CustGoodwillIntPaymentBal' ] ) [0] as CustGoodwillIntPaymentBal, collect_list( a.group_map[ 'InterestAndIncentivePaidBalance' ] ) [0] as InterestAndIncentivePaidBalance, collect_list( a.group_map[ 'PositiveCollectedBalance' ] ) [0] as PositiveCollectedBalance, collect_list( a.group_map[ 'IntBasisPositiveCollectedBal' ] ) [0] as IntBasisPositiveCollectedBal, collect_list( a.group_map[ 'ReturnItemFeeBalance' ] ) [0] as ReturnItemFeeBalance, collect_list( a.group_map[ 'InterestEarnedBalance' ] ) [0] as InterestEarnedBalance FROM ( SELECT drv11.ar_id_item, drv11.IRA_ar_id_item, drv11.IP_ID_ITEM_RECEIVER, bal_period_CURR.baltt_code, bal_period_CURR.aabpdp_amt, bal_period_CURR.AABPDP_AVG_AMT, bal_period_CURR.aabpdp_batch_date, drv11.IRA_APADP_CLOSE_DATE, bal_period_CURR.group_map, Row_number() OVER( partition BY drv11.ar_id_item, drv11.IRA_ar_id_item, drv11.IP_ID_ITEM_RECEIVER, bal_period_CURR.baltt_code ORDER BY bal_period_CURR.aabpdp_batch_date desc, bal_period_CURR.aabpdp_batch_ts DESC ) rw_nbr FROM apd_ar_bal_period bal_period_CURR INNER JOIN DRIVING_TABLE drv11 ON drv11.IRA_ar_id_item = bal_period_CURR.ar_id_item and bal_period_CURR.aabpdp_batch_date between drv11.stmn_period_start and drv11.stmn_period_end AND bal_period_CURR.aabps_end_date = drv11.stmn_period_end and bal_period_CURR.abpt_value = 'Statement' and bal_period_CURR.baltt_code IN( 'OverdraftFeeCharged', 'ReturnItemFeeBalance', 'ACHOrgntdReturnFeeBalance', 'ACHReturnFeeRefundBalance', 'ACHOrgntdReturnFeeRefundBalance', 'ACHDeclineFeeBalance', 'ACHReturnFeeBalance', 'ACHFederalBenefit', 'BillPaymentFeeBalance', 'BillPaymentFeeRefundBalance', 'RemoteDepositFeeBalance', 'RemoteDepositCheckFeeRefundBal', 'FeeWaived', 'FeeDiscounted', 'FeeReversed', 'LedgerBalance', 'InterestPaidBalance', 'CustGoodwillIntPaymentBal', 'InterestAndIncentivePaidBalance', 'InterestAccruedBalance', 'PositiveCollectedBalance', 'IntBasisPositiveCollectedBal', 'InterestEarnedBalance' ) ) A WHERE rw_nbr = 1 group by ar_id_item, IRA_ar_id_item, IP_ID_ITEM_RECEIVER ), 301_STMT_prior_period as ( SELECT ar_id_item, IRA_ar_id_item, IP_ID_ITEM_RECEIVER, collect_list(a.group_map[ 'LedgerBalance' ]) [0] as LedgerBalance, collect_list( a.group_map[ 'OverdraftFeeCharged' ] ) [0] as OverdraftFeeCharged, collect_list( a.group_map[ 'ACHReturnFeeCharged' ] ) [0] as ACHReturnFeeCharged, collect_list( a.group_map[ 'ACHOrgntdReturnFeeBalance' ] ) [0] as ACHOrgntdReturnFeeBalance, collect_list(a.group_map[ 'FeeWaived' ]) [0] as FeeWaived, collect_list(a.group_map[ 'FeeDiscounted' ]) [0] as FeeDiscounted, collect_list(a.group_map[ 'FeeReversed' ]) [0] as FeeReversed, collect_list( a.group_map[ 'CustGoodwillIntPaymentBal' ] ) [0] as CustGoodwillIntPaymentBal, collect_list( a.group_map[ 'CustIncentiveIntPaymentBal' ] ) [0] as CustIncentiveIntPaymentBal, collect_list( a.group_map[ 'ReturnItemFeeBalance' ] ) [0] as ReturnItemFeeBalance FROM ( SELECT drv11.ar_id_item, drv11.IRA_ar_id_item, drv11.IP_ID_ITEM_RECEIVER, bal_period_PRIOR.baltt_code, bal_period_PRIOR.aabpdp_amt, bal_period_PRIOR.AABPDP_AVG_AMT, bal_period_PRIOR.aabpdp_batch_date, drv11.IRA_APADP_CLOSE_DATE, bal_period_PRIOR.group_map, Row_number() OVER( partition BY drv11.ar_id_item, drv11.IRA_ar_id_item, drv11.IP_ID_ITEM_RECEIVER, bal_period_PRIOR.baltt_code ORDER BY bal_period_PRIOR.aabpdp_batch_date desc, bal_period_PRIOR.aabpdp_batch_ts DESC ) rw_nbr FROM apd_ar_bal_period bal_period_PRIOR INNER JOIN DRIVING_TABLE drv11 ON drv11.IRA_ar_id_item = bal_period_PRIOR.ar_id_item AND bal_period_PRIOR.aabpdp_batch_date <= drv11.stmn_period_start AND bal_period_PRIOR.aabps_end_date = drv11.prvs_stmn_period_start and bal_period_PRIOR.abpt_value = 'Statement' and bal_period_PRIOR.baltt_code IN( 'LedgerBalance', 'OverdraftFeeCharged', 'ACHReturnFeeCharged', 'ACHOrgntdReturnFeeBalance', 'FeeWaived', 'FeeDiscounted', 'FeeReversed', 'CustGoodwillIntPaymentBal', 'CustIncentiveIntPaymentBal', 'ReturnItemFeeBalance' ) ) A WHERE rw_nbr = 1 group by ar_id_item, IRA_ar_id_item, IP_ID_ITEM_RECEIVER ), 301_yr_fld_cur as ( SELECT ar_id_item, IRA_ar_id_item, IP_ID_ITEM_RECEIVER, collect_list( a.group_map[ 'InterestPaidBalance' ] ) [0] as InterestPaidBalance, collect_list(a.group_map[ 'FederalTaxPaid' ]) [0] as FederalTaxPaid, collect_list( a.group_map[ 'EarlyWithdrawalPenaltyCharged' ] ) [0] as EarlyWithdrawalPenaltyCharged, collect_list( a.group_map[ 'OverdraftFeeCharged' ] ) [0] as OverdraftFeeCharged, collect_list( a.group_map[ 'ReturnItemFeeBalance' ] ) [0] as ReturnItemFeeBalance, collect_list( a.group_map[ 'ACHOrgntdReturnFeeRefundBalance' ] ) [0] as ACHOrgntdReturnFeeRefundBalance, collect_list( a.group_map[ 'ACHReturnFeeBalance' ] ) [0] as ACHReturnFeeBalance, collect_list( a.group_map[ 'ACHReturnFeeRefundBalance' ] ) [0] as ACHReturnFeeRefundBalance, collect_list( a.group_map[ 'BillPaymentFeeBalance' ] ) [0] as BillPaymentFeeBalance, collect_list( a.group_map[ 'BillPaymentFeeRefundBalance' ] ) [0] as BillPaymentFeeRefundBalance, collect_list( a.group_map[ 'RemoteDepositFeeBalance' ] ) [0] as RemoteDepositFeeBalance, collect_list( a.group_map[ 'RemoteDepositCheckFeeRefundBal' ] ) [0] as RemoteDepositCheckFeeRefundBal, collect_list(a.group_map[ 'FeeWaived' ]) [0] as FeeWaived, collect_list(a.group_map[ 'FeeDiscounted' ]) [0] as FeeDiscounted, collect_list(a.group_map[ 'FeeReversed' ]) [0] as FeeReversed, collect_list( a.group_map[ 'CustGoodwillIntPaymentBal' ] ) [0] as CustGoodwillIntPaymentBal, collect_list( a.group_map[ 'CustIncentiveIntPaymentBal' ] ) [0] as CustIncentiveIntPaymentBal, collect_list( a.group_map[ 'InterestAndIncentivePaidBalance' ] ) [0] as InterestAndIncentivePaidBalance FROM ( SELECT drv11.ar_id_item, drv11.IRA_ar_id_item, drv11.IP_ID_ITEM_RECEIVER, bal_period_CUR_YR.baltt_code, bal_period_CUR_YR.aabpdp_amt, bal_period_CUR_YR.AABPDP_AVG_AMT, bal_period_CUR_YR.aabpdp_batch_date, drv11.IRA_APADP_CLOSE_DATE, bal_period_CUR_YR.group_map, Row_number() OVER( partition BY drv11.ar_id_item, drv11.IRA_ar_id_item, drv11.IP_ID_ITEM_RECEIVER, bal_period_CUR_YR.baltt_code ORDER BY bal_period_CUR_YR.aabpdp_batch_date desc, bal_period_CUR_YR.aabpdp_batch_ts DESC ) rw_nbr FROM apd_ar_bal_period bal_period_CUR_YR INNER JOIN DRIVING_TABLE drv11 ON drv11.IRA_ar_id_item = bal_period_CUR_YR.ar_id_item and bal_period_CUR_YR.aabpdp_batch_date <= drv11.stmn_period_end and bal_period_CUR_YR.abpt_value = 'Yearly' AND ( ( drv11.APALT_VALUE <> 'Settled' and bal_period_CUR_YR.aabps_end_date = drv11.curr_yr_end ) OR ( drv11.APALT_VALUE = 'Settled' and bal_period_CUR_YR.aabps_end_date = drv11.curr_yr_end ) ) and bal_period_CUR_YR.baltt_code IN( 'InterestPaidBalance', 'FederalTaxPaid', 'EarlyWithdrawalPenaltyCharged', 'OverdraftFeeCharged', 'ReturnItemFeeBalance', 'ACHOrgntdReturnFeeRefundBalance', 'ACHReturnFeeBalance', 'ACHReturnFeeRefundBalance', 'BillPaymentFeeBalance', 'BillPaymentFeeRefundBalance', 'RemoteDepositFeeBalance', 'RemoteDepositCheckFeeRefundBal', 'FeeWaived', 'FeeDiscounted', 'FeeReversed', 'CustGoodwillIntPaymentBal', 'CustIncentiveIntPaymentBal', 'InterestAndIncentivePaidBalance' ) ) A WHERE rw_nbr = 1 group by ar_id_item, IRA_ar_id_item, IP_ID_ITEM_RECEIVER ), 301_yr_fld_prv as( SELECT ar_id_item, IRA_ar_id_item, IP_ID_ITEM_RECEIVER, collect_list( a.group_map[ 'InterestPaidBalance' ] ) [0] as InterestPaidBalance, collect_list(a.group_map[ 'FederalTaxPaid' ]) [0] as FederalTaxPaid, collect_list( a.group_map[ 'EarlyWithdrawalPenaltyCharged' ] ) [0] as EarlyWithdrawalPenaltyCharged, collect_list( a.group_map[ 'OverdraftFeeCharged' ] ) [0] as OverdraftFeeCharged, collect_list( a.group_map[ 'ACHReturnFeeCharged' ] ) [0] as ACHReturnFeeCharged, collect_list( a.group_map[ 'ACHOrgntdReturnFeeBalance' ] ) [0] as ACHOrgntdReturnFeeBalance, collect_list(a.group_map[ 'FeeWaived' ]) [0] as FeeWaived, collect_list(a.group_map[ 'FeeDiscounted' ]) [0] as FeeDiscounted, collect_list(a.group_map[ 'FeeReversed' ]) [0] as FeeReversed, collect_list( a.group_map[ 'ReturnItemFeeBalance' ] ) [0] as ReturnItemFeeBalance FROM ( SELECT drv11.ar_id_item, drv11.IRA_ar_id_item, drv11.IP_ID_ITEM_RECEIVER, bal_period_PRV_YR.baltt_code, bal_period_PRV_YR.aabpdp_amt, bal_period_PRV_YR.AABPDP_AVG_AMT, bal_period_PRV_YR.group_map, Row_number() OVER( partition BY drv11.ar_id_item, drv11.IRA_ar_id_item, drv11.IP_ID_ITEM_RECEIVER, bal_period_PRV_YR.baltt_code ORDER BY bal_period_PRV_YR.aabpdp_batch_date desc, bal_period_PRV_YR.aabpdp_batch_ts DESC ) rw_nbr FROM apd_ar_bal_period bal_period_PRV_YR INNER JOIN DRIVING_TABLE drv11 ON drv11.IRA_ar_id_item = bal_period_PRV_YR.ar_id_item and bal_period_PRV_YR.aabpdp_batch_date <= drv11.stmn_period_end and bal_period_PRV_YR.abpt_value = 'Yearly' AND bal_period_PRV_YR.aabps_end_date = drv11.prvs_yr_end and bal_period_PRV_YR.baltt_code IN( 'InterestPaidBalance', 'FederalTaxPaid', 'EarlyWithdrawalPenaltyCharged', 'OverdraftFeeCharged', 'ACHReturnFeeCharged', 'ACHOrgntdReturnFeeBalance', 'FeeWaived', 'FeeDiscounted', 'FeeReversed', 'ReturnItemFeeBalance' ) ) A WHERE rw_nbr = 1 group by ar_id_item, IRA_ar_id_item, IP_ID_ITEM_RECEIVER ), 301_final as ( select driving_tbl.ar_id_item, driving_tbl.IRA_ar_id_item, driving_tbl.IP_ID_ITEM_RECEIVER, 301_yr_fld_cur.InterestPaidBalance as Statement_Int_Div_Paid_Year_to_Date, 301_yr_fld_prv.InterestPaidBalance as Int_Div_Paid_Prior_Financial_Year, 301_yr_fld_cur.FederalTaxPaid as Statement_Backup_Withhold_Year, 301_yr_fld_prv.FederalTaxPaid as Backup_Withholding_Prior_Year, 301_yr_fld_cur.EarlyWithdrawalPenaltyCharged as Statement_Penalty_Year_to_Date, 301_yr_fld_prv.EarlyWithdrawalPenaltyCharged as Penalty_Prior_Financial_Year, curr.OverdraftFeeCharged as Total_Overdrawn_Fees_Current_Statement_period, prev.OverdraftFeeCharged as Total_Overdrawn_Fees_Prior_Statement_period, 301_yr_fld_cur.OverdraftFeeCharged as Total_Overdrawn_Fees_YTD, 301_yr_fld_prv.OverdraftFeeCharged as Total_Overdrawn_Fees_Prior_Year, curr.ReturnItemFeeBalance as Total_Returned_Item_Fees_Current_Statement_period, prev.ReturnItemFeeBalance as Total_Returned_Item_Fees_Prior_Statement_period, 301_yr_fld_cur.ReturnItemFeeBalance as Total_Returned_Item_Fees_YTD, 301_yr_fld_prv.ReturnItemFeeBalance as Total_Returned_Item_Fees_Prior_Year, curr.ACHOrgntdReturnFeeRefundBalance as Total_Refunded_ACH_Return_Fees_This_Period, 301_yr_fld_cur.ACHOrgntdReturnFeeRefundBalance as Total_Refunded_ACH_Return_Fees_YTD, nvl(curr.ACHDeclineFeeBalance, 0)+ nvl(curr.ACHReturnFeeBalance, 0) as Total_ACH_Decline_Fees_This_Period, 301_yr_fld_cur.ACHReturnFeeBalance as Total_ACH_Decline_Fees_YTD, 301_yr_fld_cur.ACHReturnFeeRefundBalance as Total_Refunded_ACH_Decline_Fees_This_Period, 301_yr_fld_cur.ACHReturnFeeRefundBalance as Total_Refunded_ACH_Decline_Fees_YTD, curr.BillPaymentFeeBalance as Total_Bill_Payment_Fees_This_Period, 301_yr_fld_cur.BillPaymentFeeBalance as Total_Bill_Payment_Fees_YTD, curr.BillPaymentFeeRefundBalance as Total_Refunded_Bill_Payment_Fees_This_Period, 301_yr_fld_cur.BillPaymentFeeRefundBalance as Total_Refunded_Bill_Payment_Fees_YTD, curr.RemoteDepositFeeBalance as Total_RDC_Fees_This_Period, 301_yr_fld_cur.RemoteDepositFeeBalance as Total_RDC_Fees_YTD, curr.RemoteDepositCheckFeeRefundBal as Total_Refunded_RDC_Fees_This_Period, 301_yr_fld_cur.RemoteDepositCheckFeeRefundBal as Total_Refunded_RDC_Fees_YTD, curr.FeeWaived as Total_Fees_Waived_Current_statement_period, prev.FeeWaived as Total_Fees_Waived_Prior_statement_period, 301_yr_fld_cur.FeeWaived as Total_Fees_Waived_YTD, 301_yr_fld_prv.FeeWaived as Total_Fees_Waived_Prior_Year, curr.FeeDiscounted as Total_Fees_Discounted_Current_statement_period, prev.FeeDiscounted as Total_Fees_Discounted_Prior_statement_period, 301_yr_fld_cur.FeeDiscounted as Total_Fees_Discounted_YTD, 301_yr_fld_prv.FeeDiscounted as Total_Fees_Discounted_Prior_Year, curr.FeeReversed as Total_Fees_Reversed_Current_statement_period, prev.FeeReversed as Total_Fees_Reversed_Prior_statement_period, 301_yr_fld_cur.FeeReversed as Total_Fees_Reversed_YTD, 301_yr_fld_prv.FeeReversed as Total_Fees_Revered_Prior_Year, curr.InterestPaidBalance as 700_Interest_Paid, curr.InterestAccruedBalance as 700_Interest_Accrued, ( nvl(curr.BillPaymentFeeBalance, 0)+ nvl(curr.RemoteDepositFeeBalance, 0)+ nvl(curr.ACHDeclineFeeBalance, 0)+ nvl(curr.ACHReturnFeeBalance, 0) ) as 700_Charges, curr.LedgerBalance as AABPDP_AVG_AMT, coalesce ( prev.CustGoodwillIntPaymentBal, prev.CustIncentiveIntPaymentBal, 0 ) as Bonus_Goodwil_Incentive_paid_during_statement_period, coalesce ( 301_yr_fld_cur.CustGoodwillIntPaymentBal, 301_yr_fld_cur.CustIncentiveIntPaymentBal, 0 ) as Bonus_Goodwil_Incentive_paid_YTD, curr.InterestAndIncentivePaidBalance as Interest_and_Incentive_Paid_during_Statement_Period, 301_yr_fld_cur.InterestAndIncentivePaidBalance as Interest_and_Incentive_Paid_YTD, curr.PositiveCollectedBalance as 700_Average_Statement_Positive_Collected_Balance, curr.IntBasisPositiveCollectedBal as 700_Average_Statement_Interest_Basis_Positive_Collected_Bal, curr.InterestEarnedBalance from DRIVING_TABLE driving_tbl left join 301_STMT_curr_period curr on driving_tbl.ar_id_item = curr.ar_id_item and driving_tbl.IRA_ar_id_item = curr.IRA_ar_id_item and curr.IP_ID_ITEM_RECEIVER = driving_tbl.IP_ID_ITEM_RECEIVER left join 301_STMT_prior_period prev on prev.ar_id_item = driving_tbl.ar_id_item AND driving_tbl.IRA_ar_id_item = prev.IRA_ar_id_item and prev.IP_ID_ITEM_RECEIVER = driving_tbl.IP_ID_ITEM_RECEIVER left join 301_yr_fld_cur on 301_yr_fld_cur.ar_id_item = driving_tbl.ar_id_item and driving_tbl.IRA_ar_id_item = 301_yr_fld_cur.IRA_ar_id_item and 301_yr_fld_cur.IP_ID_ITEM_RECEIVER = driving_tbl.IP_ID_ITEM_RECEIVER left join 301_yr_fld_prv on 301_yr_fld_prv.ar_id_item = driving_tbl.ar_id_item and driving_tbl.IRA_ar_id_item = 301_yr_fld_prv.IRA_ar_id_item and 301_yr_fld_prv.IP_ID_ITEM_RECEIVER = driving_tbl.IP_ID_ITEM_RECEIVER ) SELECT distinct DRIVING_TABLE.AR_ID_ITEM, DRIVING_TABLE.IP_ID_ITEM_RECEIVER, DRIVING_TABLE.LDBID, DRIVING_TABLE.FULL_DATE_TXT, DRIVING_TABLE.FULL_DATE, DRIVING_TABLE.ARSDP_BATCH_DATE, DRIVING_TABLE.STMN_GRP_ID, DRIVING_TABLE.ARSDP_ADDTL_INFO, DRIVING_TABLE.AR_GRP_ROLE, DRIVING_TABLE.stmn_period_start, DRIVING_TABLE.stmn_period_end, DRIVING_TABLE.STMN_OPNG_BAL, DRIVING_TABLE.STMN_CLSG_BAL, DRIVING_TABLE.STMN_DR_AMT, DRIVING_TABLE.STMN_CR_AMT, DRIVING_TABLE.STMN_PSTG_DR_CNT, DRIVING_TABLE.STMN_PSTG_CR_CNT, DRIVING_TABLE.ARSDP_INTRST_EARNED, DRIVING_TABLE.ARSDP_APYE, DRIVING_TABLE.STMNT_TYPE, DRIVING_TABLE.stmn_comm_mode, DRIVING_TABLE.STMN_NTFN_MODE, CUS_PRI_SEC.EC_IP_ID, CUS_PRI_SEC.NME_PRFX, CUS_PRI_SEC.FRST_NME, CUS_PRI_SEC.MID_NME, CUS_PRI_SEC.LST_NME, CUS_PRI_SEC.NME_SFX, CUS_PRI_SEC.TAX_ID, CUS_PRI_SEC.BRTH_DTE, CUS_PRI_SEC.HOME_PHNBR, CUS_PRI_SEC.business_phnbr, CUS_PRI_SEC.PRMRY_EMAIL_ADDR, CUS_PRI_SEC.gndr, CUS_PRI_SEC.FAX_PHNBR, CUS_PRI_SEC.ISS_ID_TYP_VAL, CUS_PRI_SEC.ISS_ID_VAL, CUS_PRI_SEC.ISS_BY, CUS_PRI_SEC.EXP_DTE, CUS_PRI_SEC.IP_ROLE_STRT_DTE_PRIMARY, CUS_PRI_SEC.VIP_TYP_VAL, CUS_PRI_SEC.NME_LNE, CUS_PRI_SEC.COMM_PREF_TYP_VAL_P, CUS_PRI_SEC.DOC_DLVRY_PREF, CUS_PRI_SEC.COMM_PREF_TYP_VAL_A, CUS_PRI_SEC.IP_RLT_TYP, DRIVING_TABLE.AR_ID_ITEM_ORG_UNIT, DRIVING_TABLE.APAT_VALUE_TITLE1, DRIVING_TABLE.RET_ACCT_PLN_NBR, DRIVING_TABLE.RET_ACCT_PLN_TYP, DRIVING_TABLE.CRNCY_ISO4217_VAL_BCS, DRIVING_TABLE.RTD_MTRTY_TERM_PERIOD, DRIVING_TABLE.RTD_MTRTY_DATE, DRIVING_TABLE.RTD_GRC_VAL, DRIVING_TABLE.RTD_GRC_TYPE, DRIVING_TABLE.RTD_MTRTY_TERM_FRQNCY_CODE, DRIVING_TABLE.RTD_CNTRCTL_AMT, DRIVING_TABLE.enart_value, DRIVING_TABLE.apa_frst_efctv_dt, DRIVING_TABLE.apa_efctv_date, DRIVING_TABLE.APA_NAME_MIX, DRIVING_TABLE.APD_NAME, DRIVING_TABLE.APD_CODE, DRIVING_TABLE.RET_ACCT_IND, DRIVING_TABLE.RTD_CRRNT_MTRTY_AMT, DRIVING_TABLE.PDGR_VALUE, 'HIST_CMN' AS pstg_bkng_date, 'HIST_CMN' AS cht_code, 'HIST_CMN' AS CSI_CODE_ADDTL, 'HIST_CMN' AS PT_VALUE, 'HIST_CMN' AS pstg_amt, 'HIST_CMN' AS trnt_value, 'HIST_CMN' AS pstg_txt_tkn, 'HIST_CMN' AS pstg_txt, 'HIST_CMN' AS pstg_efctv_time, 'HIST_CMN' AS adt_pstg_host_ts, 'HIST_CMN' AS pstg_idfr, 'HIST_CMN' AS pstg_pymnt_media_type, 'HIST_CMN' AS PSTGDP_REMARKS, 'HIST_CMN' AS PSTDR_ORIG_CHNL_ID, 'HIST_CMN' AS STLM_CODE, 'HIST_CMN' AS STD_ENTRY_CL_CODE, 'HIST_CMN' AS CO_NAME, 'HIST_CMN' AS CO_ENTRY_DESC, 'HIST_CMN' AS ORGNTN_DFIL_ID, 'HIST_CMN' AS PSTDR_STEXT_RFRNC_ID_TYP, 'HIST_CMN' AS PSTDR_STEXT_RFRNC_ID, 'HIST_CMN' AS ACH_INDV_ID, 'HIST_CMN' AS ACH_INDV_NAME, 'HIST_CMN' AS DSCRNY_DATA, 'HIST_CMN' AS ADD3, 'HIST_CMN' AS TRMNL_ID, 'HIST_CMN' AS TRMNL_LOC, 'HIST_CMN' AS TRMNL_CTY, 'HIST_CMN' AS TRMNL_ST, 'HIST_CMN' AS pstg_pymnt_media_rfrnc_id, 'HIST_CMN' AS CARD_ACCPT_TRMNL_ID, 'HIST_CMN' AS MRCHNT_NAME, 'HIST_CMN' AS MRCHNT_LO, 'HIST_CMN' AS pstg_ext_rfrnc_id, 'HIST_CMN' AS NET_AMT_AFT_PSTG, 'HIST_CMN' AS crncy_iso4217_val_pstg, 'HIST_CMN' AS trans_idfr, 'HIST_CMN' AS orgnl_trans_date, 'HIST_CMN' AS pstg_orgnl_amt, 'HIST_CMN' AS crncy_iso4217_val_orgnl, 'HIST_CMN' AS PSTG_EFCTV_DATE, 'HIST_CMN' AS PSTGDP_CUST_INDUCED, 'HIST_CMN' AS PSCT_VALUE, 'HIST_CMN' AS PSTG_TXT_CUST_LANG, 'HIST_CMN' AS REVRSL_REASN_CODE, 'HIST_CMN' AS LAST_DPST_DATE, 'INTEREST' AS APAID_APY, 'INTEREST' AS APAID_INTRST_PYMNT_FRQNCY_VAL, 'INTEREST' AS APAID_INTRST_PYMNT_FRQNCY_UNIT, 'INTEREST' AS APAID_ACCRL_FRQNCY_UNIT, 'INTEREST' AS APAID_ACCRL_FRQNCY_VALUE, 'INTEREST' AS APAID_BATCH_TS, 'INTEREST' AS APAID_INDEX_NAME, 'APD_AR_BAL' AS 740_APD_CODE, 'APD_AR_BAL' AS 740_ARBRT_CRRNT_END_AMT, 'APD_AR_BAL' AS 740_RCNCL_AR_ID_ITEM, 'APD_AR_BAL' AS 740_RCNCL_FULL_DATE_TXT, 'INTEREST' AS 740_NEW_INT_RATE_FULL_DATE, 'INTEREST' AS 740_INTRST_AR_ID_ITEM, 'INTEREST' AS 740_OLD_INT_RATE, 'INTEREST' AS 740_NEW_INT_RATE, 'INTEREST' AS 740_OLD_INT_RATE_FULL_DATE, final.Statement_Int_Div_Paid_Year_to_Date, final.Int_Div_Paid_Prior_Financial_Year, final.Statement_Backup_Withhold_Year, final.Backup_Withholding_Prior_Year, final.Statement_Penalty_Year_to_Date, final.Penalty_Prior_Financial_Year, final.Total_Overdrawn_Fees_Current_Statement_period, final.Total_Overdrawn_Fees_Prior_Statement_period, final.Total_Overdrawn_Fees_YTD, final.Total_Overdrawn_Fees_Prior_Year, final.Total_Returned_Item_Fees_Prior_Statement_period, final.Total_Returned_Item_Fees_YTD, final.Total_Returned_Item_Fees_Prior_Year, final.Total_Refunded_ACH_Return_Fees_This_Period, final.Total_Refunded_ACH_Return_Fees_YTD, final.Total_ACH_Decline_Fees_This_Period, final.Total_ACH_Decline_Fees_YTD, final.Total_Refunded_ACH_Decline_Fees_This_Period, final.Total_Refunded_ACH_Decline_Fees_YTD, final.Total_Bill_Payment_Fees_This_Period, final.Total_Bill_Payment_Fees_YTD, final.Total_Refunded_Bill_Payment_Fees_This_Period, final.Total_Refunded_Bill_Payment_Fees_YTD, final.Total_RDC_Fees_This_Period, final.Total_RDC_Fees_YTD, final.Total_Refunded_RDC_Fees_This_Period, final.Total_Refunded_RDC_Fees_YTD, final.Total_Fees_Waived_Current_statement_period, final.Total_Fees_Waived_Prior_statement_period, final.Total_Fees_Waived_YTD, final.Total_Fees_Waived_Prior_Year, final.Total_Fees_Discounted_Current_statement_period, final.Total_Fees_Discounted_Prior_statement_period, final.Total_Fees_Discounted_YTD, final.Total_Fees_Discounted_Prior_Year, final.Total_Fees_Reversed_Current_statement_period, final.Total_Fees_Reversed_Prior_statement_period, final.Total_Fees_Reversed_YTD, final.Total_Fees_Revered_Prior_Year, final.Total_Returned_Item_Fees_Current_Statement_period, final.AABPDP_AVG_AMT, ADDTL.CalType, ADDTL.BlendedAPY, ADDTL.Curr, ADDTL.APY, ADDTL.CheckImageDisposition, DRIVING_TABLE.IRA_ar_id_item, CUS_PRI_SEC.RLT_CDE, DRIVING_TABLE.APAID_YEAR_BASIS, DRIVING_TABLE.APAID_DAY_CNT, DRIVING_TABLE.apaid_intrst_sprd, DRIVING_TABLE.FRST_TXN_DATE, DRIVING_TABLE.rtd_last_rnwl_date, DRIVING_TABLE.rtd_prncpl_dpstn_option, DRIVING_TABLE.apadp_intrst_dpstn_code, DRIVING_TABLE.apadp_close_date, DRIVING_TABLE.APAID_CRRNT_INTRST_RATE, 'HIST_CMN' AS tet_code, 'HIST_CMN' AS PSTDR_BNK_REF_ID, 'HIST_CMN' AS ITEM_SEQ_NMBR, 'HIST_CMN' AS ptlr_text, prev_bal.ldgr_bal as prev_ldgr_bal, curr_bal.avail_bal as curr_avail_bal, curr_bal.clctd_bal as curr_clctd_bal, prev_bal.hld_bal as prev_hld_bal, prev_bal.RUNNG_BAL as prev_RUNNG_BAL, prev_bal.avail_bal AS prev_avail_bal, '' AS 300_MLNG_CDE, prev_bal.clctd_bal as prev_clctd_bal, '' AS ALT_PRFRD_PSTL_ADDR_TYP, '' AS ALT_PRFRD_PSTL_ADDR_SEQ_NBR, DRIVING_TABLE.wr_lang_pref_cde, final.700_Interest_Paid, final.700_Charges, 'INTEREST' AS 700_Starting_Interest_Rate, 'INTEREST' AS 700_Ending_Interest_Rate, 'INTEREST' AS 700_Current_Interest_Rate, DRIVING_TABLE.stmn_addtl_cnt, CUS_PRI_SEC.DEST_LNE_TXT1, CUS_PRI_SEC.DEST_LNE_TXT2, CUS_PRI_SEC.DEST_LNE_TXT3, CUS_PRI_SEC.LOC_CITY, CUS_PRI_SEC.LOC_STATE, CUS_PRI_SEC.LOC_PSTL_CODE, CUS_PRI_SEC.PSTL_ADDR_FRMT_NME, CUS_PRI_SEC.LOC_CNTRY, CUS_PRI_SEC.RSDNC_CTRY_CDE, DRIVING_TABLE.stmn_comm_mode_sec_emsg_cnt, DRIVING_TABLE.stmn_comm_mode_papr_cnt, curr_bal.AVAIL_BAL_WO_OD as curr_AVAIL_BAL_WO_OD, prev_bal.AVAIL_BAL_WO_OD AS prev_AVAIL_BAL_WO_OD, final.Bonus_Goodwil_Incentive_paid_during_statement_period AS Bonus_Goodwil_Incentive_paid_during_statement_period, final.700_Interest_Accrued, DRIVING_TABLE.APADP_CHOFF_REASN, final.Bonus_Goodwil_Incentive_paid_YTD AS Bonus_Goodwil_Incentive_paid_YTD, final.Interest_and_Incentive_Paid_during_Statement_Period AS Interest_and_Incentive_Paid_during_Statement_Period, final.Interest_and_Incentive_Paid_YTD AS Interest_and_Incentive_Paid_YTD, curr_bal.POS_CLCTD_BAL as curr_POS_CLCTD_BAL, curr_bal.INTRST_BASIS_POS_CLCTD as curr_INTRST_BASIS_POS_CLCTD, final.700_Average_Statement_Positive_Collected_Balance, final.700_Average_Statement_Interest_Basis_Positive_Collected_Bal, 'HIST_CMN' AS OD_IND, 'HIST_CMN' AS FNCL_OPRTN_TYPE, final.InterestEarnedBalance, DRIVING_TABLE.stmnt FROM DRIVING_TABLE Left Outer Join CUS_PRI_SEC On CUS_PRI_SEC.ar_id_item = DRIVING_TABLE.ar_id_item and CUS_PRI_SEC.IP_ID_ITEM_RECEIVER = DRIVING_TABLE.IP_ID_ITEM_RECEIVER LEFT OUTER JOIN AR_ADDTL_DP_RD ADDTL ON ADDTL.IRA_ar_id_item = DRIVING_TABLE.IRA_AR_ID_ITEM and ADDTL.ar_id_item = DRIVING_TABLE.AR_ID_ITEM and ADDTL.IP_ID_ITEM_RECEIVER = DRIVING_TABLE.IP_ID_ITEM_RECEIVER LEFT OUTER JOIN 301_final final ON final.IRA_AR_ID_ITEM = DRIVING_TABLE.IRA_AR_ID_ITEM and final.AR_ID_ITEM = DRIVING_TABLE.AR_ID_ITEM and final.IP_ID_ITEM_RECEIVER = DRIVING_TABLE.IP_ID_ITEM_RECEIVER LEFT OUTER JOIN 301_balances prev_bal on prev_bal.IRA_ar_id_item = DRIVING_TABLE.IRA_ar_id_item and prev_bal.ar_id_item = DRIVING_TABLE.ar_id_item and prev_bal.full_date_txt = DRIVING_TABLE.prvs_stmn_period_end and prev_bal.IP_ID_ITEM_RECEIVER = DRIVING_TABLE.IP_ID_ITEM_RECEIVER LEFT OUTER JOIN 301_balances curr_bal on curr_bal.IRA_ar_id_item = DRIVING_TABLE.IRA_ar_id_item and curr_bal.ar_id_item = DRIVING_TABLE.ar_id_item and curr_bal.full_date_txt = DRIVING_TABLE.stmn_period_end and curr_bal.IP_ID_ITEM_RECEIVER = DRIVING_TABLE.IP_ID_ITEM_RECEIVER ) RT 
hive_20250729022738_037aa2db-5c85-44b4-8fbb-b86567c2554c
2025-07-29 02 27  Executing command(queryId=hive_20250729022738_037aa2db-5c85-44b4-8fbb-b86567c2554c)  insert into uat5201_raca21.TB_cfras_stmnt_address_pref_1 select * from ( with DRIVING_TABLE as ( select distinct `dri01`.`ip_id_item_receiver`, `dri01`.`ar_id_item`, `dri01`.`ira_ar_id_item`, Replace( COALESCE(`dri01`.`stmn_ntfn_mode`, ''), ' ', '' ) stmn_ntfn_mode, `dri01`.`stmnt_type`, `dri01`.`arsdp_addtl_info`, `dri01`.`full_date_txt`, `dri01`.`full_date`, `dri01`.`apat_value_title1`, `dri01`.`ar_id_item_org_unit`, `tb_ip_id_mstr`.`brnch_id`, `tb_ip_id_mstr`.`nme_lne`, `tb_ip_id_mstr`.`dest_lne_txt1`, `tb_ip_id_mstr`.`dest_lne_txt2`, `tb_ip_id_mstr`.`dest_lne_txt3`, `tb_ip_id_mstr`.`loc_city`, `tb_ip_id_mstr`.`loc_state`, `tb_ip_id_mstr`.`loc_pstl_code`, `tb_ip_id_mstr`.`loc_cntry`, `tb_ip_id_mstr`.`pstl_addr_frmt_nme`, `tb_ip_id_mstr`.`mlng_cde`, `tb_ip_id_mstr`.`prmry_email_addr`, `tb_ip_id_mstr`.`ec_ip_id`, `tb_ip_id_mstr`.`doc_dlvry_pref`, `dri01`.`stmnt`, `dri01`.`ldbid`, `dri01`.`ar_grp_role`, `dri01`.`stmn_grp_id`, `dri01`.`ret_acct_pln_nbr`, `dri01`.`stmn_addtl_cnt`, `dri01`.`enart_value`, DRI01.stmn_comm_mode_sec_emsg_cnt, DRI01.stmn_comm_mode_papr_cnt from uat5201_raca21. `TB_CFRAS_STMNT_REC_TYPE_1` `DRI01` LEFT OUTER JOIN uat5201_raca21. `TB_CUST_MSTR_IP` `TB_IP_ID_MSTR` ON `dri01`.`ip_id_item_receiver` = `tb_ip_id_mstr`.`ec_ip_id` where DRI01.ar_id_item = DRI01.ira_ar_id_item ), DRIVING_TABLE1 as ( select distinct ar_id_item, ip_id_item_receiver, full_date_txt, full_date from DRIVING_TABLE ), stmn_ntfn as ( select DISTINCT temp.ar_id_item, temp.ip_id_item_receiver, temp.stmn_comm_mode_sec_emsg_cnt, temp.full_date, b.ntfn_mode from ( select a.ar_id_item, a.ip_id_item_receiver, a.stmn_comm_mode_sec_emsg_cnt, Case when ( stmn_comm_mode_papr_cnt > 0 and ( a.`stmn_ntfn_mode` <> '' and a.`stmn_ntfn_mode` is not null ) ) Then a.`stmn_ntfn_mode` || ',Paper' when ( stmn_comm_mode_papr_cnt > 0 and ( a.`stmn_ntfn_mode` = '' or a.`stmn_ntfn_mode` is null ) ) Then 'Paper' else a.`stmn_ntfn_mode` END as stmn_ntfn_mode, full_date from DRIVING_TABLE a ) temp lateral VIEW explode( split(temp.stmn_ntfn_mode, ',') ) b as ntfn_mode ), TXT_PH_NO as ( select dri.ar_id_item, dri.ip_id_item_receiver, dri.full_date, POC_TBL.ful_tele_nbr from stmn_ntfn dri inner join uat5201_raca21.TB_CUST_POC_DTL_IP POC_TBL on dri.ar_id_item = POC_TBL.AR_ID_ITEM and dri.ip_id_item_receiver = POC_TBL.ec_ip_id where ( POC_TBL.elctr_msg_ntfn_meth = 'Text Message' or dri.ntfn_mode = 'SMS' ) and dri.stmn_comm_mode_sec_emsg_cnt > 0 ), ELCTRN_EMAIL as ( select dri.ar_id_item, dri.ip_id_item_receiver, dri.full_date, POC_TBL.email_addr from stmn_ntfn dri inner join uat5201_raca21.TB_CUST_POC_DTL_IP POC_TBL on dri.ar_id_item = POC_TBL.AR_ID_ITEM and dri.ip_id_item_receiver = POC_TBL.ec_ip_id where ( POC_TBL.elctr_msg_ntfn_meth = 'Email' or dri.ntfn_mode = 'Email' ) and dri.stmn_comm_mode_sec_emsg_cnt > 0 ), Mail_Adrs as ( select ec_ip_id, drv200.AR_ID_ITEM, PSTL_ADDR_TYP, ENT_POC_SEQ_NBR, PRFRD_COMM_METH, ACTN_IND, PAL6_DSTN_LNE1, PAL7_DSTN_LNE2, PAL8_DSTN_LNE3, LCT1_CITY, LCT2_ST, LCT3_PSTL_CDE, pstl_addr_frmt_nme, LCT6_CNTRY, MLNG_CDE, PAL1_RCPNT_LNE1, drv200.full_date from DRIVING_TABLE1 drv200 inner join uat5201_raca21.TB_CUST_POC_DTL_IP POC_TBL on drv200.IP_ID_ITEM_RECEIVER = POC_TBL.ec_ip_id and drv200.ar_id_item = POC_TBL.AR_ID_ITEM ) select distinct `drv13`.`ar_id_item`, `drv13`.`ip_id_item_receiver`, `drv13`.`ira_ar_id_item`, '' `stmn_ntfn_mode`, `drv13`.`stmnt_type`, '' `stmn_comm_mode`, '' `arsdp_addtl_info`, `drv13`.`full_date_txt`, `drv13`.`full_date`, `drv13`.`apat_value_title1`, `drv13`.`ar_id_item_org_unit`, `drv13`.`stmnt`, `drv13`.`ldbid`, `drv13`.`ar_grp_role`, `drv13`.`stmn_grp_id`, `drv13`.`ret_acct_pln_nbr`, COALESCE( `Mail_Adrs`.`PSTL_ADDR_TYP`, '-a' ) as ALT_PRFRD_PSTL_ADDR_TYP, COALESCE( `Mail_Adrs`.`ENT_POC_SEQ_NBR`, '-1' ) as ALT_PRFRD_PSTL_ADDR_SEQ_NBR, case when drv13.stmn_comm_mode_papr_cnt > 0 then '1' when drv13.stmn_comm_mode_papr_cnt = 0 then '0' when lower(drv13.doc_dlvry_pref) in ('paper', 'paper and electronic') then '1' else '0' END as `Paper Indicator`, case when drv13.stmn_comm_mode_sec_emsg_cnt > 0 then '1' when drv13.stmn_comm_mode_sec_emsg_cnt = 0 then '0' when lower(drv13.doc_dlvry_pref) in ( 'electronic', 'paper and electronic' ) then '1' else '0' END as `Secure E - Message Indicator`, coalesce( `Mail_Adrs`.`pal6_dstn_lne1`, `Mail_Adrs_1`.`pal6_dstn_lne1` ) as `Address Line 1`, coalesce( `Mail_Adrs`.`pal7_dstn_lne2`, `Mail_Adrs_1`.`pal7_dstn_lne2` ) as `Address Line 2`, coalesce( `Mail_Adrs`.`pal8_dstn_lne3`, `Mail_Adrs_1`.`pal8_dstn_lne3` ) as `Address Line 3`, coalesce( `Mail_Adrs`.`lct1_city`, `Mail_Adrs_1`.`lct1_city` ) as `City`, coalesce( `Mail_Adrs`.`lct2_st`, `Mail_Adrs_1`.`lct2_st` ) as `State`, coalesce( `Mail_Adrs`.`lct3_pstl_cde`, `Mail_Adrs_1`.`lct3_pstl_cde` ) as `Zip Code`, coalesce( if( `Mail_Adrs`.`pstl_addr_frmt_nme` = 'US Domestic', `Mail_Adrs`.`pstl_addr_frmt_nme`, `Mail_Adrs`.`lct6_cntry` ), if( `Mail_Adrs_1`.`pstl_addr_frmt_nme` = 'US Domestic', `Mail_Adrs_1`.`pstl_addr_frmt_nme`, `Mail_Adrs_1`.`lct6_cntry` ) ) as `Country Code`, CASE WHEN `drv13`.`pstl_addr_frmt_nme` = 'US Domestic' OR `drv13`.`loc_cntry` = 'US' then '0' when ( `drv13`.`pstl_addr_frmt_nme` is null and `drv13`.`loc_cntry` is null ) then ' ' ELSE '1' END as `Non - US Country`, `drv13`.`mlng_cde` as `Customer Mail Flag`, ELCTRN_EMAIL.email_addr as `Electronic Mail TRN`, `drv13`.`brnch_id` as `Branch Office where Customer Opened account`, `drv13`.`nme_lne` as `Full Legal Name of Customer`, coalesce(TXT_PH_NO.ful_tele_nbr, '') as `ful_tele_nbr`, CASE WHEN ( drv13.stmn_comm_mode_sec_emsg_cnt > 0 and stmn_ntfn_drv.ntfn_mode = 'SMS' ) THEN 'Text' WHEN ( drv13.stmn_comm_mode_sec_emsg_cnt > 0 and stmn_ntfn_drv.ntfn_mode = 'Email' ) THEN 'Email' ELSE '' END as `secure_e_message`, coalesce( `Mail_Adrs`.`pal1_rcpnt_lne1`, `Mail_Adrs_1`.`pal1_rcpnt_lne1` ) as pal1_rcpnt_lne1, `drv13`.`stmn_addtl_cnt`, `drv13`.`enart_value`, CASE WHEN `drv13`.`stmn_addtl_cnt` > '0' THEN coalesce( `Mail_Adrs`.`pal1_rcpnt_lne1`, `Mail_Adrs_1`.`pal1_rcpnt_lne1` ) ELSE if( locate( '|', regexp_replace( `drv13`.`apat_value_title1`, '\n', '\\|' ) )> 0, if( length( split( regexp_replace( `drv13`.`apat_value_title1`, '\n', '\\|' ), '\\|' ) [0] )> 60, substr( split( regexp_replace( `drv13`.`apat_value_title1`, '\n', '\\|' ), '\\|' ) [0], 1, 60 ), split( regexp_replace( `drv13`.`apat_value_title1`, '\n', '\\|' ), '\\|' ) [0] ), substr( `drv13`.`apat_value_title1`, 1, 60 ) ) END as `Primary Title on Account`, if( locate( '|', regexp_replace( `drv13`.`apat_value_title1`, '\n', '\\|' ) )> 0, if( length( split( regexp_replace( `drv13`.`apat_value_title1`, '\n', '\\|' ), '\\|' ) [1] )> 60, substr( split( regexp_replace( `drv13`.`apat_value_title1`, '\n', '\\|' ), '\\|' ) [1], 1, 60 ), split( regexp_replace( `drv13`.`apat_value_title1`, '\n', '\\|' ), '\\|' ) [1] ), substr( `drv13`.`apat_value_title1`, 61, 60 ) ) as `Secondary Title on Account`, COALESCE(stmn_ntfn_drv.ntfn_mode, '') as ntfn_mode, coalesce( `Mail_Adrs`.`mlng_cde`, `Mail_Adrs_1`.`mlng_cde` ) as `Mail Code` from stmn_ntfn stmn_ntfn_drv Left Outer Join DRIVING_TABLE drv13 On `drv13`.`ip_id_item_receiver` = `stmn_ntfn_drv`.`ip_id_item_receiver` and `drv13`.`ar_id_item` = `stmn_ntfn_drv`.`ar_id_item` Left Outer Join Mail_Adrs On `drv13`.`ip_id_item_receiver` = `Mail_Adrs`.`ec_ip_id` and `drv13`.`ar_id_item` = `Mail_Adrs`.`AR_ID_ITEM` and stmn_ntfn_drv.ntfn_mode = 'Paper' Left outer Join ( select * from ( select *, row_number() over ( partition BY ec_ip_id, ar_id_item ORDER BY ent_poc_seq_nbr ) rnk from Mail_Adrs ) as Mail where rnk = 1 ) Mail_Adrs_1 on `drv13`.`ip_id_item_receiver` = `Mail_Adrs_1`.`ec_ip_id` and `drv13`.`ar_id_item` = `Mail_Adrs_1`.`AR_ID_ITEM` Left Outer Join ELCTRN_EMAIL On `drv13`.`ip_id_item_receiver` = `ELCTRN_EMAIL`.`ip_id_item_receiver` and `drv13`.`ar_id_item` = `ELCTRN_EMAIL`.`AR_ID_ITEM` LEFT OUTER JOIN ( select distinct `driving_table`.`ip_id_item_receiver`, `driving_table`.`ar_id_item`, split( `jasontag`.`communicationmode`, '
hive_20250729022912_441dc9a3-cb1b-4594-bf10-c9c5cb6ff29b
2025-07-29 02 29  Executing command(queryId=hive_20250729022912_441dc9a3-cb1b-4594-bf10-c9c5cb6ff29b)  INSERT INTO uat5201_raca21.TB_ORG_STMNT_DTL_1 SELECT * FROM ( With ORG_D as ( select `tb_org_unit_mstr_eo`.`ldbid`, `tb_org_unit_mstr_eo`.`ou_id`, `tb_org_unit_mstr_eo`.`ou_nme`, `tb_org_unit_mstr_eo`.`city_nme`, `tb_org_unit_mstr_eo`.`st_cde`, `tb_org_unit_mstr_eo`.`soc_media_acc_id`, `tb_org_unit_mstr_eo`.`tele_nbr`, `tb_org_unit_mstr_eo`.`email_addr`, coalesce( `tb_org_unit_mstr_eo`.`addr_addtl_info`, `tb_org_unit_mstr_eo`.`ou_nme` ) as `addr_addtl_info`, `tb_org_unit_mstr_eo`.`ou_typ`, `tb_org_unit_mstr_eo`.`lgl_ent`, `tb_org_unit_mstr_eo`.`bus_phone_nmbr`, `tb_org_unit_mstr_eo`.`hrs_of_oprn` from uat5201_raca21. `TB_ORG_UNIT_MSTR_EO` where `tb_org_unit_mstr_eo`.`ou_typ` IN ('Financial Entity') ), ORG_SNP as ( select `org_tmp`.`ldbid`, `org_tmp`.`ou_id`, `org_tmp`.`ou_nme`, `org_tmp`.`city_nme`, `org_tmp`.`st_cde`, `org_tmp`.`soc_media_acc_id`, `org_tmp`.`tele_nbr`, `org_tmp`.`email_addr`, `org_tmp`.`addr_addtl_info`, `org_tmp`.`ou_typ`, `org_tmp`.`lgl_ent`, `org_tmp`.`bus_phone_nmbr`, `org_tmp`.`hrs_of_oprn`, max( if( `org_tmp`.`tag` = 'StreetName', coalesce(`org_tmp`.`value`, ''), '' ) )|| max( if( `org_tmp`.`value` IS NULL or `org_tmp`.`value` = '', ',', '' ) )|| max( if( `org_tmp`.`value` IS NULL or `org_tmp`.`value` = '', coalesce(`org_tmp`.`tag`, ''), '' ) )|| max( if( ( ( `org_tmp`.`tag` = 'StreetName' and `org_tmp`.`value` <> '' and `org_tmp`.`value` is not null ) or ( `org_tmp`.`tag` = 'BuildingId' and `org_tmp`.`value` <> '' and `org_tmp`.`value` is not null ) ), ',', '' ) )|| max( if( `org_tmp`.`tag` = 'BuildingId', coalesce(`org_tmp`.`value`, ''), '' ) ) `Address Line`, max( if( `org_tmp`.`tag` = 'BoxNumber', coalesce(`org_tmp`.`value`, ''), '' ) ) `Address Line (2)`, max( if( `org_tmp`.`tag` = 'Postcode', coalesce(`org_tmp`.`value`, ''), '' ) ) AS `company postal code` from ( select `t`.`ldbid`, `t`.`ou_id`, `t`.`ou_nme`, `t`.`city_nme`, `t`.`st_cde`, `t`.`soc_media_acc_id`, `t`.`tele_nbr`, `t`.`email_addr`, `t`.`addr_addtl_info`, `t`.`ou_typ`, `t`.`lgl_ent`, `t`.`bus_phone_nmbr`, `t`.`hrs_of_oprn`, split(`branchaddr`.`addresscols`, '-') [0] `tag`, split(`branchaddr`.`addresscols`, '-') [1] `value` from ( select `org_d`.`ldbid`, `org_d`.`ou_id`, `org_d`.`ou_nme`, `org_d`.`city_nme`, `org_d`.`st_cde`, `org_d`.`soc_media_acc_id`, `org_d`.`tele_nbr`, `org_d`.`email_addr`, `org_d`.`addr_addtl_info`, `org_d`.`ou_typ`, `org_d`.`lgl_ent`, `org_d`.`bus_phone_nmbr`, `org_d`.`hrs_of_oprn` from ORG_D ) `t` lateral view explode( split(`t`.`addr_addtl_info`, ',') ) `branchaddr` as `addresscols` ) `org_tmp` group by `org_tmp`.`ldbid`, `org_tmp`.`ou_id`, `org_tmp`.`ou_nme`, `org_tmp`.`city_nme`, `org_tmp`.`st_cde`, `org_tmp`.`soc_media_acc_id`, `org_tmp`.`tele_nbr`, `org_tmp`.`email_addr`, `org_tmp`.`addr_addtl_info`, `org_tmp`.`ou_typ`, `org_tmp`.`lgl_ent`, `org_tmp`.`bus_phone_nmbr`, `org_tmp`.`hrs_of_oprn` ), website as ( select `tb_01700_socl_media_eo`.`ou_id`, `tb_01700_socl_media_eo`.`soc_media_acc_id`, row_number() over ( partition by `tb_01700_socl_media_eo`.`ou_id` order by `tb_01700_socl_media_eo`.`full_date` desc ) `rnk` from uat5201_raca21. `TB_01700_SOCL_MEDIA_EO` where `tb_01700_socl_media_eo`.`soc_media_typ` = 'WebsiteId' ) SELECT distinct `org_snap`.`ou_id`, `org_snap`.`ou_nme`, `org_snap`.`ldbid`, `org_snap`.`address line`, `org_snap`.`address line (2)`, `org_snap`.`city_nme`, `org_snap`.`st_cde`, `org_snap`.`company postal code`, `website`.`soc_media_acc_id`, `org_snap`.`tele_nbr`, Replace( Replace( `org_snap`.`bus_phone_nmbr`, '-', '' ), ' ', '' ) as bus_phone_nmbr, `org_snap`.`email_addr`, `org_snap`.`addr_addtl_info`, `org_snap`.`ou_typ`, `org_snap`.`lgl_ent`, `org_snap`.`hrs_of_oprn` AS `hours_of_operation` FROM ORG_SNP ORG_SNAP left outer join website on `website`.`ou_id` = `org_snap`.`ou_id` and `website`.`rnk` = 1 ) ORG
hive_20250729022920_feee6bc8-d87f-450f-aeba-5dcfa609a1a0
2025-07-29 02 29  Executing command(queryId=hive_20250729022920_feee6bc8-d87f-450f-aeba-5dcfa609a1a0)  insert into uat5201_raca21.orphan_account select * from (select TB_APD_AR_STMNT_DTL_DP_RD.STMN_GRP_ID,TB_APD_AR_STMNT_DTL_DP_RD.ar_grp_role,TB_APD_AR_STMNT_DTL_DP_RD.full_date,TB_APD_AR_STMNT_DTL_DP_RD.AR_ID_ITEM,TB_APD_AR_STMNT_DTL_DP_RD.ldbid from uat5201_raca21.TB_APD_AR_STMNT_DTL_DP_RD where TB_APD_AR_STMNT_DTL_DP_RD.STMN_GRP_ID not in (SELECT inner_query.STMN_GRP_ID FROM (select TB_APD_AR_STMNT_DTL_DP_RD.STMN_GRP_ID from uat5201_raca21.TB_APD_AR_STMNT_DTL_DP_RD where (TB_APD_AR_STMNT_DTL_DP_RD.STMN_GRP_ID <> '' and TB_APD_AR_STMNT_DTL_DP_RD.STMN_GRP_ID is not Null) and lower(TB_APD_AR_STMNT_DTL_DP_RD.ar_grp_role) = 'primary' and TB_APD_AR_STMNT_DTL_DP_RD.FULL_DATE = cast('20250728' as int))AS inner_query ) and TB_APD_AR_STMNT_DTL_DP_RD.FULL_DATE = cast('20250728' as int) and (TB_APD_AR_STMNT_DTL_DP_RD.STMN_GRP_ID <> '' and TB_APD_AR_STMNT_DTL_DP_RD.STMN_GRP_ID is not Null) order by TB_APD_AR_STMNT_DTL_DP_RD.STMN_GRP_ID) orp_acct
application_1752432472682_70773 HIVE-83e6e1f6-2ab1-4d4b-84bc-592c77fc5ecb 1608GB 201vCores
hive_20250728210142_5b007378-d31c-4adf-a00d-d22900b14d2e
2025-07-28 21 01  Executing command(queryId=hive_20250728210142_5b007378-d31c-4adf-a00d-d22900b14d2e)  LOAD DATA INPATH '/tmp/2025_07_29/svcras5201admin/application_1752432472682_70744/204fe7e4-5805-469e-8783-2b0562d63a56' INTO TABLE uat5201_raca21.RT_AR_DLY_BAL_DP_RD
application_1752432472682_72643 HIVE-03a19837-6e45-45fb-8cf2-49ed77079822 1728GB 216vCores
hive_20250729032229_c4d79360-c3a2-4a8c-af71-76fd67ea96ae
2025-07-29 03 22  Executing command(queryId=hive_20250729032229_c4d79360-c3a2-4a8c-af71-76fd67ea96ae)  CREATE TABLE ULR064_TEMP1_DTL_aafeef4fc3bd4cedabb0a65b2b27d0fd AS 								SELECT LN_NBR,CUS_NBR,CUST_NME,RLT_MGR,CST_CENTRE,CRNCY_CDE,CUR_BAL_AMT,CUR_ACCR_AMT,PER_DIEM,BRNCH,PROD_TYP,INT_TYP,INT_RTE,LN_ISS_CNTRT_DTE,LN_MAT_DTE,NXT_PMT_DUE_DTE,NXT_PMT_AMT,LST_TXN_DTE,LST_TXN_AMT,LN_STAT,DTE_LST_MAINT,NBR_OF_EXTN,NBR_OF_DAYS_PAST_DUE,RISK_RTG,TYP_OF_PMT_BILL_SCHED,PMT_SCHED_STRT_DTE,PMT_SCHED_FREQ,PMT_AMT,NBR_OF_PMT,LTE_CHRG_RCVL,NON_ACC_INT_BAL,NON_ACC_OUTSTD_PRIN_BAL,CHOFF_INT_BAL,CHOFF_PRIN_BAL,APALT_VALUE,INTRST_APLD_TO_PRNCPL,LDBID FROM ( SELECT distinct AR_MSTR.AR_ID_ITEM  	AS  LN_NBR, 								AR_MSTR.IP_ID_PRMRY     AS  CUS_NBR, 								CUST_MSTR.NME_LNE                 AS  CUST_NME, 								AR_MSTR.IP_IDFR_RLTNP_MGR_PRMRY   AS  RLT_MGR, 								ORG.ACT_CNTR_CDE	AS CST_CENTRE, 								AR_MSTR.CRNCY_ISO4217_VAL AS CRNCY_CDE, 								DLY_BAL.OTSNDG_PRNCPL_BAL AS  CUR_BAL_AMT, 								DLY_BAL.INTRST_ACCRD_BAL AS CUR_ACCR_AMT, 								CASE WHEN TB_RATE.RACHLR_ACCRL_START_DATE <='2025-07-28' THEN ABS(NVL(DLY_BAL.OTSNDG_PRNCPL_BAL,0.00) * NVL(TB_RATE.RACLR_ACCR_FACTOR,0.00)) ELSE 0 END AS PER_DIEM, 								AR_MSTR.AR_ID_ITEM_ORG_UNIT     AS  BRNCH, 								AR_MSTR.PD_IDFR     AS  PROD_TYP, 								TB_RATE.RACLR_INTRST_TYPE       AS  INT_TYP, 								AR_MSTR.RACHLR_APLCBL_RATE      AS INT_RTE, 								NVL((from_unixtime(unix_timestamp(AR_MSTR.APA_FRST_EFCTV_DATE), 'MM-dd-yyyy')),'') AS  LN_ISS_CNTRT_DTE, 								NVL((from_unixtime(unix_timestamp(AR_MSTR.RPSLR_LTST_MTRTY_DATE), 'MM-dd-yyyy')),'')  AS  LN_MAT_DTE, 								CASE WHEN TRANS_DATA.ARTAL_PYMNT_DATE='9999-12-31' THEN 'Not Applicable' WHEN (UPPER(AR_MSTR.APALT_VALUE)='ACTIVE' AND AR_MSTR.APADL_VALUE='PaidOff') OR (UPPER(AR_MSTR.APALT_VALUE)='SETTLED' AND AR_MSTR.APADL_VALUE='Closed') THEN 'Not Applicable' ELSE NVL((from_unixtime(unix_timestamp(TRANS_DATA.ARTAL_PYMNT_DATE), 'MM-dd-yyyy')),'') END AS  NXT_PMT_DUE_DTE, 								CASE WHEN (UPPER(AR_MSTR.APALT_VALUE)='ACTIVE' AND AR_MSTR.APADL_VALUE='PaidOff') OR (UPPER(AR_MSTR.APALT_VALUE)='SETTLED' AND AR_MSTR.APADL_VALUE='Closed') THEN '00099999999' ELSE CAST(NVL( CAST(GEN_BILL.ARGBLR_BILL_AMT as DECIMAL (26, 2)), 0.00) AS STRING) END as  NXT_PMT_AMT, 								NVL((from_unixtime(unix_timestamp(TRANS_DATA.ARTAL_LAST_PYMNT_DATE), 'MM-dd-yyyy')),'') AS  LST_TXN_DTE, 								TRANS_DATA.ARTAL_LAST_PYMNT_AMT AS  LST_TXN_AMT, 								CONCAT(cast(AR_MSTR.APALT_VALUE as string),'-',cast(AR_MSTR.APADL_VALUE as string))   AS   LN_STAT, 								NVL((from_unixtime(unix_timestamp(TRANS_DATA.AATADL_MAINT_DATE), 'MM-dd-yyyy')),'') AS DTE_LST_MAINT, 								AR_CNTR.AACPTL_CNTR AS NBR_OF_EXTN, 								DLY_BAL.NMBR_OF_DAYS_DLQNY	AS 	NBR_OF_DAYS_PAST_DUE, 								AR_MSTR.ARBLR_RISK_RATING        AS  RISK_RTG, 								BILL_SCHDL.ARBSLR_PYMNT_CALCN_OPTION       AS  TYP_OF_PMT_BILL_SCHED, 								NVL((from_unixtime(unix_timestamp(TRANS_DATA.ARTAL_BILL_DATE), 'MM-dd-yyyy')),'')        AS  PMT_SCHED_STRT_DTE, 								CASE WHEN FRQ.TYP IS NOT NULL  AND cast(FRQ.VAL as string) IS NOT NULL THEN CONCAT(cast(FRQ.TYP as string),'-',cast(FRQ.VAL as string)) WHEN FRQ.TYP IS NULL AND cast(FRQ.VAL as string) IS NOT NULL  THEN cast(FRQ.VAL as string) WHEN FRQ.VAL IS NULL AND cast(FRQ.TYP as string) IS NOT NULL THEN cast(FRQ.TYP as string) ELSE '' END    AS  PMT_SCHED_FREQ, 								CASE WHEN (UPPER(AR_MSTR.APALT_VALUE)='ACTIVE' AND AR_MSTR.APADL_VALUE='PaidOff') OR (UPPER(AR_MSTR.APALT_VALUE)='SETTLED' AND AR_MSTR.APADL_VALUE='Closed') THEN '00099999999' ELSE CAST(NVL( CAST(AR_MSTR.RPSLR_SCHDL_AMT as DECIMAL (26, 2)), 0.00) AS STRING) END AS    PMT_AMT, 								AR_MSTR.RPSLR_SCHED_NMBR_PYMNT_LIFE     AS  NBR_OF_PMT, 								DLY_BAL.LTCHG_RCVBL	AS LTE_CHRG_RCVL, 								CASE WHEN  AR_MSTR.SHDW_ACCTG_IND = 'FALSE' THEN DLY_BAL.NON_ACCRL_INTRST 									WHEN  AR_MSTR.SHDW_ACCTG_IND = 'TRUE' THEN DLY_BAL.SHDW_INTRST_NON_ACCRL ELSE 0.00 END AS NON_ACC_INT_BAL, 								DLY_BAL.NON_ACCRL_PRNCPL_OTSNDG	AS NON_ACC_OUTSTD_PRIN_BAL, 								CASE WHEN  AR_MSTR.SHDW_ACCTG_IND = 'FALSE' THEN DLY_BAL.CHOFF_INTRST										WHEN  AR_MSTR.SHDW_ACCTG_IND = 'TRUE' THEN DLY_BAL.SHDW_INTRST_CHOFF ELSE 0.00 END AS CHOFF_INT_BAL, 								CASE WHEN  AR_MSTR.SHDW_ACCTG_IND = 'FALSE' THEN DLY_BAL.CHOFF_PRNCPL										WHEN  AR_MSTR.SHDW_ACCTG_IND = 'TRUE' THEN DLY_BAL.SHDW_PRNPL_CHOFF ELSE 0.00 END AS CHOFF_PRIN_BAL, 								AR_MSTR.APALT_VALUE     AS  APALT_VALUE, 								DLY_BAL.INTRST_APLD_TO_PRNCPL, 								AR_MSTR.LDBID       AS  LDBID, 								CASE WHEN upper(AR_MSTR.APALT_VALUE)='SETTLED' and upper(AR_MSTR.APADL_VALUE) = 'CLOSED' and year(AR_MSTR.ARSCLR_EFCTV_DATE) <> year('2025-07-28') THEN 'CLOSED_PREV' else 'OPEN_ACCT' END AS STAT 								FROM uat7400_racs13.RT_APD_AR_MSTR_LN_RL  AR_MSTR 								LEFT JOIN uat7400_racs13.TB_CUST_MSTR_IP CUST_MSTR ON  AR_MSTR.IP_ID_PRMRY = CUST_MSTR.EC_IP_ID 								LEFT JOIN uat7400_racs13.TB_ORG_UNIT_MSTR_EO  ORG ON AR_MSTR.AR_ID_ITEM_ORG_UNIT=ORG.OU_ID 								LEFT JOIN (select GEN_BILL_1.ADT_OPER_TS, GEN_BILL_1.AR_ID_ITEM, GEN_BILL_1.LDBID, GEN_BILL_1.ARGBLR_NEXT_PYMNT_CYC_DUE_DATE, GEN_BILL_1.ARGBLR_BILL_AMT, GEN_BILL_1.ARGBLR_BILL_FRM_DATE, GEN_BILL_1.argblr_bill_nmbr, GEN_BILL_1.derived_argblr_bill_status, ROW_NUMBER() OVER(PARTITION BY GEN_BILL_1.AR_ID_ITEM ORDER BY GEN_BILL_1.ADT_OPER_TS desc, GEN_BILL_1.argblr_bill_nmbr desc, GEN_BILL_1.derived_argblr_bill_status DESC) AS ROWNUMBER from 								(SELECT ADT_OPER_TS, AR_ID_ITEM, LDBID, ARGBLR_NEXT_PYMNT_CYC_DUE_DATE, ARGBLR_BILL_AMT, ARGBLR_BILL_FRM_DATE, argblr_bill_nmbr, case when lower(argblr_bill_status)='paid' then '2' when lower(argblr_bill_status)='due' then '1' else '0' end as derived_argblr_bill_status from uat7400_racs13.RT_AR_GEN_BILL_LN_RL where adt_bus_prcs in  ('LNUnscrTermCreateArrangement', 'LNScrCreateTermArrangement','LNRecordBillDetail') or adt_bus_prcs like '%TransactionScheduleMasterStepOnlyGroupEvent%') GEN_BILL_1) AS GEN_BILL ON AR_MSTR.AR_ID_ITEM=GEN_BILL.AR_ID_ITEM and AR_MSTR.LDBID=GEN_BILL.LDBID and GEN_BILL.ROWNUMBER=1 								LEFT JOIN (SELECT AR_CNTR_1.ARID_ITEM,AR_CNTR_1.FULL_DATE,AR_CNTR_1.CNTRT_CODE,AR_CNTR_1.CNPT_VALUE,AR_CNTR_1.LDBID,sum(NVL(AR_CNTR_1.AACPTL_CNTR,0)) AACPTL_CNTR from uat7400_racs13.TB_APD_AR_CNTR_PERIOD_LN_RL AS AR_CNTR_1 								JOIN (SELECT ARID_ITEM,MAX(FULL_DATE) as FULL_DATE FROM uat7400_racs13.TB_APD_AR_CNTR_PERIOD_LN_RL where CNTRT_CODE IN ('NoOfExtsnsForPymntDueDateChange','NoOfExtsnsForDelinquency','NoOfExtsnsForPromotional') AND CNPT_VALUE = 'LifeToDate' group by ARID_ITEM ) AS AR_CNTR_2 								ON AR_CNTR_1.FULL_DATE = AR_CNTR_2.FULL_DATE and AR_CNTR_1.ARID_ITEM = AR_CNTR_2.ARID_ITEM where AR_CNTR_1.CNTRT_CODE IN ('NoOfExtsnsForPymntDueDateChange','NoOfExtsnsForDelinquency','NoOfExtsnsForPromotional') AND AR_CNTR_1.CNPT_VALUE = 'LifeToDate' GROUP BY AR_CNTR_1.ARID_ITEM,AR_CNTR_1.FULL_DATE,AR_CNTR_1.CNTRT_CODE,AR_CNTR_1.CNPT_VALUE,AR_CNTR_1.LDBID) AS AR_CNTR 								ON AR_MSTR.AR_ID_ITEM=AR_CNTR.ARID_ITEM and AR_MSTR.LDBID = cast(AR_CNTR.LDBID as string) 								LEFT JOIN (SELECT BILL_SCHDL_1.* from uat7400_racs13.RT_AR_BILL_SCHDL_DFN_LN_RL AS BILL_SCHDL_1 								JOIN (SELECT AR_ID_ITEM,MAX(ADT_OPER_TS) as ADT_OPER_TS FROM uat7400_racs13.RT_AR_BILL_SCHDL_DFN_LN_RL group by AR_ID_ITEM ) AS BILL_SCHDL_2 								ON BILL_SCHDL_1.ADT_OPER_TS = BILL_SCHDL_2.ADT_OPER_TS and BILL_SCHDL_1.AR_ID_ITEM = BILL_SCHDL_2.AR_ID_ITEM) AS BILL_SCHDL 								ON AR_MSTR.AR_ID_ITEM=BILL_SCHDL.AR_ID_ITEM and AR_MSTR.LDBID=BILL_SCHDL.LDBID 								LEFT JOIN (SELECT * from uat7400_racs13.RT_AR_DLY_BAL_LN_RL WHERE FULL_DATE IN (SELECT MAX(FULL_DATE) FROM uat7400_racs13.RT_AR_DLY_BAL_LN_RL)) AS DLY_BAL 								ON DLY_BAL.AR_ID_ITEM = AR_MSTR.AR_ID_ITEM AND AR_MSTR.LDBID = DLY_BAL.LDBID 								LEFT JOIN (SELECT TRANS_DATA1.* from uat7400_racs13.TB_APD_AR_TRANS_DATA_TDL_LN_RL TRANS_DATA1 								JOIN (SELECT AR_ID_ITEM, MAX(FULL_DATE) as FULL_DATE FROM uat7400_racs13.TB_APD_AR_TRANS_DATA_TDL_LN_RL GROUP BY AR_ID_ITEM) AS TRANS_DATA2 								ON TRANS_DATA1.FULL_DATE = TRANS_DATA2.FULL_DATE and TRANS_DATA1.AR_ID_ITEM = TRANS_DATA2.AR_ID_ITEM) AS TRANS_DATA 								ON TRANS_DATA.AR_ID_ITEM = AR_MSTR.AR_ID_ITEM AND TRANS_DATA.LDBID = AR_MSTR.LDBID 								LEFT JOIN (select AR_ID_ITEM,LDBID,GET_JSON_OBJECT(json ,'$.balTyp') as balTyp,GET_JSON_OBJECT(json ,'$.typ') as TYP,GET_JSON_OBJECT(json ,'$.val') as VAL  from (Select AR_ID_ITEM,ldbid,json from uat7400_racs13.RT_APD_AR_MSTR_LN_RL lateral view explode(split(regexp_replace(regexp_replace(get_json_object(RPSLR_PYMNT_FRQNCY_TYPE,'$.pmtFreq'), '\\[|\\]',''),'\\}\\,\\{','\\}\\;\\{'),'\\;')) exploded_table as json where RPSLR_PYMNT_FRQNCY_TYPE like '%Interest%') A where json like '%Interest%') FRQ ON AR_MSTR.AR_ID_ITEM = FRQ.AR_ID_ITEM AND AR_MSTR.LDBID = FRQ.LDBID 								LEFT JOIN (SELECT LDBID, AR_ID_ITEM, RACLR_ACCR_FACTOR, RACHLR_APLCBL_RATE, BKNG_TS, RACHLR_ACCRL_START_DATE, RACLR_CHARGE_TYPE_CODE, RACRN,RACLR_ACCR_TYPE,RACLR_INTRST_TYPE FROM (SELECT *, ROW_NUMBER() OVER (PARTITION BY AR_ID_ITEM ORDER BY BKNG_TS DESC, RACLR_ACCR_FACTOR DESC NULLS LAST) AS RACRN FROM uat7400_racs13.TB_RATE_CHARGE_LN_RL where raclr_charge_type_code='DebitInterest') RATE where RATE.RACRN=1) AS TB_RATE ON AR_MSTR.AR_ID_ITEM = TB_RATE.AR_ID_ITEM AND AR_MSTR.LDBID = TB_RATE.LDBID 								) A  WHERE STAT ='OPEN_ACCT' 								
hive_20250729032326_df7a2f76-ae33-484c-9e00-dbb0d0b2848b
2025-07-29 03 23  Executing command(queryId=hive_20250729032326_df7a2f76-ae33-484c-9e00-dbb0d0b2848b)  CREATE TABLE ULR064_BAL_PERIOD_aafeef4fc3bd4cedabb0a65b2b27d0fd AS 								SELECT ARID_ITEM,LDBID,BALTT_CODE,AABPTL_VALUE, 								INT_PD_YTD as  INT_PD_YTD, 								FEE as FEE, 								FEE_CUR_ASSD_AMT as FEE_CUR_ASSD_AMT,								FEE_PD_YR_TO_DTE as FEE_PD_YR_TO_DTE 							from ( 								SELECT BAL_PERIOD.ARID_ITEM,BAL_PERIOD.LDBID, BAL_PERIOD.BALTT_CODE,BAL_PERIOD.AABPTL_VALUE, 								CASE WHEN BAL_PERIOD.BALTT_CODE='TotalInterestCollected' and AABPTL_VALUE = 'Yearly' THEN cast(BAL_PERIOD.AABPTL_AMT as string) ELSE '0.00' END  AS  INT_PD_YTD , 								CASE WHEN BAL_PERIOD.BALTT_CODE = 'TotalFeeReceivable' and BAL_PERIOD.AABPTL_VALUE = 'LifeToDate' THEN cast(BAL_PERIOD.AABPTL_AMT as string) ELSE '0.00' END AS FEE, 								CASE WHEN BAL_PERIOD.BALTT_CODE = 'TotalFeeReceivable' and BAL_PERIOD.AABPTL_VALUE = 'BillingCycle'    THEN cast(BAL_PERIOD.AABPTL_AMT as string) ELSE '0.00' END AS FEE_CUR_ASSD_AMT, 								CASE WHEN BAL_PERIOD.BALTT_CODE = 'TotalFeeCollected' and BAL_PERIOD.AABPTL_VALUE = 'Yearly' THEN cast(BAL_PERIOD.AABPTL_AMT as string) ELSE '0.00' END AS FEE_PD_YR_TO_DTE 								FROM (SELECT ARID_ITEM,LDBID,BALTT_CODE,AABPTL_VALUE,AABPTL_AMT,aabptl_batch_date,AABPTL_EFCTV_DATE,AABPTL_END_DATE,DENSE_RANK() OVER(PARTITION BY ARID_ITEM,BALTT_CODE,AABPTL_VALUE ORDER BY aabptl_batch_date DESC) RW_NBR FROM uat7400_racs13.TB_APD_AR_BAL_PERIOD_LN_RL WHERE BALTT_CODE in ('TotalInterestCollected','TotalFeeReceivable','TotalFeeCollected') 								and AABPTL_VALUE in ('Yearly','LifeToDate','BillingCycle')) BAL_PERIOD 								WHERE '2025-07-28' between BAL_PERIOD.AABPTL_EFCTV_DATE and BAL_PERIOD.AABPTL_END_DATE AND RW_NBR=1)A 								
hive_20250729032435_00cabf67-14cc-4b59-a908-983a2f897aa2
2025-07-29 03 24  Executing command(queryId=hive_20250729032435_00cabf67-14cc-4b59-a908-983a2f897aa2)  CREATE TABLE ULR064_Temp2_aafeef4fc3bd4cedabb0a65b2b27d0fd as 								SELECT distinct 									T1.LN_NBR, 									T1.CUS_NBR, 									T1.CUST_NME, 									T1.RLT_MGR, 									T1.CST_CENTRE, 									T1.CRNCY_CDE, 									T1.CUR_BAL_AMT, 									T1.CUR_ACCR_AMT,									T1.PER_DIEM, 									T2.INT_PD_YTD, 									T1.BRNCH, 									T1.PROD_TYP, 									T1.INT_TYP, 									T1.INT_RTE, 									T1.LN_ISS_CNTRT_DTE, 									T1.LN_MAT_DTE, 									T1.NXT_PMT_DUE_DTE, 									T1.NXT_PMT_AMT, 									T1.LST_TXN_DTE, 									T1.LST_TXN_AMT, 									T1.LN_STAT, 									T1.DTE_LST_MAINT, 									T1.NBR_OF_EXTN, 									T1.NBR_OF_DAYS_PAST_DUE, 									T1.RISK_RTG, 									T1.TYP_OF_PMT_BILL_SCHED, 									T1.PMT_SCHED_STRT_DTE, 									T1.PMT_SCHED_FREQ, 									T1.PMT_AMT,T1.NBR_OF_PMT, 									T3.FEE, 									T4.FEE_CUR_ASSD_AMT, 									T5.FEE_PD_YR_TO_DTE, 									T1.LTE_CHRG_RCVL, 									T1.NON_ACC_INT_BAL, 									T1.NON_ACC_OUTSTD_PRIN_BAL, 									T1.CHOFF_INT_BAL, 									T1.CHOFF_PRIN_BAL, 									T1.APALT_VALUE,                                     T1.INTRST_APLD_TO_PRNCPL, 									T1.LDBID 							FROM ULR064_TEMP1_DTL_aafeef4fc3bd4cedabb0a65b2b27d0fd T1 							LEFT JOIN (SELECT ARID_ITEM,LDBID,BALTT_CODE,AABPTL_VALUE,INT_PD_YTD from ULR064_BAL_PERIOD_aafeef4fc3bd4cedabb0a65b2b27d0fd  where BALTT_CODE='TotalInterestCollected' and AABPTL_VALUE = 'Yearly' ) T2 ON T1.LN_NBR=T2.ARID_ITEM AND T1.LDBID=cast(T2.LDBID as string)                             LEFT JOIN (SELECT ARID_ITEM,LDBID,BALTT_CODE,AABPTL_VALUE,FEE from ULR064_BAL_PERIOD_aafeef4fc3bd4cedabb0a65b2b27d0fd  where BALTT_CODE='TotalFeeReceivable' and AABPTL_VALUE = 'LifeToDate' ) T3 ON T1.LN_NBR=T3.ARID_ITEM AND T1.LDBID=cast(T3.LDBID as string)                             LEFT JOIN (SELECT ARID_ITEM,LDBID,BALTT_CODE,AABPTL_VALUE,FEE_CUR_ASSD_AMT from ULR064_BAL_PERIOD_aafeef4fc3bd4cedabb0a65b2b27d0fd  where BALTT_CODE='TotalFeeReceivable' and AABPTL_VALUE = 'BillingCycle' ) T4 ON T1.LN_NBR=T4.ARID_ITEM AND T1.LDBID=cast(T4.LDBID as string)                             LEFT JOIN (SELECT ARID_ITEM,LDBID,BALTT_CODE,AABPTL_VALUE,FEE_PD_YR_TO_DTE from ULR064_BAL_PERIOD_aafeef4fc3bd4cedabb0a65b2b27d0fd  where BALTT_CODE='TotalFeeCollected' and AABPTL_VALUE = 'Yearly' ) T5 ON T1.LN_NBR=T5.ARID_ITEM AND T1.LDBID=cast(T5.LDBID as string) 							WHERE ('99999998'='99999998' OR NVL(T1.BRNCH,'') IN ('99999998')) 								AND ('99999998'='99999998' OR '99999998' = '' OR T1.LN_NBR='99999998') 								AND ('7400'='99999998' OR NVL(T1.LDBID,'') IN ('7400')) 								AND ('99999998'='99999998' OR NVL(T1.CRNCY_CDE,'') IN ('99999998')) 							ORDER BY T1.LN_NBR
hive_20250729032442_6a24b38b-726c-40fb-875b-b991852b262c
2025-07-29 03 24  Executing command(queryId=hive_20250729032442_6a24b38b-726c-40fb-875b-b991852b262c)  SELECT LN_NBR AS AR_ID_ITEM, 							CUS_NBR, 							CUST_NME, 							RLT_MGR, 							CST_CENTRE, 							CRNCY_CDE, 							CUR_BAL_AMT, 							CUR_ACCR_AMT, 							PER_DIEM, 							INT_PD_YTD, 							INT_RTE, 							BRNCH, 							PROD_TYP, 							INT_TYP, 							LN_ISS_CNTRT_DTE, 							LN_MAT_DTE, 							NXT_PMT_AMT, 							LST_TXN_AMT, 							NON_ACC_INT_BAL, 							LST_TXN_DTE, 							FEE_PD_YR_TO_DTE, 							LN_STAT, 							DTE_LST_MAINT, 							CAST(NBR_OF_EXTN as string) as NBR_OF_EXTN, 							CAST(NBR_OF_DAYS_PAST_DUE as string) as NBR_OF_DAYS_PAST_DUE, 							CAST(RISK_RTG as string) as RISK_RTG, 							TYP_OF_PMT_BILL_SCHED, 							PMT_AMT  AS PMT_AMT, 							FEE, 							CHOFF_INT_BAL, 							PMT_SCHED_STRT_DTE, 							LTE_CHRG_RCVL, 							PMT_SCHED_FREQ, 							CAST(NBR_OF_PMT as string) as NBR_OF_PMT, 							NON_ACC_OUTSTD_PRIN_BAL, 							FEE_CUR_ASSD_AMT, 							CHOFF_PRIN_BAL, 							NXT_PMT_DUE_DTE,                             INTRST_APLD_TO_PRNCPL, 							1 TYP, 							CEIL((ROW_NUMBER() OVER (ORDER BY LN_NBR)) / 100) pagenbr 						FROM ULR064_TEMP2_aafeef4fc3bd4cedabb0a65b2b27d0fd 						ORDER BY LN_NBR
application_1752432472682_72558 HIVE-42491358-c2bc-4b2a-85de-4a612e18615c 1832GB 229vCores
hive_20250729030431_f016191b-a6ba-4114-ac24-5d03bd781e18
2025-07-29 03 04  Executing command(queryId=hive_20250729030431_f016191b-a6ba-4114-ac24-5d03bd781e18)  CREATE TEMPORARY TABLE CSR002_Temp1 as 								SELECT 									MSTR.LDBID  						AS FIN_ENT, 									MSTR.ar_id_item_org_unit  			AS BRNCH, 									MSTR.AR_ID_ITEM 					AS ACCT_NBR, 									IP.NME_LNE 							AS CUST_NME, 									IP.TAX_CERT_STAT					AS TAX_CERT_STAT, 									case when (IP.tax_cert_stat like '%W-8%' OR IP.tax_cert_stat like 'W8%' OR IP.tax_cert_stat like '%NRA%' OR IP.tax_cert_stat like '%NRE%'  OR IP.tax_cert_stat like 'Foreign%') then 'Yes' else '' end AS NRA, 									MSTR.full_date 						AS MSTR_FULL_DATE, 									MSTR.AR_ID_ITEM 					AS AR_ID_ITEM, 									MSTR.LDBID 							AS LDBID 								FROM uat5201_raca21.RT_APD_AR_MSTR_DP_RD MSTR 								LEFT JOIN uat5201_raca21.TB_CUST_MSTR_IP IP ON MSTR.LDBID= IP.LDBID and MSTR.IP_ID_ITEM=IP.EC_IP_ID 								
hive_20250729030451_6c965aca-1987-4220-ba54-73756752520f
2025-07-29 03 04  Executing command(queryId=hive_20250729030451_6c965aca-1987-4220-ba54-73756752520f)  CREATE TEMPORARY TABLE CSR002_BAL_PERIOD as 							SELECT AR_ID_ITEM, 								COALESCE(collect_list(IN_GD_GV_1))[0]      AS IN_GD_GV_1, 								COALESCE(collect_list(IN_GD_GV_2))[0]      AS IN_GD_GV_2, 								COALESCE(collect_list(IN_GD_GV_3))[0]      AS IN_GD_GV_3, 								COALESCE(collect_list(IN_FED_YTD_TX))[0]   AS IN_FED_YTD_TX, 								COALESCE(collect_list(IN_FATCA_YTD_TX))[0] AS IN_FATCA_YTD_TX 							FROM ( 							SELECT  BAL_PERIOD.AR_ID_ITEM,BAL_PERIOD.BALTT_CODE, 								CASE WHEN BAL_PERIOD.BALTT_CODE = 'CustIncentiveMiscPaymentBal'    THEN SUM(NVL(BAL_PERIOD.AABPDP_AMT,0))    END AS IN_GD_GV_1, 								CASE WHEN BAL_PERIOD.BALTT_CODE = 'CustGoodwillMiscPaymentBal'     THEN SUM(NVL(BAL_PERIOD.AABPDP_AMT,0))    END AS IN_GD_GV_2, 								CASE WHEN BAL_PERIOD.BALTT_CODE = 'CustIncentiveGiftCashMiscBal'   THEN SUM(NVL(BAL_PERIOD.AABPDP_AMT,0))    END AS IN_GD_GV_3, 								CASE WHEN BAL_PERIOD.BALTT_CODE = 'IncentiveFederaltaxBalance'     THEN SUM(NVL(BAL_PERIOD.AABPDP_AMT,0))    END AS IN_FED_YTD_TX, 								CASE WHEN BAL_PERIOD.BALTT_CODE = 'IncentiveFATCATaxBalance'       THEN SUM(NVL(BAL_PERIOD.AABPDP_AMT,0))    END AS IN_FATCA_YTD_TX 							FROM uat5201_raca21.TB_APD_AR_BAL_PERIOD_DP_RD BAL_PERIOD 							WHERE BAL_PERIOD.aabpdp_batch_ts IN (SELECT MAX(BAL_PERIOD1.aabpdp_batch_ts) FROM uat5201_raca21.TB_APD_AR_BAL_PERIOD_DP_RD BAL_PERIOD1 							WHERE BAL_PERIOD.AR_ID_ITEM=BAL_PERIOD1.AR_ID_ITEM and BAL_PERIOD.BALTT_CODE=BAL_PERIOD1.BALTT_CODE AND BAL_PERIOD.ABPT_VALUE=BAL_PERIOD1.ABPT_VALUE AND SUBSTR(AABPS_END_DATE,1,4) = '2025' GROUP BY BAL_PERIOD1.AR_ID_ITEM) 							AND BAL_PERIOD.BALTT_CODE IN ('CustIncentiveMiscPaymentBal','CustGoodwillMiscPaymentBal','CustIncentiveGiftCashMiscBal','IncentiveFederaltaxBalance','IncentiveFATCATaxBalance') and ABPT_VALUE = 'Yearly' AND SUBSTR(AABPS_END_DATE,1,4) = '2025' 							GROUP BY BAL_PERIOD.AR_ID_ITEM,BAL_PERIOD.BALTT_CODE 							) dummy_tble2 							GROUP BY AR_ID_ITEM
hive_20250729030701_134d26ef-7529-4547-969a-260d9eb87728
2025-07-29 03 07  Executing command(queryId=hive_20250729030701_134d26ef-7529-4547-969a-260d9eb87728)  CREATE TEMPORARY TABLE CSR002_Temp2 as 							SELECT FIN_ENT,BRNCH,ACCT_NBR,CUST_NME,IN_GD_GV,IN_FED_YTD_TX,IN_FATCA_YTD_TX,NRA 							FROM ( 							SELECT T1.FIN_ENT, 								T1.BRNCH, 								T1.ACCT_NBR, 								T1.CUST_NME, 								NVL(T2.IN_GD_GV_1,0) + NVL(T2.IN_GD_GV_2,0) + NVL(T2.IN_GD_GV_3,0)  AS  IN_GD_GV, 								T2.IN_FED_YTD_TX, 								T2.IN_FATCA_YTD_TX, 								T1.NRA 							FROM CSR002_Temp1 T1 							left JOIN CSR002_BAL_PERIOD T2  ON T1.AR_ID_ITEM=T2.AR_ID_ITEM 							WHERE ('5201'='99999998' OR NVL(T1.LDBID,'') IN (SELECT EXPLODE(SPLIT('5201',',')))) 							AND ('99999998' ='99999998'  OR NVL(T1.BRNCH,'') IN (SELECT EXPLODE(SPLIT('99999998',',')))) 							) A 							WHERE IN_GD_GV > 0  OR IN_FED_YTD_TX >0  OR IN_FATCA_YTD_TX > 0 							
hive_20250729030704_e3162333-6d2f-4b64-b066-8f0535ec9490
2025-07-29 03 07  Executing command(queryId=hive_20250729030704_e3162333-6d2f-4b64-b066-8f0535ec9490)  SELECT FIN_ENT, 							BRNCH, 							ACCT_NBR AS AR_ID_ITEM, 							CUST_NME, 							IN_GD_GV as IN_GD_GV, 							IN_FED_YTD_TX  as IN_FED_YTD_TX, 							IN_FATCA_YTD_TX  as IN_FATCA_YTD_TX, 							NRA, 							pagenbr, 							dataordering, 							ceil((ROW_NUMBER() OVER (ORDER BY FIN_ENT,BRNCH,ACCT_NBR)) / '10') rowid 						FROM ( 						SELECT 							FIN_ENT, 							BRNCH, 							ACCT_NBR, 							CUST_NME, 							SUM(IN_GD_GV) AS IN_GD_GV, 							IN_FED_YTD_TX, 							IN_FATCA_YTD_TX, 							NRA, 							'1' AS pagenbr, 							'0'   AS dataordering 						FROM CSR002_Temp2 						GROUP BY FIN_ENT,BRNCH,ACCT_NBR,CUST_NME,IN_FED_YTD_TX,IN_FATCA_YTD_TX,NRA 						UNION ALL 						SELECT 							'Totals' 				AS FIN_ENT, 							'' 						AS BRNCH, 							'' 						AS ACCT_NBR, 							'' 						AS CUST_NME, 							SUM(IN_GD_GV) 			AS IN_GD_GV, 							SUM(IN_FED_YTD_TX) 		AS IN_FED_YTD_TX, 							SUM(IN_FATCA_YTD_TX) 	AS IN_FATCA_YTD_TX, 							'' 						AS NRA, 							'1' AS pagenbr, 							'1'   					AS dataordering 							FROM CSR002_Temp2 						UNION ALL 						SELECT 							'NRA Totals' 				AS FIN_ENT, 							'' 							AS BRNCH, 							'' 							AS ACCT_NBR, 							'' 							AS CUST_NME, 							SUM(IN_GD_GV) 				AS IN_GD_GV, 							SUM(IN_FED_YTD_TX) 			AS IN_FED_YTD_TX, 							SUM(IN_FATCA_YTD_TX) 		AS IN_FATCA_YTD_TX, 							'' 							AS NRA, 							'1' AS pagenbr, 							'2'   						AS dataordering 							FROM CSR002_Temp2 where NRA='Yes' 						UNION ALL 						SELECT 							'All Others' 				AS FIN_ENT, 							'' 							AS BRNCH, 							'' 							AS ACCT_NBR, 							'' 							AS CUST_NME, 							SUM(IN_GD_GV) 				AS IN_GD_GV, 							SUM(IN_FED_YTD_TX) 			AS IN_FED_YTD_TX, 							SUM(IN_FATCA_YTD_TX) 		AS IN_FATCA_YTD_TX, 							'' 							AS NRA, 							'1' AS pagenbr, 							'3'   						AS dataordering 							FROM CSR002_Temp2 where NRA <> 'Yes' 							) A 						ORDER BY pagenbr,dataordering
application_1752432472682_72452 HIVE-c66a4af4-3c28-460f-8a7f-a8552ac2b611 1904GB 238vCores
hive_20250729023527_896bb5a7-4858-49d8-bcf5-da0c25bba146
2025-07-29 02 35  Executing command(queryId=hive_20250729023527_896bb5a7-4858-49d8-bcf5-da0c25bba146)  WITH BTCH_DTE AS (select ldbid,from_unixTime(unix_timestamp(CRRNT_BATCH_DATE,'yyyy-MM-dd'),'yyyyMMdd') as dt,ADD_MONTHS(Trunc(from_unixTime(unix_timestamp(CRRNT_BATCH_DATE,'yyyy-MM-dd'),'yyyy-MM-dd'),'YY'),-12) as Tm,DATE_ADD(Trunc(from_unixTime(unix_timestamp(CRRNT_BATCH_DATE,'yyyy-MM-dd'),'yyyy-MM-dd'),'YY'),-1) as Td from uat5201_raca21.TB_PM_BATCH_RFRNC_INL) select concat(100,unix_timestamp(current_timestamp(), 'HH
application_1752432472682_72725 HIVE-7a04ca57-69f3-418c-a2ff-9bdfec7c8706 1920GB 240vCores
hive_20250729041646_5d5a745d-c370-4b48-9fde-692a850c5d13
2025-07-29 04 16  Executing command(queryId=hive_20250729041646_5d5a745d-c370-4b48-9fde-692a850c5d13)  with acc as (select a.ar_id_item ,apalt_value ,a.full_date,apadp_close_date from uat1600_racp11.RT_AR_DLY_BAL_DP_RD a join uat1600_racp11.rt_apd_ar_mstr_dp_rd rt on a.ar_id_item=rt.ar_id_item where a.full_date='20250604' and (lower(apalt_value)='active' or (apalt_value='Settled' and replace(apadp_close_date,'-','') >'20250604')) ),  acc_ytd_int_setl as (select  ar_id_item from uat1600_racp11.rt_apd_ar_mstr_dp_rd where replace(apadp_close_date,'-','') ='20250604' ) ,main_qr as ( select TRANSACTION_TYPE, cast (coalesce(count(TRANSACTION_TYPE),0) as string) cnt , cast (coalesce(round(cast (sum(TRANSACTION_AMOUNT) as decimal(26,4)),2),'0.00') as string) as TRANSACTION_AMOUNT  From (select * from (select rec_typ ,   TRANSACTION_DATE , TRANSACTION_TYPE ,coalesce(round(cast (sum(TRANSACTION_AMOUNT) as decimal(26,4)),2),'0.00') as TRANSACTION_AMOUNT,   SAVINGS_REF_NUMBER,External_REF_NUMBER from (select AR_ID_ITEM as rec_typ, date_format(PSTG_EFCTV_DATE,'MMddyyyy') as  TRANSACTION_DATE,     case when lower(psstd_code) ='clearingcheckwithdrawal' THEN '0127' when lower(psstd_code) ='remotedepositcheckexternal' THEN '0122' when lower(psstd_code) ='creditinterest' THEN '0190'   ELSE '' END as TRANSACTION_TYPE ,CASE WHEN pt_value='Debit'  THEN '-'||cast(round(abs(pstg_amt),2) as STRING) WHEN   pt_value='Credit' THEN cast(round(abs(pstg_amt),2) as STRING) end as TRANSACTION_AMOUNT,  trans_idfr as SAVINGS_REF_NUMBER, PSTG_EXT_RFRNC_ID as External_REF_NUMBER  from  uat1600_racp11.RT_PSTG_TRANS_DP_RD  where full_Date='20250604' and enart_value <> 'InternalArrangement' and lower(psstd_code) in ('remotedepositcheckexternal','clearingcheckwithdrawal','creditinterest')) a group by rec_typ ,   TRANSACTION_DATE , TRANSACTION_TYPE ,  SAVINGS_REF_NUMBER,External_REF_NUMBER) b where TRANSACTION_AMOUNT <> 0) a group by   TRANSACTION_TYPE ), trn_code as (select '0122' as trn union all select '0127' as trn union all select '0190' as trn),   int_paid_bal_cur as (select * from ( select Row_number() OVER(partition BY ar_id_item   ORDER BY full_date  desc  ) rw_nbr, ar_id_item ,intrst_paid_bal  from uat1600_racp11.rt_ar_dly_bal_dp_rd   where full_date ='20250604' )a where rw_nbr=1),int_paid_bal_prev as (select * from ( select Row_number() OVER(partition BY ar_id_item   ORDER BY full_date  desc  ) rw_nbr, ar_id_item ,intrst_paid_bal  from uat1600_racp11.rt_ar_dly_bal_dp_rd   where full_date =extract(year from cast(from_unixtime(unix_timestamp(substring('20250604', 1, 8), 'yyyyMMdd')) AS date))-1|| '1231'  )a where rw_nbr=1) ,   int_accc as (  select arid_item, full_date,glt_bkng_date,glt_efctv_date   from uat1600_racp11.TB_GNRL_LDGR_TRANS_DP_RD     where  full_date='20250604' and PECT_VALUE = 'External' and BALTT_IDFR='110000000007' and fopt_idfr in ('100000000005') and glt_bkng_date=glt_efctv_date ) ,  int_accc1 as (  select arid_item, full_date,glt_bkng_date,glt_efctv_date   from uat1600_racp11.TB_GNRL_LDGR_TRANS_DP_RD where  full_date='20250604' and PECT_VALUE = 'External' and BALTT_IDFR='110000000007' and fopt_idfr in ('100000000005') and glt_bkng_date=glt_efctv_date ), bal_dtl as (select * from ( select Row_number() OVER(partition BY ar_id_item   ORDER BY full_date desc  ) rw_nbr, ar_id_item , runng_bal ,  intrst_accrd_bal from uat1600_racp11.RT_AR_DLY_BAL_DP_RD where  full_date ='20250604'  )a where rw_nbr=1) ,main_query as (select  rt.AR_ID_ITEM   AS  rec_typ,  coalesce(round(bal_dtl.RUNNG_BAL,2),'0.00') as running_bal, CASE   WHEN dly_int_acr.arid_item_chk <> 0  then '0.000000' when (dly_int_acr.glt_cr_amt < 0 and dly_int_acr.glt_dr_amt > 0) THEN '-'|| coalesce(round(dly_int_acr.glt_dr_amt,6),'0.000000') else  coalesce(round((dly_int_acr.glt_cr_amt - dly_int_acr.glt_dr_amt),6),'0.000000')  end as dly_int_acc,  CASE   WHEN (mtd_int_acr.arid_item_chk <> 0) then '0.000000' ELSE  coalesce(round((bal_dtl.intrst_accrd_bal),6),'0.000000') end as INT_ACCRD_BAL  , coalesce(round(bal_prd.ytd_int,4),'0.0000') as ytd_int_act  from  acc RT left outer join bal_dtl on rt.ar_id_item=bal_dtl.ar_id_item  left outer join ( select a.arid_item,  coalesce(b.arid_item,0) arid_item_chk ,sum(a.glt_cr_amt) as glt_cr_amt ,  sum(a.glt_dr_amt) as glt_dr_amt From uat1600_racp11.TB_GNRL_LDGR_TRANS_DP_RD  a left outer join  int_accc b on a.arid_item=b.arid_item    where  a.full_date='20250604' and a.glt_bkng_date =cast(from_unixtime(unix_timestamp(substring('20250604', 1, 8), 'yyyyMMdd')) as date) and a.glt_bkng_date=a.glt_efctv_date     and a.PECT_VALUE = 'External' and a.BALTT_IDFR='110000000007'  and a.fopt_idfr in ('100000000004')  and a.GLAC_VALUE ='Liability'   group by a.arid_item , b.arid_item) dly_int_acr on rt.ar_id_item=dly_int_acr.arid_item  left outer join (  select a.arid_item,  coalesce(b.arid_item,0) arid_item_chk ,sum(a.glt_cr_amt) as glt_cr_amt , sum(a.glt_dr_amt) as glt_dr_amt From uat1600_racp11.TB_GNRL_LDGR_TRANS_DP_RD  a left outer join  int_accc1 b on a.arid_item=b.arid_item where  a.full_date='20250604' and a.glt_bkng_date =cast(from_unixtime(unix_timestamp(substring('20250604', 1, 8), 'yyyyMMdd')) as date)     and a.glt_bkng_date=a.glt_efctv_date and a.PECT_VALUE = 'External' and a.BALTT_IDFR='110000000007'  and a.fopt_idfr in ('100000000004') group by a.arid_item , b.arid_item ) mtd_int_acr on rt.ar_id_item=mtd_int_acr.arid_item left outer join (select cur.ar_id_item ,coalesce(round((coalesce(cur.intrst_paid_bal,'0.0000') - coalesce(prev.intrst_paid_bal,'0.0000')),4),'0.0000') as ytd_int from int_paid_bal_cur cur left outer join int_paid_bal_prev prev on cur.ar_id_item=prev.ar_id_item) bal_prd  on rt.ar_id_item=bal_prd.ar_id_item ), stl_ytd_int as (select  coalesce(sum(round(ytd_int_stl,4)),'0.0000') as ytd_int_stl from  acc_ytd_int_setl  join (select cur.ar_id_item ,coalesce(round((coalesce(cur.intrst_paid_bal,'0.0000') - coalesce(prev.intrst_paid_bal,'0.0000')),4),'0.0000') as ytd_int_stl from int_paid_bal_cur cur left outer join int_paid_bal_prev prev on cur.ar_id_item=prev.ar_id_item) bal_prd1  on acc_ytd_int_setl.ar_id_item=bal_prd1.ar_id_item) ,total_ytd_sum as (select cast(coalesce(sum(ytd_int),0.00) as decimal (17,2) ) as ytd_int from (select cast(coalesce(sum(ytd_int_act),0.00) as decimal (17,2) ) as ytd_int from  main_query union all  select cast(coalesce(sum(ytd_int_stl),0.00) as decimal (17,2) ) as ytd_int from  stl_ytd_int ) a )  Select * from (select  'Records counts for the Account master table by STATUS - Open State' as DESC,cast (coalesce(cnt,0) as string ) CNT , 1 as ord, '1' as pagenbr  from (select count(ar_id_item) as cnt from acc ) a  union all select  'Records counts for the Account master table by STATUS - Closed State' as DESC, cast (coalesce(cnt,0) as string ) CNT , 2 as ord, '1' as pagenbr  from (select coalesce(count(ar_id_item),0) as cnt from uat1600_racp11.rt_apd_ar_mstr_dp_rd where replace(apadp_close_date,'-','') ='20250604') a   union all select  'Total Interest Paid Year to date ' as DESC , cast (cast(coalesce(sum(ytd_int),0.00) as decimal (17,2) ) as string) CNT , 3 as ord, '1' as pagenbr  from total_ytd_sum union all select 'Count of Tran Type - '||trn  as DESC , cast(coalesce(cnt,0) as string) as cnt , 4 as ord, '1' as pagenbr   From trn_code a left outer join  main_qr b on a.trn=b.TRANSACTION_TYPE union all select '$Value by Tran Code - '||trn  as DESC ,    cast(coalesce(TRANSACTION_AMOUNT,'0.00') as string) cnt  , 5 as ord, '1' as pagenbr  From trn_code a left outer join  main_qr b on a.trn=b.TRANSACTION_TYPE union all  select  'Total Daily Interest Accrued Amount ' as DESC,cast (cast(coalesce(sum(dly_int_acc),0.00) as decimal (17,2) ) as string) CNT , 6 as ord, '1' as pagenbr  from main_query   union all select   'Total MTD Interest Accrued Amount ' as DESC, cast (cast(coalesce(sum(INT_ACCRD_BAL),0.00) as decimal (17,2) ) as string) CNT , 7 as ord, '1' as pagenbr  from main_query union all select  'Total Current Savings Balance Amount ' as DESC,  cast ( cast(coalesce(sum(running_bal),0.00) as decimal (17,2) ) as string) CNT , 8 as ord, '1' as pagenbr  from main_query) b order by ord  
application_1752432472682_70720 HIVE-ab12b8b0-9291-4c76-9113-0ade6d048ee4 1944GB 243vCores
hive_20250728204952_5acc7708-a3df-48db-82c9-91beff349c46
2025-07-28 20 49  Executing command(queryId=hive_20250728204952_5acc7708-a3df-48db-82c9-91beff349c46)  ALTER MATERIALIZED VIEW uat7400_racs11.MV_LN_COMP_BAL REBUILD
application_1752432472682_72576 HIVE-caf3c41a-0d11-49ef-94f6-cff81dfcdcf3 1944GB 243vCores
hive_20250729030830_10ff9b84-4969-486b-a8ca-d937c4f68738
2025-07-29 03 08  Executing command(queryId=hive_20250729030830_10ff9b84-4969-486b-a8ca-d937c4f68738)  CREATE TEMPORARY TABLE CSR006_Temp1 as 								SELECT 									MSTR.LDBID  						AS FIN_ENT, 									MSTR.ar_id_item_org_unit  			AS BRNCH, 									MSTR.AR_ID_ITEM 					AS ACCT_NBR, 									IP.NME_LNE 							AS CUST_NME, 									IP.TAX_CERT_STAT					AS TAX_CERT_STAT, 									case when (IP.tax_cert_stat like '%W-8%' OR IP.tax_cert_stat like 'W8%' OR IP.tax_cert_stat like '%NRA%' OR IP.tax_cert_stat like '%NRE%'  OR IP.tax_cert_stat like 'Foreign%') then 'Yes' else '' end AS NRA, 									MSTR.full_date 						AS MSTR_FULL_DATE, 									MSTR.AR_ID_ITEM 					AS AR_ID_ITEM, 									MSTR.LDBID 							AS LDBID 								FROM uat5201_raca21.RT_APD_AR_MSTR_DP_RD MSTR 								LEFT JOIN uat5201_raca21.TB_CUST_MSTR_IP IP ON MSTR.LDBID= IP.LDBID and MSTR.IP_ID_ITEM=IP.EC_IP_ID 								
hive_20250729030852_480d0edc-322d-4b55-bc60-746130219e3b
2025-07-29 03 08  Executing command(queryId=hive_20250729030852_480d0edc-322d-4b55-bc60-746130219e3b)  CREATE TEMPORARY TABLE CSR006_BAL_PERIOD as 							SELECT AR_ID_ITEM, 								COALESCE(collect_list(IN_GD_GV_1))[0]      AS IN_GD_GV_1, 								COALESCE(collect_list(IN_GD_GV_2))[0]      AS IN_GD_GV_2, 								COALESCE(collect_list(IN_GD_GV_3))[0]      AS IN_GD_GV_3, 								COALESCE(collect_list(IN_FED_YTD_TX))[0]   AS IN_FED_YTD_TX, 								COALESCE(collect_list(IN_FATCA_YTD_TX))[0] AS IN_FATCA_YTD_TX 							FROM ( 							SELECT  BAL_PERIOD.AR_ID_ITEM,BAL_PERIOD.BALTT_CODE, 								CASE WHEN BAL_PERIOD.BALTT_CODE = 'CustIncentiveMiscPaymentBal'    THEN SUM(NVL(BAL_PERIOD.AABPDP_AMT,0))    END AS IN_GD_GV_1, 								CASE WHEN BAL_PERIOD.BALTT_CODE = 'CustGoodwillMiscPaymentBal'     THEN SUM(NVL(BAL_PERIOD.AABPDP_AMT,0))    END AS IN_GD_GV_2, 								CASE WHEN BAL_PERIOD.BALTT_CODE = 'CustIncentiveGiftCashMiscBal'   THEN SUM(NVL(BAL_PERIOD.AABPDP_AMT,0))    END AS IN_GD_GV_3, 								CASE WHEN BAL_PERIOD.BALTT_CODE = 'IncentiveFederaltaxBalance'     THEN SUM(NVL(BAL_PERIOD.AABPDP_AMT,0))    END AS IN_FED_YTD_TX, 								CASE WHEN BAL_PERIOD.BALTT_CODE = 'IncentiveFATCATaxBalance'       THEN SUM(NVL(BAL_PERIOD.AABPDP_AMT,0))    END AS IN_FATCA_YTD_TX 							FROM uat5201_raca21.TB_APD_AR_BAL_PERIOD_DP_RD BAL_PERIOD 							WHERE BAL_PERIOD.aabpdp_batch_ts IN (SELECT MAX(BAL_PERIOD1.aabpdp_batch_ts) FROM uat5201_raca21.TB_APD_AR_BAL_PERIOD_DP_RD BAL_PERIOD1 							WHERE BAL_PERIOD.AR_ID_ITEM=BAL_PERIOD1.AR_ID_ITEM and BAL_PERIOD.BALTT_CODE=BAL_PERIOD1.BALTT_CODE AND BAL_PERIOD.ABPT_VALUE=BAL_PERIOD1.ABPT_VALUE AND SUBSTR(AABPS_END_DATE,1,4) = '2025' GROUP BY BAL_PERIOD1.AR_ID_ITEM) 							AND BAL_PERIOD.BALTT_CODE IN ('CustIncentiveMiscPaymentBal','CustGoodwillMiscPaymentBal','CustIncentiveGiftCashMiscBal','IncentiveFederaltaxBalance','IncentiveFATCATaxBalance') and ABPT_VALUE = 'Yearly' AND SUBSTR(AABPS_END_DATE,1,4) = '2025' 							GROUP BY BAL_PERIOD.AR_ID_ITEM,BAL_PERIOD.BALTT_CODE 							) dummy_tble2 							GROUP BY AR_ID_ITEM
hive_20250729031315_7250ee27-fe7b-4d9a-80ec-b961986009a5
2025-07-29 03 13  Executing command(queryId=hive_20250729031315_7250ee27-fe7b-4d9a-80ec-b961986009a5)  CREATE TEMPORARY TABLE CSR006_Temp2 as 							SELECT FIN_ENT,BRNCH,ACCT_NBR,CUST_NME,IN_GD_GV,IN_FED_YTD_TX,IN_FATCA_YTD_TX,NRA 							FROM ( 							SELECT T1.FIN_ENT, 								T1.BRNCH, 								T1.ACCT_NBR, 								T1.CUST_NME, 								NVL(T2.IN_GD_GV_1,0) + NVL(T2.IN_GD_GV_2,0) + NVL(T2.IN_GD_GV_3,0)  AS  IN_GD_GV, 								T2.IN_FED_YTD_TX, 								T2.IN_FATCA_YTD_TX, 								T1.NRA 							FROM CSR006_Temp1 T1 							left JOIN CSR006_BAL_PERIOD T2  ON T1.AR_ID_ITEM=T2.AR_ID_ITEM 							WHERE ('5201'='99999998' OR NVL(T1.LDBID,'') IN (SELECT EXPLODE(SPLIT('5201',',')))) 							AND ('99999998' ='99999998'  OR NVL(T1.BRNCH,'') IN (SELECT EXPLODE(SPLIT('99999998',',')))) 							) A 							WHERE IN_GD_GV > 0  OR IN_FED_YTD_TX >0  OR IN_FATCA_YTD_TX > 0 							
hive_20250729031318_5e0f2ef8-1dd6-4c5c-9fe7-8346daf056ec
2025-07-29 03 13  Executing command(queryId=hive_20250729031318_5e0f2ef8-1dd6-4c5c-9fe7-8346daf056ec)  SELECT FIN_ENT, 							BRNCH, 							ACCT_NBR AS AR_ID_ITEM, 							CUST_NME, 							IN_GD_GV as IN_GD_GV, 							IN_FED_YTD_TX  as IN_FED_YTD_TX, 							IN_FATCA_YTD_TX  as IN_FATCA_YTD_TX, 							NRA, 							pagenbr, 							dataordering, 							ceil((ROW_NUMBER() OVER (ORDER BY FIN_ENT,BRNCH,ACCT_NBR)) / '10') rowid 						FROM ( 						SELECT 							FIN_ENT, 							BRNCH, 							ACCT_NBR, 							CUST_NME, 							SUM(IN_GD_GV) AS IN_GD_GV, 							IN_FED_YTD_TX, 							IN_FATCA_YTD_TX, 							NRA, 							'1' AS pagenbr, 							'0'   AS dataordering 						FROM CSR006_Temp2 						GROUP BY FIN_ENT,BRNCH,ACCT_NBR,CUST_NME,IN_FED_YTD_TX,IN_FATCA_YTD_TX,NRA 						UNION ALL 						SELECT 							'Totals' 				AS FIN_ENT, 							'' 						AS BRNCH, 							'' 						AS ACCT_NBR, 							'' 						AS CUST_NME, 							SUM(IN_GD_GV) 			AS IN_GD_GV, 							SUM(IN_FED_YTD_TX) 		AS IN_FED_YTD_TX, 							SUM(IN_FATCA_YTD_TX) 	AS IN_FATCA_YTD_TX, 							'' 						AS NRA, 							'1' AS pagenbr, 							'1'   					AS dataordering 							FROM CSR006_Temp2 						UNION ALL 						SELECT 							'NRA Totals' 				AS FIN_ENT, 							'' 							AS BRNCH, 							'' 							AS ACCT_NBR, 							'' 							AS CUST_NME, 							SUM(IN_GD_GV) 				AS IN_GD_GV, 							SUM(IN_FED_YTD_TX) 			AS IN_FED_YTD_TX, 							SUM(IN_FATCA_YTD_TX) 		AS IN_FATCA_YTD_TX, 							'' 							AS NRA, 							'1' AS pagenbr, 							'2'   						AS dataordering 							FROM CSR006_Temp2 where NRA='Yes' 						UNION ALL 						SELECT 							'All Others' 				AS FIN_ENT, 							'' 							AS BRNCH, 							'' 							AS ACCT_NBR, 							'' 							AS CUST_NME, 							SUM(IN_GD_GV) 				AS IN_GD_GV, 							SUM(IN_FED_YTD_TX) 			AS IN_FED_YTD_TX, 							SUM(IN_FATCA_YTD_TX) 		AS IN_FATCA_YTD_TX, 							'' 							AS NRA, 							'1' AS pagenbr, 							'3'   						AS dataordering 							FROM CSR006_Temp2 where NRA <> 'Yes' 							) A 						ORDER BY pagenbr,dataordering
application_1752432472682_72581 HIVE-36b903ec-2e1e-48d6-a873-22f43ec7582f 2096GB 262vCores
hive_20250729031005_16350314-d7d0-4ae6-bafc-33685940156d
2025-07-29 03 10  Executing command(queryId=hive_20250729031005_16350314-d7d0-4ae6-bafc-33685940156d)  LOAD DATA INPATH '/tmp/2025_07_29/svcras1600admin/application_1752432472682_72517/27941cbb-743e-4bc0-9eee-d471a93dbdbd' OVERWRITE  INTO TABLE uat1600_racp11.TB_APD_AR_BAL_PERIOD_HIST_DP_RD_IDY
application_1752432472682_70847 HIVE-21ad1157-c291-4f09-a26f-204339431005 2272GB 284vCores
hive_20250728212106_213d4777-5fc6-454d-b961-132080b4aeba
2025-07-28 21 21  Executing command(queryId=hive_20250728212106_213d4777-5fc6-454d-b961-132080b4aeba)  CREATE TEMPORARY TABLE CSL001_Temp1 as 								SELECT  AR_MSTR.LDBID                   AS FIN_ENT, 									AR_MSTR.AR_ID_ITEM_ORG_UNIT         AS BRNCH, 									AR_MSTR.AR_ID_ITEM                  AS ACCT, 									CUST_MSTR.NME_LNE                   AS CUST_NME, 									BAL_PERIOD1.AABPTL_AMT              AS DR_FORGVN_AMT, 									BAL_PERIOD2.AABPTL_AMT              AS INT_AMT_FORGVN, 									AR_MSTR.FGVN_DEBT_DATE              AS DR_FORGVN_DTE, 									AR_MSTR.FGVN_DEBT_REASN             AS EVT_CDE, 									AR_MSTR.ARUCLR_CNSMR_RSPNSBY_IND    AS CNSMR_RESP, 									AR_MSTR.LDBID 								FROM uat7400_racs11.RT_APD_AR_MSTR_LN_RL AR_MSTR 								INNER JOIN (SELECT A1.* from uat7400_racs11.TB_APD_AR_BAL_PERIOD_LN_RL AS A1 JOIN (SELECT ARID_ITEM,MAX(aabptl_batch_date) as aabptl_batch_date FROM uat7400_racs11.TB_APD_AR_BAL_PERIOD_LN_RL WHERE BALTT_CODE = 'ForgivenDebt' and AABPTL_VALUE = 'Yearly' and aabptl_batch_date  between concat('2025','-','01' ,'-','01') AND  last_day(concat('2025','-','12' ,'-','31')) GROUP BY ARID_ITEM) AS A2 								ON  A1.ARID_ITEM = A2.ARID_ITEM and A1.aabptl_batch_date = A2.aabptl_batch_date WHERE A1.BALTT_CODE = 'ForgivenDebt' and A1.AABPTL_VALUE = 'Yearly' AND A1.aabptl_batch_date between A1.AABPTL_EFCTV_DATE and A1.AABPTL_END_DATE) AS BAL_PERIOD1 ON AR_MSTR.AR_ID_ITEM=BAL_PERIOD1.ARID_ITEM and AR_MSTR.LDBID=BAL_PERIOD1.LDBID 								INNER JOIN (SELECT B1.* from uat7400_racs11.TB_APD_AR_BAL_PERIOD_LN_RL AS B1 JOIN (SELECT ARID_ITEM,MAX(aabptl_batch_date) as aabptl_batch_date FROM uat7400_racs11.TB_APD_AR_BAL_PERIOD_LN_RL WHERE BALTT_CODE = 'ForgivenInterest' and AABPTL_VALUE = 'Yearly' and aabptl_batch_date  between concat('2025','-','01' ,'-','01') AND  last_day(concat('2025','-','12' ,'-','31')) GROUP BY ARID_ITEM ) AS B2 								ON  B1.ARID_ITEM = B2.ARID_ITEM and B1.aabptl_batch_date = B2.aabptl_batch_date WHERE B1.BALTT_CODE = 'ForgivenInterest' and B1.AABPTL_VALUE = 'Yearly' AND B1.aabptl_batch_date between B1.AABPTL_EFCTV_DATE and B1.AABPTL_END_DATE) AS BAL_PERIOD2 ON AR_MSTR.AR_ID_ITEM=BAL_PERIOD2.ARID_ITEM and AR_MSTR.LDBID=BAL_PERIOD2.LDBID 								LEFT JOIN uat7400_racs11.TB_CUST_MSTR_IP CUST_MSTR  ON  AR_MSTR.IP_ID_PRMRY = CUST_MSTR.EC_IP_ID  AND AR_MSTR.LDBID=CUST_MSTR.LDBID 								WHERE cast(AR_MSTR.full_date as string)  between concat('2025','','01' ,'','01') 								AND  replace(last_day(concat('2025','-','12' ,'-','31')),'-','') 								AND cast(AR_MSTR.APADL_VALUE as string) in ('PartialChargeOff','ChargeOff') 								
hive_20250728212316_9ac49835-3421-479c-9112-b5e92edde101
2025-07-28 21 23  Executing command(queryId=hive_20250728212316_9ac49835-3421-479c-9112-b5e92edde101)  SELECT FIN_ENT, 									BRNCH, 									ACCT, 									CUST_NME, 									DR_FORGVN_AMT, 									INT_AMT_FORGVN, 									DR_FORGVN_DTE, 									EVT_CDE, 									CNSMR_RESP, 									dataordering, 									ceil((ROW_NUMBER() OVER (ORDER BY FIN_ENT,BRNCH,ACCT)) / '10') pagenbr 								FROM( 								SELECT FIN_ENT, 									BRNCH, 									ACCT, 									CUST_NME, 									DR_FORGVN_AMT, 									INT_AMT_FORGVN, 									DR_FORGVN_DTE, 									EVT_CDE, 									CNSMR_RESP, 									LDBID, 									'0'   AS dataordering 								FROM CSL001_Temp1 								UNION ALL 								SELECT 'Total' AS FIN_ENT, 									'' AS BRNCH, 									'' AS ACCT, 									'' AS CUST_NME, 									SUM(DR_FORGVN_AMT)  AS DR_FORGVN_AMT, 									SUM(INT_AMT_FORGVN) AS INT_AMT_FORGVN, 									'' AS DR_FORGVN_DTE, 									'' AS EVT_CDE, 									'' AS CNSMR_RESP, 									LDBID, 									'1'  AS dataordering 								FROM CSL001_Temp1 								group by LDBID 								) A 								WHERE ('7400'='99999998' OR NVL(LDBID,'') IN (SELECT EXPLODE(SPLIT('7400',',')))) 								AND ('99999998' ='99999998' OR '99999998' ='' OR NVL(BRNCH,'') IN (SELECT EXPLODE(SPLIT('99999998',',')))) 								ORDER BY dataordering,FIN_ENT,BRNCH,ACCT
application_1752432472682_71183 HIVE-f79d82e2-0fca-4949-a892-84d245db7b42 2456GB 307vCores
hive_20250728233026_25269902-caa1-4f50-9153-075a23b5ff6e
2025-07-28 23 30  Executing command(queryId=hive_20250728233026_25269902-caa1-4f50-9153-075a23b5ff6e)  ALTER MATERIALIZED VIEW uat5201_raca21.VW_AR_DLY_BAL_DP_RD REBUILD
hive_20250728233727_8443454f-8f5b-4d10-8345-8f8cad0e863d
2025-07-28 23 39  Executing command(queryId=hive_20250728233727_8443454f-8f5b-4d10-8345-8f8cad0e863d)  ALTER MATERIALIZED VIEW uat5201_raca21.VW_PSTG_TRANS_DP_RD REBUILD
